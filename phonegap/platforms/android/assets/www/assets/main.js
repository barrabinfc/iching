webpackJsonp([0],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _redux = __webpack_require__(158);
	
	var _reactRedux = __webpack_require__(168);
	
	var _reactDom = __webpack_require__(179);
	
	var _reduxThunk = __webpack_require__(180);
	
	var _reduxThunk2 = _interopRequireDefault(_reduxThunk);
	
	var _reduxImmutableStateInvariant = __webpack_require__(181);
	
	var _reduxImmutableStateInvariant2 = _interopRequireDefault(_reduxImmutableStateInvariant);
	
	var _pages = __webpack_require__(185);
	
	var _history = __webpack_require__(484);
	
	var _reactRouter = __webpack_require__(240);
	
	var _reduxRouter = __webpack_require__(285);
	
	var _reducers = __webpack_require__(489);
	
	var _reducers2 = _interopRequireDefault(_reducers);
	
	var _reactTapEventPlugin = __webpack_require__(491);
	
	var _reactTapEventPlugin2 = _interopRequireDefault(_reactTapEventPlugin);
	
	__webpack_require__(496);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//import { createHistory } from 'history'
	
	
	function configureStore(initialState) {
	  var fCreateStore = (0, _redux.compose)((0, _reduxRouter.reduxReactRouter)({ createHistory: _history.createHashHistory }), (0, _redux.applyMiddleware)((0, _reduxImmutableStateInvariant2.default)(), _reduxThunk2.default), window.devToolsExtension ? window.devToolsExtension() : function (f) {
	    return f;
	  })(_redux.createStore);
	
	  var store = fCreateStore(_reducers2.default, initialState);
	
	  return store;
	}
	var store = window.store = configureStore();
	
	// <Route name="hexagram-day" path="/day" component={DayPage} />
	
	(0, _reactDom.render)(_react2.default.createElement(
	  _reactRedux.Provider,
	  { store: store },
	  _react2.default.createElement(
	    _reduxRouter.ReduxRouter,
	    null,
	    _react2.default.createElement(
	      _reactRouter.Route,
	      { path: '/', name: 'Iching of the day', component: _pages.AppContainer },
	      _react2.default.createElement(_reactRouter.Route, { name: 'hexagram-play', path: '/play', component: _pages.PlayPage }),
	      _react2.default.createElement(_reactRouter.Route, { name: 'hexagram-list', path: '/list', component: _pages.ListPage }),
	      _react2.default.createElement(_reactRouter.Route, { name: 'hexagram-details', path: '/details/:name', component: _pages.DetailPage }),
	      _react2.default.createElement(_reactRouter.IndexRoute, { component: _pages.PlayPage })
	    )
	  )
	), document.getElementById('app-mount'));
	
	/* Start tap events */
	
	(0, _reactTapEventPlugin2.default)();
	
	/* Loading complete */
	var load_el = document.getElementById('loading');
	load_el.parentNode.removeChild(load_el);
	document.body.class += 'loaded';
	
	/* Update cache */
	// Check if a new cache is available on page load.
	window.addEventListener('load', function (e) {
	
	  window.applicationCache.addEventListener('updateready', function () {
	    if (window.applicationCache.status === window.applicationCache.UPDATEREADY) {
	      // Browser downloaded a new app cache.
	      // Swap it in and reload the page to get the new hotness.
	      window.applicationCache.swapCache();
	      window.location.reload();
	    } else {
	      // Manifest didn't changed. Nothing new to server.
	    }
	  }, false);
	}, false);
	
	// force to import&compile css
	
	
	// Report Errors
	// err: error message
	// fileName: which file error occurs in
	// lineNumber: what line error occurs on
	if (true) {
	  window.onerror = function (err, fileName, lineNumber) {
	    // alert or console.log a message
	    alert(fileName, 'Line:', lineNumber, 'Error:', err.message);
	  };
	}

/***/ },
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */,
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */,
/* 94 */,
/* 95 */,
/* 96 */,
/* 97 */,
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */,
/* 107 */,
/* 108 */,
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = thunkMiddleware;
	
	function thunkMiddleware(_ref) {
	  var dispatch = _ref.dispatch;
	  var getState = _ref.getState;
	
	  return function (next) {
	    return function (action) {
	      return typeof action === 'function' ? action(dispatch, getState) : next(action);
	    };
	  };
	}
	
	module.exports = exports['default'];

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports['default'] = immutableStateInvariantMiddleware;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _invariant = __webpack_require__(178);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _jsonStringifySafe = __webpack_require__(182);
	
	var _jsonStringifySafe2 = _interopRequireDefault(_jsonStringifySafe);
	
	var _isImmutable = __webpack_require__(183);
	
	var _isImmutable2 = _interopRequireDefault(_isImmutable);
	
	var _trackForMutations = __webpack_require__(184);
	
	var _trackForMutations2 = _interopRequireDefault(_trackForMutations);
	
	var BETWEEN_DISPATCHES_MESSAGE = ['A state mutation was detected between dispatches, in the path `%s`.', 'This may cause incorrect behavior.', '(http://rackt.github.io/redux/docs/Troubleshooting.html#never-mutate-reducer-arguments)'].join(' ');
	
	var INSIDE_DISPATCH_MESSAGE = ['A state mutation was detected inside a dispatch, in the path: `%s`.', 'Take a look at the reducer(s) handling the action %s.', '(http://rackt.github.io/redux/docs/Troubleshooting.html#never-mutate-reducer-arguments)'].join(' ');
	
	function immutableStateInvariantMiddleware() {
	  var isImmutable = arguments.length <= 0 || arguments[0] === undefined ? _isImmutable2['default'] : arguments[0];
	
	  var track = _trackForMutations2['default'].bind(null, isImmutable);
	
	  return function (_ref) {
	    var getState = _ref.getState;
	
	    var state = getState();
	    var tracker = track(state);
	
	    var result = undefined;
	    return function (next) {
	      return function (action) {
	        state = getState();
	
	        result = tracker.detectMutations();
	        // Track before potentially not meeting the invariant
	        tracker = track(state);
	
	        (0, _invariant2['default'])(!result.wasMutated, BETWEEN_DISPATCHES_MESSAGE, (result.path || []).join('.'));
	
	        var dispatchedAction = next(action);
	        state = getState();
	
	        result = tracker.detectMutations();
	        // Track before potentially not meeting the invariant
	        tracker = track(state);
	
	        (0, _invariant2['default'])(!result.wasMutated, INSIDE_DISPATCH_MESSAGE, (result.path || []).join('.'), (0, _jsonStringifySafe2['default'])(action));
	
	        return dispatchedAction;
	      };
	    };
	  };
	}
	
	module.exports = exports['default'];

/***/ },
/* 182 */
/***/ function(module, exports) {

	exports = module.exports = stringify
	exports.getSerialize = serializer
	
	function stringify(obj, replacer, spaces, cycleReplacer) {
	  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)
	}
	
	function serializer(replacer, cycleReplacer) {
	  var stack = [], keys = []
	
	  if (cycleReplacer == null) cycleReplacer = function(key, value) {
	    if (stack[0] === value) return "[Circular ~]"
	    return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]"
	  }
	
	  return function(key, value) {
	    if (stack.length > 0) {
	      var thisPos = stack.indexOf(this)
	      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)
	      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)
	      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)
	    }
	    else stack.push(value)
	
	    return replacer == null ? value : replacer.call(this, key, value)
	  }
	}


/***/ },
/* 183 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports['default'] = isImmutableDefault;
	
	function isImmutableDefault(value) {
	  return typeof value !== 'object' || value === null || typeof value === 'undefined';
	}
	
	module.exports = exports['default'];

/***/ },
/* 184 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = trackForMutations;
	
	function trackForMutations(isImmutable, obj) {
	  var trackedProperties = trackProperties(isImmutable, obj);
	  return {
	    detectMutations: (function (_detectMutations) {
	      function detectMutations() {
	        return _detectMutations.apply(this, arguments);
	      }
	
	      detectMutations.toString = function () {
	        return _detectMutations.toString();
	      };
	
	      return detectMutations;
	    })(function () {
	      return detectMutations(isImmutable, trackedProperties, obj);
	    })
	  };
	}
	
	function trackProperties(isImmutable, obj) {
	  var tracked = { value: obj };
	
	  if (!isImmutable(obj)) {
	    tracked.children = {};
	
	    for (var key in obj) {
	      tracked.children[key] = trackProperties(isImmutable, obj[key]);
	    }
	  }
	  return tracked;
	}
	
	function detectMutations(isImmutable, trackedProperty, obj) {
	  var sameParentRef = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];
	  var path = arguments.length <= 4 || arguments[4] === undefined ? [] : arguments[4];
	
	  var prevObj = trackedProperty ? trackedProperty.value : undefined;
	
	  var sameRef = prevObj === obj;
	
	  if (sameParentRef && !sameRef) {
	    return { wasMutated: true, path: path };
	  }
	
	  if (isImmutable(prevObj) || isImmutable(obj)) {
	    return { wasMutated: false };
	  }
	
	  // Gather all keys from prev (tracked) and after objs
	  var keys = {};
	  Object.keys(trackedProperty.children).forEach(function (key) {
	    keys[key] = true;
	  });
	  Object.keys(obj).forEach(function (key) {
	    keys[key] = true;
	  });
	
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;
	
	  try {
	    for (var _iterator = Object.keys(keys)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      var key = _step.value;
	
	      var result = detectMutations(isImmutable, trackedProperty.children[key], obj[key], sameRef, path.concat(key));
	
	      if (result.wasMutated) {
	        return result;
	      }
	    }
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator["return"]) {
	        _iterator["return"]();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }
	
	  return { wasMutated: false };
	}
	module.exports = exports["default"];

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.DetailPage = exports.ListPage = exports.PlayPage = exports.AppContainer = undefined;
	
	var _AppContainer = __webpack_require__(186);
	
	var _AppContainer2 = _interopRequireDefault(_AppContainer);
	
	var _PlayPage = __webpack_require__(472);
	
	var _PlayPage2 = _interopRequireDefault(_PlayPage);
	
	var _ListPage = __webpack_require__(481);
	
	var _ListPage2 = _interopRequireDefault(_ListPage);
	
	var _DetailPage = __webpack_require__(482);
	
	var _DetailPage2 = _interopRequireDefault(_DetailPage);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.AppContainer = _AppContainer2.default;
	exports.PlayPage = _PlayPage2.default;
	exports.ListPage = _ListPage2.default;
	exports.DetailPage = _DetailPage2.default;

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(168);
	
	var _themeManager = __webpack_require__(187);
	
	var _themeManager2 = _interopRequireDefault(_themeManager);
	
	var _MuiTheme = __webpack_require__(238);
	
	var _MuiTheme2 = _interopRequireDefault(_MuiTheme);
	
	var _Header = __webpack_require__(239);
	
	var _Header2 = _interopRequireDefault(_Header);
	
	var _Footer = __webpack_require__(465);
	
	var _Footer2 = _interopRequireDefault(_Footer);
	
	var _reactDom = __webpack_require__(179);
	
	var _reactRouter = __webpack_require__(240);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ReactCSSTransitionGroup = __webpack_require__(466);
	
	var _require = __webpack_require__(471);
	
	var pushPath = _require.pushPath;
	
	
	var AppContainer = _react2.default.createClass({
	  displayName: 'AppContainer',
	
	  childContextTypes: {
	    muiTheme: _react2.default.PropTypes.object
	  },
	
	  getChildContext: function getChildContext() {
	    return {
	      muiTheme: _themeManager2.default.getMuiTheme(_MuiTheme2.default)
	    };
	  },
	  render: function render() {
	    return _react2.default.createElement(
	      'div',
	      { className: 'app-wrap' },
	      _react2.default.createElement(_Header2.default, null),
	      _react2.default.createElement(
	        'div',
	        { className: 'content' },
	        _react2.default.createElement(
	          ReactCSSTransitionGroup,
	          { transitionName: 'page-transition',
	            transitionEnterTimeout: 300, transitionLeaveTimeout: 300,
	            transitionAppear: true, transitionAppearTimeout: 300 },
	          this.props.children
	        )
	      ),
	      _react2.default.createElement(_Footer2.default, null)
	    );
	  }
	});
	
	//    <ReactCSSTransitionGroup component="div" transitionName="page-transition" />
	
	exports.default = (0, _reactRedux.connect)(null, { pushPath: pushPath })(AppContainer);

/***/ },
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _colors = __webpack_require__(208);
	
	var _colors2 = _interopRequireDefault(_colors);
	
	var _colorManipulator = __webpack_require__(209);
	
	var _colorManipulator2 = _interopRequireDefault(_colorManipulator);
	
	var _spacing = __webpack_require__(231);
	
	var _spacing2 = _interopRequireDefault(_spacing);
	
	var _zIndex = __webpack_require__(232);
	
	var _zIndex2 = _interopRequireDefault(_zIndex);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	  spacing: _spacing2.default,
	  zIndex: _zIndex2.default,
	  fontFamily: 'Open Sans, sans-serif',
	  palette: {
	    primary1Color: _colors2.default.pinkA200,
	    primary2Color: _colors2.default.pinkA700,
	    primary3Color: _colors2.default.lightBlack,
	    accent1Color: _colors2.default.pinkA200,
	    accent2Color: _colors2.default.grey100,
	    accent3Color: _colors2.default.grey500,
	    textColor: _colors2.default.darkBlack,
	    alternateTextColor: _colors2.default.white,
	    canvasColor: _colors2.default.white,
	    borderColor: _colors2.default.grey300,
	    disabledColor: _colorManipulator2.default.fade(_colors2.default.darkBlack, 0.3),
	    pickerHeaderColor: _colors2.default.cyan500
	  }
	};

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(240);
	
	var _reactRouter2 = _interopRequireDefault(_reactRouter);
	
	var _reactRedux = __webpack_require__(168);
	
	var _reduxRouter = __webpack_require__(285);
	
	var _HexagramActions = __webpack_require__(298);
	
	var HexagramActions = _interopRequireWildcard(_HexagramActions);
	
	var _materialUi = __webpack_require__(300);
	
	var _arrowBack = __webpack_require__(463);
	
	var _arrowBack2 = _interopRequireDefault(_arrowBack);
	
	var _brightness = __webpack_require__(464);
	
	var _brightness2 = _interopRequireDefault(_brightness);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// DEPRECATED
	
	
	var Header = _react2.default.createClass({
	  displayName: 'Header',
	  render: function render() {
	    var info = this.headerPathToTitle(this.props.path, this.props.params);
	    return _react2.default.createElement(
	      'div',
	      null,
	      _react2.default.createElement(_materialUi.AppBar, {
	        className: 'header',
	        title: info.name,
	        iconElementLeft: info.icon,
	        onLeftIconButtonTouchTap: this.handleBackButton
	      })
	    );
	  },
	  headerPathToTitle: function headerPathToTitle(path, params) {
	    /* Translate a route to it's title name */
	    if (path === '/list') {
	      return { icon: _react2.default.createElement(
	          _materialUi.IconButton,
	          { onTouchTap: this.handleBackButton, onClick: this.handleBackButton },
	          _react2.default.createElement(_arrowBack2.default, null)
	        ),
	        name: 'All Hexagrams' };
	    } else if (path === '/' || path === '/play') {
	      return { icon: _react2.default.createElement(
	          _materialUi.IconButton,
	          { onTouchTap: this.clearHexagram, onClick: this.clearHexagram },
	          _react2.default.createElement(_brightness2.default, null)
	        ),
	        name: 'I-ching oracle' };
	    } else if (path.startsWith('/details')) {
	      return { icon: _react2.default.createElement(
	          _materialUi.IconButton,
	          { onTouchTap: this.handleBackButton, onClick: this.handleBackButton },
	          _react2.default.createElement(_arrowBack2.default, null)
	        ),
	        name: '' + params.name };
	    } else {
	      return { icon: _react2.default.createElement(_materialUi.IconButton, null),
	        name: 'I-ching' };
	    }
	  },
	  handleBackButton: function handleBackButton(ev) {
	    history.back();
	  },
	  clearHexagram: function clearHexagram(ev) {
	    window.store.dispatch(HexagramActions.clearHexagram());
	  }
	});
	
	exports.default = (0, _reactRedux.connect)(function (state) {
	  return {
	    path: state.router.location.pathname,
	    params: state.router.params
	  };
	}, { pushState: _reduxRouter.pushState })(Header);

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	/* components */
	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _Router2 = __webpack_require__(241);
	
	var _Router3 = _interopRequireDefault(_Router2);
	
	exports.Router = _Router3['default'];
	
	var _Link2 = __webpack_require__(273);
	
	var _Link3 = _interopRequireDefault(_Link2);
	
	exports.Link = _Link3['default'];
	
	var _IndexLink2 = __webpack_require__(274);
	
	var _IndexLink3 = _interopRequireDefault(_IndexLink2);
	
	exports.IndexLink = _IndexLink3['default'];
	
	/* components (configuration) */
	
	var _IndexRedirect2 = __webpack_require__(275);
	
	var _IndexRedirect3 = _interopRequireDefault(_IndexRedirect2);
	
	exports.IndexRedirect = _IndexRedirect3['default'];
	
	var _IndexRoute2 = __webpack_require__(277);
	
	var _IndexRoute3 = _interopRequireDefault(_IndexRoute2);
	
	exports.IndexRoute = _IndexRoute3['default'];
	
	var _Redirect2 = __webpack_require__(276);
	
	var _Redirect3 = _interopRequireDefault(_Redirect2);
	
	exports.Redirect = _Redirect3['default'];
	
	var _Route2 = __webpack_require__(278);
	
	var _Route3 = _interopRequireDefault(_Route2);
	
	exports.Route = _Route3['default'];
	
	/* mixins */
	
	var _History2 = __webpack_require__(279);
	
	var _History3 = _interopRequireDefault(_History2);
	
	exports.History = _History3['default'];
	
	var _Lifecycle2 = __webpack_require__(280);
	
	var _Lifecycle3 = _interopRequireDefault(_Lifecycle2);
	
	exports.Lifecycle = _Lifecycle3['default'];
	
	var _RouteContext2 = __webpack_require__(281);
	
	var _RouteContext3 = _interopRequireDefault(_RouteContext2);
	
	exports.RouteContext = _RouteContext3['default'];
	
	/* utils */
	
	var _useRoutes2 = __webpack_require__(262);
	
	var _useRoutes3 = _interopRequireDefault(_useRoutes2);
	
	exports.useRoutes = _useRoutes3['default'];
	
	var _RouteUtils = __webpack_require__(258);
	
	exports.createRoutes = _RouteUtils.createRoutes;
	
	var _RoutingContext2 = __webpack_require__(259);
	
	var _RoutingContext3 = _interopRequireDefault(_RoutingContext2);
	
	exports.RoutingContext = _RoutingContext3['default'];
	
	var _PropTypes2 = __webpack_require__(272);
	
	var _PropTypes3 = _interopRequireDefault(_PropTypes2);
	
	exports.PropTypes = _PropTypes3['default'];
	
	var _match2 = __webpack_require__(282);
	
	var _match3 = _interopRequireDefault(_match2);
	
	exports.match = _match3['default'];
	
	var _Router4 = _interopRequireDefault(_Router2);
	
	exports['default'] = _Router4['default'];

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _warning = __webpack_require__(210);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _historyLibCreateHashHistory = __webpack_require__(242);
	
	var _historyLibCreateHashHistory2 = _interopRequireDefault(_historyLibCreateHashHistory);
	
	var _RouteUtils = __webpack_require__(258);
	
	var _RoutingContext = __webpack_require__(259);
	
	var _RoutingContext2 = _interopRequireDefault(_RoutingContext);
	
	var _useRoutes = __webpack_require__(262);
	
	var _useRoutes2 = _interopRequireDefault(_useRoutes);
	
	var _PropTypes = __webpack_require__(272);
	
	var _React$PropTypes = _react2['default'].PropTypes;
	var func = _React$PropTypes.func;
	var object = _React$PropTypes.object;
	
	/**
	 * A <Router> is a high-level API for automatically setting up
	 * a router that renders a <RoutingContext> with all the props
	 * it needs each time the URL changes.
	 */
	
	var Router = (function (_Component) {
	  _inherits(Router, _Component);
	
	  function Router(props, context) {
	    _classCallCheck(this, Router);
	
	    _Component.call(this, props, context);
	
	    this.state = {
	      location: null,
	      routes: null,
	      params: null,
	      components: null
	    };
	  }
	
	  Router.prototype.handleError = function handleError(error) {
	    if (this.props.onError) {
	      this.props.onError.call(this, error);
	    } else {
	      // Throw errors by default so we don't silently swallow them!
	      throw error; // This error probably occurred in getChildRoutes or getComponents.
	    }
	  };
	
	  Router.prototype.componentWillMount = function componentWillMount() {
	    var _this = this;
	
	    var _props = this.props;
	    var history = _props.history;
	    var children = _props.children;
	    var routes = _props.routes;
	    var parseQueryString = _props.parseQueryString;
	    var stringifyQuery = _props.stringifyQuery;
	
	    var createHistory = history ? function () {
	      return history;
	    } : _historyLibCreateHashHistory2['default'];
	
	    this.history = _useRoutes2['default'](createHistory)({
	      routes: _RouteUtils.createRoutes(routes || children),
	      parseQueryString: parseQueryString,
	      stringifyQuery: stringifyQuery
	    });
	
	    this._unlisten = this.history.listen(function (error, state) {
	      if (error) {
	        _this.handleError(error);
	      } else {
	        _this.setState(state, _this.props.onUpdate);
	      }
	    });
	  };
	
	  /* istanbul ignore next: sanity check */
	
	  Router.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](nextProps.history === this.props.history, 'You cannot change <Router history>; it will be ignored') : undefined;
	
	    process.env.NODE_ENV !== 'production' ? _warning2['default']((nextProps.routes || nextProps.children) === (this.props.routes || this.props.children), 'You cannot change <Router routes>; it will be ignored') : undefined;
	  };
	
	  Router.prototype.componentWillUnmount = function componentWillUnmount() {
	    if (this._unlisten) this._unlisten();
	  };
	
	  Router.prototype.render = function render() {
	    var _state = this.state;
	    var location = _state.location;
	    var routes = _state.routes;
	    var params = _state.params;
	    var components = _state.components;
	    var _props2 = this.props;
	    var RoutingContext = _props2.RoutingContext;
	    var createElement = _props2.createElement;
	
	    var props = _objectWithoutProperties(_props2, ['RoutingContext', 'createElement']);
	
	    if (location == null) return null; // Async match
	
	    // Only forward non-Router-specific props to routing context, as those are
	    // the only ones that might be custom routing context props.
	    Object.keys(Router.propTypes).forEach(function (propType) {
	      return delete props[propType];
	    });
	
	    return _react2['default'].createElement(RoutingContext, _extends({}, props, {
	      history: this.history,
	      createElement: createElement,
	      location: location,
	      routes: routes,
	      params: params,
	      components: components
	    }));
	  };
	
	  return Router;
	})(_react.Component);
	
	Router.propTypes = {
	  history: object,
	  children: _PropTypes.routes,
	  routes: _PropTypes.routes, // alias for children
	  RoutingContext: func.isRequired,
	  createElement: func,
	  onError: func,
	  onUpdate: func,
	  parseQueryString: func,
	  stringifyQuery: func
	};
	
	Router.defaultProps = {
	  RoutingContext: _RoutingContext2['default']
	};
	
	exports['default'] = Router;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(210);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(178);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _Actions = __webpack_require__(243);
	
	var _ExecutionEnvironment = __webpack_require__(244);
	
	var _DOMUtils = __webpack_require__(245);
	
	var _DOMStateStorage = __webpack_require__(246);
	
	var _createDOMHistory = __webpack_require__(247);
	
	var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);
	
	var _parsePath = __webpack_require__(254);
	
	var _parsePath2 = _interopRequireDefault(_parsePath);
	
	function isAbsolutePath(path) {
	  return typeof path === 'string' && path.charAt(0) === '/';
	}
	
	function ensureSlash() {
	  var path = _DOMUtils.getHashPath();
	
	  if (isAbsolutePath(path)) return true;
	
	  _DOMUtils.replaceHashPath('/' + path);
	
	  return false;
	}
	
	function addQueryStringValueToPath(path, key, value) {
	  return path + (path.indexOf('?') === -1 ? '?' : '&') + (key + '=' + value);
	}
	
	function stripQueryStringValueFromPath(path, key) {
	  return path.replace(new RegExp('[?&]?' + key + '=[a-zA-Z0-9]+'), '');
	}
	
	function getQueryStringValueFromPath(path, key) {
	  var match = path.match(new RegExp('\\?.*?\\b' + key + '=(.+?)\\b'));
	  return match && match[1];
	}
	
	var DefaultQueryKey = '_k';
	
	function createHashHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Hash history needs a DOM') : _invariant2['default'](false) : undefined;
	
	  var queryKey = options.queryKey;
	
	  if (queryKey === undefined || !!queryKey) queryKey = typeof queryKey === 'string' ? queryKey : DefaultQueryKey;
	
	  function getCurrentLocation() {
	    var path = _DOMUtils.getHashPath();
	
	    var key = undefined,
	        state = undefined;
	    if (queryKey) {
	      key = getQueryStringValueFromPath(path, queryKey);
	      path = stripQueryStringValueFromPath(path, queryKey);
	
	      if (key) {
	        state = _DOMStateStorage.readState(key);
	      } else {
	        state = null;
	        key = history.createKey();
	        _DOMUtils.replaceHashPath(addQueryStringValueToPath(path, queryKey, key));
	      }
	    } else {
	      key = state = null;
	    }
	
	    var location = _parsePath2['default'](path);
	
	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }
	
	  function startHashChangeListener(_ref) {
	    var transitionTo = _ref.transitionTo;
	
	    function hashChangeListener() {
	      if (!ensureSlash()) return; // Always make sure hashes are preceeded with a /.
	
	      transitionTo(getCurrentLocation());
	    }
	
	    ensureSlash();
	    _DOMUtils.addEventListener(window, 'hashchange', hashChangeListener);
	
	    return function () {
	      _DOMUtils.removeEventListener(window, 'hashchange', hashChangeListener);
	    };
	  }
	
	  function finishTransition(location) {
	    var basename = location.basename;
	    var pathname = location.pathname;
	    var search = location.search;
	    var state = location.state;
	    var action = location.action;
	    var key = location.key;
	
	    if (action === _Actions.POP) return; // Nothing to do.
	
	    var path = (basename || '') + pathname + search;
	
	    if (queryKey) {
	      path = addQueryStringValueToPath(path, queryKey, key);
	      _DOMStateStorage.saveState(key, state);
	    } else {
	      // Drop key and state.
	      location.key = location.state = null;
	    }
	
	    var currentHash = _DOMUtils.getHashPath();
	
	    if (action === _Actions.PUSH) {
	      if (currentHash !== path) {
	        window.location.hash = path;
	      } else {
	        process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'You cannot PUSH the same path using hash history') : undefined;
	      }
	    } else if (currentHash !== path) {
	      // REPLACE
	      _DOMUtils.replaceHashPath(path);
	    }
	  }
	
	  var history = _createDOMHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: _DOMStateStorage.saveState
	  }));
	
	  var listenerCount = 0,
	      stopHashChangeListener = undefined;
	
	  function listenBefore(listener) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);
	
	    var unlisten = history.listenBefore(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopHashChangeListener();
	    };
	  }
	
	  function listen(listener) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);
	
	    var unlisten = history.listen(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopHashChangeListener();
	    };
	  }
	
	  function push(location) {
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
	
	    history.push(location);
	  }
	
	  function replace(location) {
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
	
	    history.replace(location);
	  }
	
	  var goIsSupportedWithoutReload = _DOMUtils.supportsGoWithoutReloadUsingHash();
	
	  function go(n) {
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : undefined;
	
	    history.go(n);
	  }
	
	  function createHref(path) {
	    return '#' + history.createHref(path);
	  }
	
	  // deprecated
	  function registerTransitionHook(hook) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);
	
	    history.registerTransitionHook(hook);
	  }
	
	  // deprecated
	  function unregisterTransitionHook(hook) {
	    history.unregisterTransitionHook(hook);
	
	    if (--listenerCount === 0) stopHashChangeListener();
	  }
	
	  // deprecated
	  function pushState(state, path) {
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
	
	    history.pushState(state, path);
	  }
	
	  // deprecated
	  function replaceState(state, path) {
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
	
	    history.replaceState(state, path);
	  }
	
	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    push: push,
	    replace: replace,
	    go: go,
	    createHref: createHref,
	
	    registerTransitionHook: registerTransitionHook, // deprecated - warning is in createHistory
	    unregisterTransitionHook: unregisterTransitionHook, // deprecated - warning is in createHistory
	    pushState: pushState, // deprecated - warning is in createHistory
	    replaceState: replaceState // deprecated - warning is in createHistory
	  });
	}
	
	exports['default'] = createHashHistory;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 243 */
/***/ function(module, exports) {

	/**
	 * Indicates that navigation was caused by a call to history.push.
	 */
	'use strict';
	
	exports.__esModule = true;
	var PUSH = 'PUSH';
	
	exports.PUSH = PUSH;
	/**
	 * Indicates that navigation was caused by a call to history.replace.
	 */
	var REPLACE = 'REPLACE';
	
	exports.REPLACE = REPLACE;
	/**
	 * Indicates that navigation was caused by some other action such
	 * as using a browser's back/forward buttons and/or manually manipulating
	 * the URL in a browser's location bar. This is the default.
	 *
	 * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate
	 * for more information.
	 */
	var POP = 'POP';
	
	exports.POP = POP;
	exports['default'] = {
	  PUSH: PUSH,
	  REPLACE: REPLACE,
	  POP: POP
	};

/***/ },
/* 244 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	exports.canUseDOM = canUseDOM;

/***/ },
/* 245 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.addEventListener = addEventListener;
	exports.removeEventListener = removeEventListener;
	exports.getHashPath = getHashPath;
	exports.replaceHashPath = replaceHashPath;
	exports.getWindowPath = getWindowPath;
	exports.go = go;
	exports.getUserConfirmation = getUserConfirmation;
	exports.supportsHistory = supportsHistory;
	exports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;
	
	function addEventListener(node, event, listener) {
	  if (node.addEventListener) {
	    node.addEventListener(event, listener, false);
	  } else {
	    node.attachEvent('on' + event, listener);
	  }
	}
	
	function removeEventListener(node, event, listener) {
	  if (node.removeEventListener) {
	    node.removeEventListener(event, listener, false);
	  } else {
	    node.detachEvent('on' + event, listener);
	  }
	}
	
	function getHashPath() {
	  // We can't use window.location.hash here because it's not
	  // consistent across browsers - Firefox will pre-decode it!
	  return window.location.href.split('#')[1] || '';
	}
	
	function replaceHashPath(path) {
	  window.location.replace(window.location.pathname + window.location.search + '#' + path);
	}
	
	function getWindowPath() {
	  return window.location.pathname + window.location.search + window.location.hash;
	}
	
	function go(n) {
	  if (n) window.history.go(n);
	}
	
	function getUserConfirmation(message, callback) {
	  callback(window.confirm(message));
	}
	
	/**
	 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
	 *
	 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	 * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586
	 */
	
	function supportsHistory() {
	  var ua = navigator.userAgent;
	  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {
	    return false;
	  }
	  // FIXME: Work around our browser history not working correctly on Chrome
	  // iOS: https://github.com/rackt/react-router/issues/2565
	  if (ua.indexOf('CriOS') !== -1) {
	    return false;
	  }
	  return window.history && 'pushState' in window.history;
	}
	
	/**
	 * Returns false if using go(n) with hash history causes a full page reload.
	 */
	
	function supportsGoWithoutReloadUsingHash() {
	  var ua = navigator.userAgent;
	  return ua.indexOf('Firefox') === -1;
	}

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/*eslint-disable no-empty */
	'use strict';
	
	exports.__esModule = true;
	exports.saveState = saveState;
	exports.readState = readState;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(210);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var KeyPrefix = '@@History/';
	var QuotaExceededError = 'QuotaExceededError';
	var SecurityError = 'SecurityError';
	
	function createKey(key) {
	  return KeyPrefix + key;
	}
	
	function saveState(key, state) {
	  try {
	    window.sessionStorage.setItem(createKey(key), JSON.stringify(state));
	  } catch (error) {
	    if (error.name === SecurityError) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;
	
	      return;
	    }
	
	    if (error.name === QuotaExceededError && window.sessionStorage.length === 0) {
	      // Safari "private mode" throws QuotaExceededError.
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;
	
	      return;
	    }
	
	    throw error;
	  }
	}
	
	function readState(key) {
	  var json = undefined;
	  try {
	    json = window.sessionStorage.getItem(createKey(key));
	  } catch (error) {
	    if (error.name === SecurityError) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;
	
	      return null;
	    }
	  }
	
	  if (json) {
	    try {
	      return JSON.parse(json);
	    } catch (error) {
	      // Ignore invalid JSON.
	    }
	  }
	
	  return null;
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _invariant = __webpack_require__(178);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _ExecutionEnvironment = __webpack_require__(244);
	
	var _DOMUtils = __webpack_require__(245);
	
	var _createHistory = __webpack_require__(248);
	
	var _createHistory2 = _interopRequireDefault(_createHistory);
	
	function createDOMHistory(options) {
	  var history = _createHistory2['default'](_extends({
	    getUserConfirmation: _DOMUtils.getUserConfirmation
	  }, options, {
	    go: _DOMUtils.go
	  }));
	
	  function listen(listener) {
	    !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;
	
	    return history.listen(listener);
	  }
	
	  return _extends({}, history, {
	    listen: listen
	  });
	}
	
	exports['default'] = createDOMHistory;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	//import warning from 'warning'
	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _deepEqual = __webpack_require__(249);
	
	var _deepEqual2 = _interopRequireDefault(_deepEqual);
	
	var _AsyncUtils = __webpack_require__(252);
	
	var _Actions = __webpack_require__(243);
	
	var _createLocation2 = __webpack_require__(253);
	
	var _createLocation3 = _interopRequireDefault(_createLocation2);
	
	var _runTransitionHook = __webpack_require__(256);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _parsePath = __webpack_require__(254);
	
	var _parsePath2 = _interopRequireDefault(_parsePath);
	
	var _deprecate = __webpack_require__(257);
	
	var _deprecate2 = _interopRequireDefault(_deprecate);
	
	function createRandomKey(length) {
	  return Math.random().toString(36).substr(2, length);
	}
	
	function locationsAreEqual(a, b) {
	  return a.pathname === b.pathname && a.search === b.search &&
	  //a.action === b.action && // Different action !== location change.
	  a.key === b.key && _deepEqual2['default'](a.state, b.state);
	}
	
	var DefaultKeyLength = 6;
	
	function createHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var getCurrentLocation = options.getCurrentLocation;
	  var finishTransition = options.finishTransition;
	  var saveState = options.saveState;
	  var go = options.go;
	  var keyLength = options.keyLength;
	  var getUserConfirmation = options.getUserConfirmation;
	
	  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;
	
	  var transitionHooks = [];
	
	  function listenBefore(hook) {
	    transitionHooks.push(hook);
	
	    return function () {
	      transitionHooks = transitionHooks.filter(function (item) {
	        return item !== hook;
	      });
	    };
	  }
	
	  var allKeys = [];
	  var changeListeners = [];
	  var location = undefined;
	
	  function getCurrent() {
	    if (pendingLocation && pendingLocation.action === _Actions.POP) {
	      return allKeys.indexOf(pendingLocation.key);
	    } else if (location) {
	      return allKeys.indexOf(location.key);
	    } else {
	      return -1;
	    }
	  }
	
	  function updateLocation(newLocation) {
	    var current = getCurrent();
	
	    location = newLocation;
	
	    if (location.action === _Actions.PUSH) {
	      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);
	    } else if (location.action === _Actions.REPLACE) {
	      allKeys[current] = location.key;
	    }
	
	    changeListeners.forEach(function (listener) {
	      listener(location);
	    });
	  }
	
	  function listen(listener) {
	    changeListeners.push(listener);
	
	    if (location) {
	      listener(location);
	    } else {
	      var _location = getCurrentLocation();
	      allKeys = [_location.key];
	      updateLocation(_location);
	    }
	
	    return function () {
	      changeListeners = changeListeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  }
	
	  function confirmTransitionTo(location, callback) {
	    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {
	      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {
	        if (result != null) {
	          done(result);
	        } else {
	          next();
	        }
	      });
	    }, function (message) {
	      if (getUserConfirmation && typeof message === 'string') {
	        getUserConfirmation(message, function (ok) {
	          callback(ok !== false);
	        });
	      } else {
	        callback(message !== false);
	      }
	    });
	  }
	
	  var pendingLocation = undefined;
	
	  function transitionTo(nextLocation) {
	    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.
	
	    pendingLocation = nextLocation;
	
	    confirmTransitionTo(nextLocation, function (ok) {
	      if (pendingLocation !== nextLocation) return; // Transition was interrupted.
	
	      if (ok) {
	        // treat PUSH to current path like REPLACE to be consistent with browsers
	        if (nextLocation.action === _Actions.PUSH) {
	          var prevPath = createPath(location);
	          var nextPath = createPath(nextLocation);
	
	          if (nextPath === prevPath) nextLocation.action = _Actions.REPLACE;
	        }
	
	        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);
	      } else if (location && nextLocation.action === _Actions.POP) {
	        var prevIndex = allKeys.indexOf(location.key);
	        var nextIndex = allKeys.indexOf(nextLocation.key);
	
	        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.
	      }
	    });
	  }
	
	  function push(location) {
	    transitionTo(createLocation(location, _Actions.PUSH, createKey()));
	  }
	
	  function replace(location) {
	    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));
	  }
	
	  function goBack() {
	    go(-1);
	  }
	
	  function goForward() {
	    go(1);
	  }
	
	  function createKey() {
	    return createRandomKey(keyLength);
	  }
	
	  function createPath(location) {
	    if (location == null || typeof location === 'string') return location;
	
	    var pathname = location.pathname;
	    var search = location.search;
	    var hash = location.hash;
	
	    var result = pathname;
	
	    if (search) result += search;
	
	    if (hash) result += hash;
	
	    return result;
	  }
	
	  function createHref(location) {
	    return createPath(location);
	  }
	
	  function createLocation(location, action) {
	    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];
	
	    if (typeof action === 'object') {
	      //warning(
	      //  false,
	      //  'The state (2nd) argument to history.createLocation is deprecated; use a ' +
	      //  'location descriptor instead'
	      //)
	
	      if (typeof location === 'string') location = _parsePath2['default'](location);
	
	      location = _extends({}, location, { state: action });
	
	      action = key;
	      key = arguments[3] || createKey();
	    }
	
	    return _createLocation3['default'](location, action, key);
	  }
	
	  // deprecated
	  function setState(state) {
	    if (location) {
	      updateLocationState(location, state);
	      updateLocation(location);
	    } else {
	      updateLocationState(getCurrentLocation(), state);
	    }
	  }
	
	  function updateLocationState(location, state) {
	    location.state = _extends({}, location.state, state);
	    saveState(location.key, location.state);
	  }
	
	  // deprecated
	  function registerTransitionHook(hook) {
	    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);
	  }
	
	  // deprecated
	  function unregisterTransitionHook(hook) {
	    transitionHooks = transitionHooks.filter(function (item) {
	      return item !== hook;
	    });
	  }
	
	  // deprecated
	  function pushState(state, path) {
	    if (typeof path === 'string') path = _parsePath2['default'](path);
	
	    push(_extends({ state: state }, path));
	  }
	
	  // deprecated
	  function replaceState(state, path) {
	    if (typeof path === 'string') path = _parsePath2['default'](path);
	
	    replace(_extends({ state: state }, path));
	  }
	
	  return {
	    listenBefore: listenBefore,
	    listen: listen,
	    transitionTo: transitionTo,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    createKey: createKey,
	    createPath: createPath,
	    createHref: createHref,
	    createLocation: createLocation,
	
	    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),
	    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),
	    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),
	    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	  };
	}
	
	exports['default'] = createHistory;
	module.exports = exports['default'];

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	var pSlice = Array.prototype.slice;
	var objectKeys = __webpack_require__(250);
	var isArguments = __webpack_require__(251);
	
	var deepEqual = module.exports = function (actual, expected, opts) {
	  if (!opts) opts = {};
	  // 7.1. All identical values are equivalent, as determined by ===.
	  if (actual === expected) {
	    return true;
	
	  } else if (actual instanceof Date && expected instanceof Date) {
	    return actual.getTime() === expected.getTime();
	
	  // 7.3. Other pairs that do not both pass typeof value == 'object',
	  // equivalence is determined by ==.
	  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
	    return opts.strict ? actual === expected : actual == expected;
	
	  // 7.4. For all other Object pairs, including Array objects, equivalence is
	  // determined by having the same number of owned properties (as verified
	  // with Object.prototype.hasOwnProperty.call), the same set of keys
	  // (although not necessarily the same order), equivalent values for every
	  // corresponding key, and an identical 'prototype' property. Note: this
	  // accounts for both named and indexed properties on Arrays.
	  } else {
	    return objEquiv(actual, expected, opts);
	  }
	}
	
	function isUndefinedOrNull(value) {
	  return value === null || value === undefined;
	}
	
	function isBuffer (x) {
	  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
	  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
	    return false;
	  }
	  if (x.length > 0 && typeof x[0] !== 'number') return false;
	  return true;
	}
	
	function objEquiv(a, b, opts) {
	  var i, key;
	  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
	    return false;
	  // an identical 'prototype' property.
	  if (a.prototype !== b.prototype) return false;
	  //~~~I've managed to break Object.keys through screwy arguments passing.
	  //   Converting to array solves the problem.
	  if (isArguments(a)) {
	    if (!isArguments(b)) {
	      return false;
	    }
	    a = pSlice.call(a);
	    b = pSlice.call(b);
	    return deepEqual(a, b, opts);
	  }
	  if (isBuffer(a)) {
	    if (!isBuffer(b)) {
	      return false;
	    }
	    if (a.length !== b.length) return false;
	    for (i = 0; i < a.length; i++) {
	      if (a[i] !== b[i]) return false;
	    }
	    return true;
	  }
	  try {
	    var ka = objectKeys(a),
	        kb = objectKeys(b);
	  } catch (e) {//happens when one is a string literal and the other isn't
	    return false;
	  }
	  // having the same number of owned properties (keys incorporates
	  // hasOwnProperty)
	  if (ka.length != kb.length)
	    return false;
	  //the same set of keys (although not necessarily the same order),
	  ka.sort();
	  kb.sort();
	  //~~~cheap key test
	  for (i = ka.length - 1; i >= 0; i--) {
	    if (ka[i] != kb[i])
	      return false;
	  }
	  //equivalent values for every corresponding key, and
	  //~~~possibly expensive deep test
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!deepEqual(a[key], b[key], opts)) return false;
	  }
	  return typeof a === typeof b;
	}


/***/ },
/* 250 */
/***/ function(module, exports) {

	exports = module.exports = typeof Object.keys === 'function'
	  ? Object.keys : shim;
	
	exports.shim = shim;
	function shim (obj) {
	  var keys = [];
	  for (var key in obj) keys.push(key);
	  return keys;
	}


/***/ },
/* 251 */
/***/ function(module, exports) {

	var supportsArgumentsClass = (function(){
	  return Object.prototype.toString.call(arguments)
	})() == '[object Arguments]';
	
	exports = module.exports = supportsArgumentsClass ? supported : unsupported;
	
	exports.supported = supported;
	function supported(object) {
	  return Object.prototype.toString.call(object) == '[object Arguments]';
	};
	
	exports.unsupported = unsupported;
	function unsupported(object){
	  return object &&
	    typeof object == 'object' &&
	    typeof object.length == 'number' &&
	    Object.prototype.hasOwnProperty.call(object, 'callee') &&
	    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
	    false;
	};


/***/ },
/* 252 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.loopAsync = loopAsync;
	
	function loopAsync(turns, work, callback) {
	  var currentTurn = 0;
	  var isDone = false;
	
	  function done() {
	    isDone = true;
	    callback.apply(this, arguments);
	  }
	
	  function next() {
	    if (isDone) return;
	
	    if (currentTurn < turns) {
	      work.call(this, currentTurn++, next, done);
	    } else {
	      done.apply(this, arguments);
	    }
	  }
	
	  next();
	}

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	//import warning from 'warning'
	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _Actions = __webpack_require__(243);
	
	var _parsePath = __webpack_require__(254);
	
	var _parsePath2 = _interopRequireDefault(_parsePath);
	
	function createLocation() {
	  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];
	  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];
	  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];
	
	  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];
	
	  if (typeof location === 'string') location = _parsePath2['default'](location);
	
	  if (typeof action === 'object') {
	    //warning(
	    //  false,
	    //  'The state (2nd) argument to createLocation is deprecated; use a ' +
	    //  'location descriptor instead'
	    //)
	
	    location = _extends({}, location, { state: action });
	
	    action = key || _Actions.POP;
	    key = _fourthArg;
	  }
	
	  var pathname = location.pathname || '/';
	  var search = location.search || '';
	  var hash = location.hash || '';
	  var state = location.state || null;
	
	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash,
	    state: state,
	    action: action,
	    key: key
	  };
	}
	
	exports['default'] = createLocation;
	module.exports = exports['default'];

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(210);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _extractPath = __webpack_require__(255);
	
	var _extractPath2 = _interopRequireDefault(_extractPath);
	
	function parsePath(path) {
	  var pathname = _extractPath2['default'](path);
	  var search = '';
	  var hash = '';
	
	  process.env.NODE_ENV !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like "%s"', path) : undefined;
	
	  var hashIndex = pathname.indexOf('#');
	  if (hashIndex !== -1) {
	    hash = pathname.substring(hashIndex);
	    pathname = pathname.substring(0, hashIndex);
	  }
	
	  var searchIndex = pathname.indexOf('?');
	  if (searchIndex !== -1) {
	    search = pathname.substring(searchIndex);
	    pathname = pathname.substring(0, searchIndex);
	  }
	
	  if (pathname === '') pathname = '/';
	
	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash
	  };
	}
	
	exports['default'] = parsePath;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 255 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	function extractPath(string) {
	  var match = string.match(/^https?:\/\/[^\/]*/);
	
	  if (match == null) return string;
	
	  return string.substring(match[0].length);
	}
	
	exports["default"] = extractPath;
	module.exports = exports["default"];

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(210);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function runTransitionHook(hook, location, callback) {
	  var result = hook(location, callback);
	
	  if (hook.length < 2) {
	    // Assume the hook runs synchronously and automatically
	    // call the callback with the return value.
	    callback(result);
	  } else {
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](result === undefined, 'You should not "return" in a transition hook with a callback argument; call the callback instead') : undefined;
	  }
	}
	
	exports['default'] = runTransitionHook;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 257 */
/***/ function(module, exports) {

	//import warning from 'warning'
	
	"use strict";
	
	exports.__esModule = true;
	function deprecate(fn) {
	  return fn;
	  //return function () {
	  //  warning(false, '[history] ' + message)
	  //  return fn.apply(this, arguments)
	  //}
	}
	
	exports["default"] = deprecate;
	module.exports = exports["default"];

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.isReactChildren = isReactChildren;
	exports.createRouteFromReactElement = createRouteFromReactElement;
	exports.createRoutesFromReactChildren = createRoutesFromReactChildren;
	exports.createRoutes = createRoutes;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _warning = __webpack_require__(210);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function isValidChild(object) {
	  return object == null || _react2['default'].isValidElement(object);
	}
	
	function isReactChildren(object) {
	  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);
	}
	
	function checkPropTypes(componentName, propTypes, props) {
	  componentName = componentName || 'UnknownComponent';
	
	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error = propTypes[propName](props, propName, componentName);
	
	      /* istanbul ignore if: error logging */
	      if (error instanceof Error) process.env.NODE_ENV !== 'production' ? _warning2['default'](false, error.message) : undefined;
	    }
	  }
	}
	
	function createRoute(defaultProps, props) {
	  return _extends({}, defaultProps, props);
	}
	
	function createRouteFromReactElement(element) {
	  var type = element.type;
	  var route = createRoute(type.defaultProps, element.props);
	
	  if (type.propTypes) checkPropTypes(type.displayName || type.name, type.propTypes, route);
	
	  if (route.children) {
	    var childRoutes = createRoutesFromReactChildren(route.children, route);
	
	    if (childRoutes.length) route.childRoutes = childRoutes;
	
	    delete route.children;
	  }
	
	  return route;
	}
	
	/**
	 * Creates and returns a routes object from the given ReactChildren. JSX
	 * provides a convenient way to visualize how routes in the hierarchy are
	 * nested.
	 *
	 *   import { Route, createRoutesFromReactChildren } from 'react-router'
	 *   
	 *   const routes = createRoutesFromReactChildren(
	 *     <Route component={App}>
	 *       <Route path="home" component={Dashboard}/>
	 *       <Route path="news" component={NewsFeed}/>
	 *     </Route>
	 *   )
	 *
	 * Note: This method is automatically used when you provide <Route> children
	 * to a <Router> component.
	 */
	
	function createRoutesFromReactChildren(children, parentRoute) {
	  var routes = [];
	
	  _react2['default'].Children.forEach(children, function (element) {
	    if (_react2['default'].isValidElement(element)) {
	      // Component classes may have a static create* method.
	      if (element.type.createRouteFromReactElement) {
	        var route = element.type.createRouteFromReactElement(element, parentRoute);
	
	        if (route) routes.push(route);
	      } else {
	        routes.push(createRouteFromReactElement(element));
	      }
	    }
	  });
	
	  return routes;
	}
	
	/**
	 * Creates and returns an array of routes from the given object which
	 * may be a JSX route, a plain object route, or an array of either.
	 */
	
	function createRoutes(routes) {
	  if (isReactChildren(routes)) {
	    routes = createRoutesFromReactChildren(routes);
	  } else if (routes && !Array.isArray(routes)) {
	    routes = [routes];
	  }
	
	  return routes;
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _invariant = __webpack_require__(178);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _RouteUtils = __webpack_require__(258);
	
	var _getRouteParams = __webpack_require__(260);
	
	var _getRouteParams2 = _interopRequireDefault(_getRouteParams);
	
	var _React$PropTypes = _react2['default'].PropTypes;
	var array = _React$PropTypes.array;
	var func = _React$PropTypes.func;
	var object = _React$PropTypes.object;
	
	/**
	 * A <RoutingContext> renders the component tree for a given router state
	 * and sets the history object and the current location in context.
	 */
	
	var RoutingContext = (function (_Component) {
	  _inherits(RoutingContext, _Component);
	
	  function RoutingContext() {
	    _classCallCheck(this, RoutingContext);
	
	    _Component.apply(this, arguments);
	  }
	
	  RoutingContext.prototype.getChildContext = function getChildContext() {
	    var _props = this.props;
	    var history = _props.history;
	    var location = _props.location;
	
	    return { history: history, location: location };
	  };
	
	  RoutingContext.prototype.createElement = function createElement(component, props) {
	    return component == null ? null : this.props.createElement(component, props);
	  };
	
	  RoutingContext.prototype.render = function render() {
	    var _this = this;
	
	    var _props2 = this.props;
	    var history = _props2.history;
	    var location = _props2.location;
	    var routes = _props2.routes;
	    var params = _props2.params;
	    var components = _props2.components;
	
	    var element = null;
	
	    if (components) {
	      element = components.reduceRight(function (element, components, index) {
	        if (components == null) return element; // Don't create new children; use the grandchildren.
	
	        var route = routes[index];
	        var routeParams = _getRouteParams2['default'](route, params);
	        var props = {
	          history: history,
	          location: location,
	          params: params,
	          route: route,
	          routeParams: routeParams,
	          routes: routes
	        };
	
	        if (_RouteUtils.isReactChildren(element)) {
	          props.children = element;
	        } else if (element) {
	          for (var prop in element) {
	            if (element.hasOwnProperty(prop)) props[prop] = element[prop];
	          }
	        }
	
	        if (typeof components === 'object') {
	          var elements = {};
	
	          for (var key in components) {
	            if (components.hasOwnProperty(key)) {
	              // Pass through the key as a prop to createElement to allow
	              // custom createElement functions to know which named component
	              // they're rendering, for e.g. matching up to fetched data.
	              elements[key] = _this.createElement(components[key], _extends({
	                key: key }, props));
	            }
	          }
	
	          return elements;
	        }
	
	        return _this.createElement(components, props);
	      }, element);
	    }
	
	    !(element === null || element === false || _react2['default'].isValidElement(element)) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'The root route must render a single element') : _invariant2['default'](false) : undefined;
	
	    return element;
	  };
	
	  return RoutingContext;
	})(_react.Component);
	
	RoutingContext.propTypes = {
	  history: object.isRequired,
	  createElement: func.isRequired,
	  location: object.isRequired,
	  routes: array.isRequired,
	  params: object.isRequired,
	  components: array.isRequired
	};
	
	RoutingContext.defaultProps = {
	  createElement: _react2['default'].createElement
	};
	
	RoutingContext.childContextTypes = {
	  history: object.isRequired,
	  location: object.isRequired
	};
	
	exports['default'] = RoutingContext;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _PatternUtils = __webpack_require__(261);
	
	/**
	 * Extracts an object of params the given route cares about from
	 * the given params object.
	 */
	function getRouteParams(route, params) {
	  var routeParams = {};
	
	  if (!route.path) return routeParams;
	
	  var paramNames = _PatternUtils.getParamNames(route.path);
	
	  for (var p in params) {
	    if (params.hasOwnProperty(p) && paramNames.indexOf(p) !== -1) routeParams[p] = params[p];
	  }return routeParams;
	}
	
	exports['default'] = getRouteParams;
	module.exports = exports['default'];

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	exports.compilePattern = compilePattern;
	exports.matchPattern = matchPattern;
	exports.getParamNames = getParamNames;
	exports.getParams = getParams;
	exports.formatPattern = formatPattern;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _invariant = __webpack_require__(178);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function escapeRegExp(string) {
	  return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
	}
	
	function escapeSource(string) {
	  return escapeRegExp(string).replace(/\/+/g, '/+');
	}
	
	function _compilePattern(pattern) {
	  var regexpSource = '';
	  var paramNames = [];
	  var tokens = [];
	
	  var match = undefined,
	      lastIndex = 0,
	      matcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|\*\*|\*|\(|\)/g;
	  while (match = matcher.exec(pattern)) {
	    if (match.index !== lastIndex) {
	      tokens.push(pattern.slice(lastIndex, match.index));
	      regexpSource += escapeSource(pattern.slice(lastIndex, match.index));
	    }
	
	    if (match[1]) {
	      regexpSource += '([^/?#]+)';
	      paramNames.push(match[1]);
	    } else if (match[0] === '**') {
	      regexpSource += '([\\s\\S]*)';
	      paramNames.push('splat');
	    } else if (match[0] === '*') {
	      regexpSource += '([\\s\\S]*?)';
	      paramNames.push('splat');
	    } else if (match[0] === '(') {
	      regexpSource += '(?:';
	    } else if (match[0] === ')') {
	      regexpSource += ')?';
	    }
	
	    tokens.push(match[0]);
	
	    lastIndex = matcher.lastIndex;
	  }
	
	  if (lastIndex !== pattern.length) {
	    tokens.push(pattern.slice(lastIndex, pattern.length));
	    regexpSource += escapeSource(pattern.slice(lastIndex, pattern.length));
	  }
	
	  return {
	    pattern: pattern,
	    regexpSource: regexpSource,
	    paramNames: paramNames,
	    tokens: tokens
	  };
	}
	
	var CompiledPatternsCache = {};
	
	function compilePattern(pattern) {
	  if (!(pattern in CompiledPatternsCache)) CompiledPatternsCache[pattern] = _compilePattern(pattern);
	
	  return CompiledPatternsCache[pattern];
	}
	
	/**
	 * Attempts to match a pattern on the given pathname. Patterns may use
	 * the following special characters:
	 *
	 * - :paramName     Matches a URL segment up to the next /, ?, or #. The
	 *                  captured string is considered a "param"
	 * - ()             Wraps a segment of the URL that is optional
	 * - *              Consumes (non-greedy) all characters up to the next
	 *                  character in the pattern, or to the end of the URL if
	 *                  there is none
	 * - **             Consumes (greedy) all characters up to the next character
	 *                  in the pattern, or to the end of the URL if there is none
	 *
	 * The return value is an object with the following properties:
	 *
	 * - remainingPathname
	 * - paramNames
	 * - paramValues
	 */
	
	function matchPattern(pattern, pathname) {
	  // Make leading slashes consistent between pattern and pathname.
	  if (pattern.charAt(0) !== '/') {
	    pattern = '/' + pattern;
	  }
	  if (pathname.charAt(0) !== '/') {
	    pathname = '/' + pathname;
	  }
	
	  var _compilePattern2 = compilePattern(pattern);
	
	  var regexpSource = _compilePattern2.regexpSource;
	  var paramNames = _compilePattern2.paramNames;
	  var tokens = _compilePattern2.tokens;
	
	  regexpSource += '/*'; // Capture path separators
	
	  // Special-case patterns like '*' for catch-all routes.
	  var captureRemaining = tokens[tokens.length - 1] !== '*';
	
	  if (captureRemaining) {
	    // This will match newlines in the remaining path.
	    regexpSource += '([\\s\\S]*?)';
	  }
	
	  var match = pathname.match(new RegExp('^' + regexpSource + '$', 'i'));
	
	  var remainingPathname = undefined,
	      paramValues = undefined;
	  if (match != null) {
	    if (captureRemaining) {
	      remainingPathname = match.pop();
	      var matchedPath = match[0].substr(0, match[0].length - remainingPathname.length);
	
	      // If we didn't match the entire pathname, then make sure that the match
	      // we did get ends at a path separator (potentially the one we added
	      // above at the beginning of the path, if the actual match was empty).
	      if (remainingPathname && matchedPath.charAt(matchedPath.length - 1) !== '/') {
	        return {
	          remainingPathname: null,
	          paramNames: paramNames,
	          paramValues: null
	        };
	      }
	    } else {
	      // If this matched at all, then the match was the entire pathname.
	      remainingPathname = '';
	    }
	
	    paramValues = match.slice(1).map(function (v) {
	      return v != null ? decodeURIComponent(v) : v;
	    });
	  } else {
	    remainingPathname = paramValues = null;
	  }
	
	  return {
	    remainingPathname: remainingPathname,
	    paramNames: paramNames,
	    paramValues: paramValues
	  };
	}
	
	function getParamNames(pattern) {
	  return compilePattern(pattern).paramNames;
	}
	
	function getParams(pattern, pathname) {
	  var _matchPattern = matchPattern(pattern, pathname);
	
	  var paramNames = _matchPattern.paramNames;
	  var paramValues = _matchPattern.paramValues;
	
	  if (paramValues != null) {
	    return paramNames.reduce(function (memo, paramName, index) {
	      memo[paramName] = paramValues[index];
	      return memo;
	    }, {});
	  }
	
	  return null;
	}
	
	/**
	 * Returns a version of the given pattern with params interpolated. Throws
	 * if there is a dynamic segment of the pattern for which there is no param.
	 */
	
	function formatPattern(pattern, params) {
	  params = params || {};
	
	  var _compilePattern3 = compilePattern(pattern);
	
	  var tokens = _compilePattern3.tokens;
	
	  var parenCount = 0,
	      pathname = '',
	      splatIndex = 0;
	
	  var token = undefined,
	      paramName = undefined,
	      paramValue = undefined;
	  for (var i = 0, len = tokens.length; i < len; ++i) {
	    token = tokens[i];
	
	    if (token === '*' || token === '**') {
	      paramValue = Array.isArray(params.splat) ? params.splat[splatIndex++] : params.splat;
	
	      !(paramValue != null || parenCount > 0) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Missing splat #%s for path "%s"', splatIndex, pattern) : _invariant2['default'](false) : undefined;
	
	      if (paramValue != null) pathname += encodeURI(paramValue);
	    } else if (token === '(') {
	      parenCount += 1;
	    } else if (token === ')') {
	      parenCount -= 1;
	    } else if (token.charAt(0) === ':') {
	      paramName = token.substring(1);
	      paramValue = params[paramName];
	
	      !(paramValue != null || parenCount > 0) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Missing "%s" parameter for path "%s"', paramName, pattern) : _invariant2['default'](false) : undefined;
	
	      if (paramValue != null) pathname += encodeURIComponent(paramValue);
	    } else {
	      pathname += token;
	    }
	  }
	
	  return pathname.replace(/\/+/g, '/');
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var _warning = __webpack_require__(210);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _historyLibActions = __webpack_require__(243);
	
	var _historyLibUseQueries = __webpack_require__(263);
	
	var _historyLibUseQueries2 = _interopRequireDefault(_historyLibUseQueries);
	
	var _computeChangedRoutes2 = __webpack_require__(266);
	
	var _computeChangedRoutes3 = _interopRequireDefault(_computeChangedRoutes2);
	
	var _TransitionUtils = __webpack_require__(267);
	
	var _isActive2 = __webpack_require__(269);
	
	var _isActive3 = _interopRequireDefault(_isActive2);
	
	var _getComponents = __webpack_require__(270);
	
	var _getComponents2 = _interopRequireDefault(_getComponents);
	
	var _matchRoutes = __webpack_require__(271);
	
	var _matchRoutes2 = _interopRequireDefault(_matchRoutes);
	
	function hasAnyProperties(object) {
	  for (var p in object) {
	    if (object.hasOwnProperty(p)) return true;
	  }return false;
	}
	
	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know about routing.
	 *
	 * Enhances history objects with the following methods:
	 *
	 * - listen((error, nextState) => {})
	 * - listenBeforeLeavingRoute(route, (nextLocation) => {})
	 * - match(location, (error, redirectLocation, nextState) => {})
	 * - isActive(pathname, query, indexOnly=false)
	 */
	function useRoutes(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var routes = options.routes;
	
	    var historyOptions = _objectWithoutProperties(options, ['routes']);
	
	    var history = _historyLibUseQueries2['default'](createHistory)(historyOptions);
	    var state = {};
	
	    function isActive(pathname, query) {
	      var indexOnly = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];
	
	      return _isActive3['default'](pathname, query, indexOnly, state.location, state.routes, state.params);
	    }
	
	    function createLocationFromRedirectInfo(_ref) {
	      var pathname = _ref.pathname;
	      var query = _ref.query;
	      var state = _ref.state;
	
	      return history.createLocation(history.createPath(pathname, query), state, _historyLibActions.REPLACE);
	    }
	
	    var partialNextState = undefined;
	
	    function match(location, callback) {
	      if (partialNextState && partialNextState.location === location) {
	        // Continue from where we left off.
	        finishMatch(partialNextState, callback);
	      } else {
	        _matchRoutes2['default'](routes, location, function (error, nextState) {
	          if (error) {
	            callback(error);
	          } else if (nextState) {
	            finishMatch(_extends({}, nextState, { location: location }), callback);
	          } else {
	            callback();
	          }
	        });
	      }
	    }
	
	    function finishMatch(nextState, callback) {
	      var _computeChangedRoutes = _computeChangedRoutes3['default'](state, nextState);
	
	      var leaveRoutes = _computeChangedRoutes.leaveRoutes;
	      var enterRoutes = _computeChangedRoutes.enterRoutes;
	
	      _TransitionUtils.runLeaveHooks(leaveRoutes);
	
	      _TransitionUtils.runEnterHooks(enterRoutes, nextState, function (error, redirectInfo) {
	        if (error) {
	          callback(error);
	        } else if (redirectInfo) {
	          callback(null, createLocationFromRedirectInfo(redirectInfo));
	        } else {
	          // TODO: Fetch components after state is updated.
	          _getComponents2['default'](nextState, function (error, components) {
	            if (error) {
	              callback(error);
	            } else {
	              // TODO: Make match a pure function and have some other API
	              // for "match and update state".
	              callback(null, null, state = _extends({}, nextState, { components: components }));
	            }
	          });
	        }
	      });
	    }
	
	    var RouteGuid = 1;
	
	    function getRouteID(route) {
	      return route.__id__ || (route.__id__ = RouteGuid++);
	    }
	
	    var RouteHooks = {};
	
	    function getRouteHooksForRoutes(routes) {
	      return routes.reduce(function (hooks, route) {
	        hooks.push.apply(hooks, RouteHooks[getRouteID(route)]);
	        return hooks;
	      }, []);
	    }
	
	    function transitionHook(location, callback) {
	      _matchRoutes2['default'](routes, location, function (error, nextState) {
	        if (nextState == null) {
	          // TODO: We didn't actually match anything, but hang
	          // onto error/nextState so we don't have to matchRoutes
	          // again in the listen callback.
	          callback();
	          return;
	        }
	
	        // Cache some state here so we don't have to
	        // matchRoutes() again in the listen callback.
	        partialNextState = _extends({}, nextState, { location: location });
	
	        var hooks = getRouteHooksForRoutes(_computeChangedRoutes3['default'](state, partialNextState).leaveRoutes);
	
	        var result = undefined;
	        for (var i = 0, len = hooks.length; result == null && i < len; ++i) {
	          // Passing the location arg here indicates to
	          // the user that this is a transition hook.
	          result = hooks[i](location);
	        }
	
	        callback(result);
	      });
	    }
	
	    function beforeUnloadHook() {
	      // Synchronously check to see if any route hooks want
	      // to prevent the current window/tab from closing.
	      if (state.routes) {
	        var hooks = getRouteHooksForRoutes(state.routes);
	
	        var message = undefined;
	        for (var i = 0, len = hooks.length; typeof message !== 'string' && i < len; ++i) {
	          // Passing no args indicates to the user that this is a
	          // beforeunload hook. We don't know the next location.
	          message = hooks[i]();
	        }
	
	        return message;
	      }
	    }
	
	    var unlistenBefore = undefined,
	        unlistenBeforeUnload = undefined;
	
	    /**
	     * Registers the given hook function to run before leaving the given route.
	     *
	     * During a normal transition, the hook function receives the next location
	     * as its only argument and must return either a) a prompt message to show
	     * the user, to make sure they want to leave the page or b) false, to prevent
	     * the transition.
	     *
	     * During the beforeunload event (in browsers) the hook receives no arguments.
	     * In this case it must return a prompt message to prevent the transition.
	     *
	     * Returns a function that may be used to unbind the listener.
	     */
	    function listenBeforeLeavingRoute(route, hook) {
	      // TODO: Warn if they register for a route that isn't currently
	      // active. They're probably doing something wrong, like re-creating
	      // route objects on every location change.
	      var routeID = getRouteID(route);
	      var hooks = RouteHooks[routeID];
	
	      if (hooks == null) {
	        var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);
	
	        hooks = RouteHooks[routeID] = [hook];
	
	        if (thereWereNoRouteHooks) {
	          // setup transition & beforeunload hooks
	          unlistenBefore = history.listenBefore(transitionHook);
	
	          if (history.listenBeforeUnload) unlistenBeforeUnload = history.listenBeforeUnload(beforeUnloadHook);
	        }
	      } else if (hooks.indexOf(hook) === -1) {
	        hooks.push(hook);
	      }
	
	      return function () {
	        var hooks = RouteHooks[routeID];
	
	        if (hooks != null) {
	          var newHooks = hooks.filter(function (item) {
	            return item !== hook;
	          });
	
	          if (newHooks.length === 0) {
	            delete RouteHooks[routeID];
	
	            if (!hasAnyProperties(RouteHooks)) {
	              // teardown transition & beforeunload hooks
	              if (unlistenBefore) {
	                unlistenBefore();
	                unlistenBefore = null;
	              }
	
	              if (unlistenBeforeUnload) {
	                unlistenBeforeUnload();
	                unlistenBeforeUnload = null;
	              }
	            }
	          } else {
	            RouteHooks[routeID] = newHooks;
	          }
	        }
	      };
	    }
	
	    /**
	     * This is the API for stateful environments. As the location
	     * changes, we update state and call the listener. We can also
	     * gracefully handle errors and redirects.
	     */
	    function listen(listener) {
	      // TODO: Only use a single history listener. Otherwise we'll
	      // end up with multiple concurrent calls to match.
	      return history.listen(function (location) {
	        if (state.location === location) {
	          listener(null, state);
	        } else {
	          match(location, function (error, redirectLocation, nextState) {
	            if (error) {
	              listener(error);
	            } else if (redirectLocation) {
	              history.transitionTo(redirectLocation);
	            } else if (nextState) {
	              listener(null, nextState);
	            } else {
	              process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'Location "%s" did not match any routes', location.pathname + location.search + location.hash) : undefined;
	            }
	          });
	        }
	      });
	    }
	
	    return _extends({}, history, {
	      isActive: isActive,
	      match: match,
	      listenBeforeLeavingRoute: listenBeforeLeavingRoute,
	      listen: listen
	    });
	  };
	}
	
	exports['default'] = useRoutes;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var _warning = __webpack_require__(210);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _queryString = __webpack_require__(264);
	
	var _runTransitionHook = __webpack_require__(256);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _parsePath = __webpack_require__(254);
	
	var _parsePath2 = _interopRequireDefault(_parsePath);
	
	var _deprecate = __webpack_require__(257);
	
	var _deprecate2 = _interopRequireDefault(_deprecate);
	
	var SEARCH_BASE_KEY = '$searchBase';
	
	function defaultStringifyQuery(query) {
	  return _queryString.stringify(query).replace(/%20/g, '+');
	}
	
	var defaultParseQueryString = _queryString.parse;
	
	function isNestedObject(object) {
	  for (var p in object) {
	    if (object.hasOwnProperty(p) && typeof object[p] === 'object' && !Array.isArray(object[p]) && object[p] !== null) return true;
	  }return false;
	}
	
	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know how to handle URL queries.
	 */
	function useQueries(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var stringifyQuery = options.stringifyQuery;
	    var parseQueryString = options.parseQueryString;
	
	    var historyOptions = _objectWithoutProperties(options, ['stringifyQuery', 'parseQueryString']);
	
	    var history = createHistory(historyOptions);
	
	    if (typeof stringifyQuery !== 'function') stringifyQuery = defaultStringifyQuery;
	
	    if (typeof parseQueryString !== 'function') parseQueryString = defaultParseQueryString;
	
	    function addQuery(location) {
	      if (location.query == null) {
	        var search = location.search;
	
	        location.query = parseQueryString(search.substring(1));
	        location[SEARCH_BASE_KEY] = { search: search, searchBase: '' };
	      }
	
	      // TODO: Instead of all the book-keeping here, this should just strip the
	      // stringified query from the search.
	
	      return location;
	    }
	
	    function appendQuery(location, query) {
	      var _extends2;
	
	      var queryString = undefined;
	      if (!query || (queryString = stringifyQuery(query)) === '') return location;
	
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](stringifyQuery !== defaultStringifyQuery || !isNestedObject(query), 'useQueries does not stringify nested query objects by default; ' + 'use a custom stringifyQuery function') : undefined;
	
	      if (typeof location === 'string') location = _parsePath2['default'](location);
	
	      var searchBaseSpec = location[SEARCH_BASE_KEY];
	      var searchBase = undefined;
	      if (searchBaseSpec && location.search === searchBaseSpec.search) {
	        searchBase = searchBaseSpec.searchBase;
	      } else {
	        searchBase = location.search || '';
	      }
	
	      var search = searchBase + (searchBase ? '&' : '?') + queryString;
	
	      return _extends({}, location, (_extends2 = {
	        search: search
	      }, _extends2[SEARCH_BASE_KEY] = { search: search, searchBase: searchBase }, _extends2));
	    }
	
	    // Override all read methods with query-aware versions.
	    function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        _runTransitionHook2['default'](hook, addQuery(location), callback);
	      });
	    }
	
	    function listen(listener) {
	      return history.listen(function (location) {
	        listener(addQuery(location));
	      });
	    }
	
	    // Override all write methods with query-aware versions.
	    function push(location) {
	      history.push(appendQuery(location, location.query));
	    }
	
	    function replace(location) {
	      history.replace(appendQuery(location, location.query));
	    }
	
	    function createPath(location, query) {
	      //warning(
	      //  !query,
	      //  'the query argument to createPath is deprecated; use a location descriptor instead'
	      //)
	      return history.createPath(appendQuery(location, query || location.query));
	    }
	
	    function createHref(location, query) {
	      //warning(
	      //  !query,
	      //  'the query argument to createHref is deprecated; use a location descriptor instead'
	      //)
	      return history.createHref(appendQuery(location, query || location.query));
	    }
	
	    function createLocation() {
	      return addQuery(history.createLocation.apply(history, arguments));
	    }
	
	    // deprecated
	    function pushState(state, path, query) {
	      if (typeof path === 'string') path = _parsePath2['default'](path);
	
	      push(_extends({ state: state }, path, { query: query }));
	    }
	
	    // deprecated
	    function replaceState(state, path, query) {
	      if (typeof path === 'string') path = _parsePath2['default'](path);
	
	      replace(_extends({ state: state }, path, { query: query }));
	    }
	
	    return _extends({}, history, {
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation,
	
	      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	    });
	  };
	}
	
	exports['default'] = useQueries;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strictUriEncode = __webpack_require__(265);
	
	exports.extract = function (str) {
		return str.split('?')[1] || '';
	};
	
	exports.parse = function (str) {
		if (typeof str !== 'string') {
			return {};
		}
	
		str = str.trim().replace(/^(\?|#|&)/, '');
	
		if (!str) {
			return {};
		}
	
		return str.split('&').reduce(function (ret, param) {
			var parts = param.replace(/\+/g, ' ').split('=');
			// Firefox (pre 40) decodes `%3D` to `=`
			// https://github.com/sindresorhus/query-string/pull/37
			var key = parts.shift();
			var val = parts.length > 0 ? parts.join('=') : undefined;
	
			key = decodeURIComponent(key);
	
			// missing `=` should be `null`:
			// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
			val = val === undefined ? null : decodeURIComponent(val);
	
			if (!ret.hasOwnProperty(key)) {
				ret[key] = val;
			} else if (Array.isArray(ret[key])) {
				ret[key].push(val);
			} else {
				ret[key] = [ret[key], val];
			}
	
			return ret;
		}, {});
	};
	
	exports.stringify = function (obj) {
		return obj ? Object.keys(obj).sort().map(function (key) {
			var val = obj[key];
	
			if (val === undefined) {
				return '';
			}
	
			if (val === null) {
				return key;
			}
	
			if (Array.isArray(val)) {
				return val.sort().map(function (val2) {
					return strictUriEncode(key) + '=' + strictUriEncode(val2);
				}).join('&');
			}
	
			return strictUriEncode(key) + '=' + strictUriEncode(val);
		}).filter(function (x) {
			return x.length > 0;
		}).join('&') : '';
	};


/***/ },
/* 265 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function (str) {
		return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
			return '%' + c.charCodeAt(0).toString(16).toUpperCase();
		});
	};


/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _PatternUtils = __webpack_require__(261);
	
	function routeParamsChanged(route, prevState, nextState) {
	  if (!route.path) return false;
	
	  var paramNames = _PatternUtils.getParamNames(route.path);
	
	  return paramNames.some(function (paramName) {
	    return prevState.params[paramName] !== nextState.params[paramName];
	  });
	}
	
	/**
	 * Returns an object of { leaveRoutes, enterRoutes } determined by
	 * the change from prevState to nextState. We leave routes if either
	 * 1) they are not in the next state or 2) they are in the next state
	 * but their params have changed (i.e. /users/123 => /users/456).
	 *
	 * leaveRoutes are ordered starting at the leaf route of the tree
	 * we're leaving up to the common parent route. enterRoutes are ordered
	 * from the top of the tree we're entering down to the leaf route.
	 */
	function computeChangedRoutes(prevState, nextState) {
	  var prevRoutes = prevState && prevState.routes;
	  var nextRoutes = nextState.routes;
	
	  var leaveRoutes = undefined,
	      enterRoutes = undefined;
	  if (prevRoutes) {
	    leaveRoutes = prevRoutes.filter(function (route) {
	      return nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);
	    });
	
	    // onLeave hooks start at the leaf route.
	    leaveRoutes.reverse();
	
	    enterRoutes = nextRoutes.filter(function (route) {
	      return prevRoutes.indexOf(route) === -1 || leaveRoutes.indexOf(route) !== -1;
	    });
	  } else {
	    leaveRoutes = [];
	    enterRoutes = nextRoutes;
	  }
	
	  return {
	    leaveRoutes: leaveRoutes,
	    enterRoutes: enterRoutes
	  };
	}
	
	exports['default'] = computeChangedRoutes;
	module.exports = exports['default'];

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.runEnterHooks = runEnterHooks;
	exports.runLeaveHooks = runLeaveHooks;
	
	var _AsyncUtils = __webpack_require__(268);
	
	function createEnterHook(hook, route) {
	  return function (a, b, callback) {
	    hook.apply(route, arguments);
	
	    if (hook.length < 3) {
	      // Assume hook executes synchronously and
	      // automatically call the callback.
	      callback();
	    }
	  };
	}
	
	function getEnterHooks(routes) {
	  return routes.reduce(function (hooks, route) {
	    if (route.onEnter) hooks.push(createEnterHook(route.onEnter, route));
	
	    return hooks;
	  }, []);
	}
	
	/**
	 * Runs all onEnter hooks in the given array of routes in order
	 * with onEnter(nextState, replaceState, callback) and calls
	 * callback(error, redirectInfo) when finished. The first hook
	 * to use replaceState short-circuits the loop.
	 *
	 * If a hook needs to run asynchronously, it may use the callback
	 * function. However, doing so will cause the transition to pause,
	 * which could lead to a non-responsive UI if the hook is slow.
	 */
	
	function runEnterHooks(routes, nextState, callback) {
	  var hooks = getEnterHooks(routes);
	
	  if (!hooks.length) {
	    callback();
	    return;
	  }
	
	  var redirectInfo = undefined;
	  function replaceState(state, pathname, query) {
	    redirectInfo = { pathname: pathname, query: query, state: state };
	  }
	
	  _AsyncUtils.loopAsync(hooks.length, function (index, next, done) {
	    hooks[index](nextState, replaceState, function (error) {
	      if (error || redirectInfo) {
	        done(error, redirectInfo); // No need to continue.
	      } else {
	          next();
	        }
	    });
	  }, callback);
	}
	
	/**
	 * Runs all onLeave hooks in the given array of routes in order.
	 */
	
	function runLeaveHooks(routes) {
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    if (routes[i].onLeave) routes[i].onLeave.call(routes[i]);
	  }
	}

/***/ },
/* 268 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.loopAsync = loopAsync;
	exports.mapAsync = mapAsync;
	
	function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;
	
	  function done() {
	    isDone = true;
	    callback.apply(this, arguments);
	  }
	
	  function next() {
	    if (isDone) return;
	
	    if (currentTurn < turns) {
	      work.call(this, currentTurn++, next, done);
	    } else {
	      done.apply(this, arguments);
	    }
	  }
	
	  next();
	}
	
	function mapAsync(array, work, callback) {
	  var length = array.length;
	  var values = [];
	
	  if (length === 0) return callback(null, values);
	
	  var isDone = false,
	      doneCount = 0;
	
	  function done(index, error, value) {
	    if (isDone) return;
	
	    if (error) {
	      isDone = true;
	      callback(error);
	    } else {
	      values[index] = value;
	
	      isDone = ++doneCount === length;
	
	      if (isDone) callback(null, values);
	    }
	  }
	
	  array.forEach(function (item, index) {
	    work(item, index, function (error, value) {
	      done(index, error, value);
	    });
	  });
	}

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _PatternUtils = __webpack_require__(261);
	
	function deepEqual(a, b) {
	  if (a == b) return true;
	
	  if (a == null || b == null) return false;
	
	  if (Array.isArray(a)) {
	    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
	      return deepEqual(item, b[index]);
	    });
	  }
	
	  if (typeof a === 'object') {
	    for (var p in a) {
	      if (!a.hasOwnProperty(p)) {
	        continue;
	      }
	
	      if (a[p] === undefined) {
	        if (b[p] !== undefined) {
	          return false;
	        }
	      } else if (!b.hasOwnProperty(p)) {
	        return false;
	      } else if (!deepEqual(a[p], b[p])) {
	        return false;
	      }
	    }
	
	    return true;
	  }
	
	  return String(a) === String(b);
	}
	
	function paramsAreActive(paramNames, paramValues, activeParams) {
	  // FIXME: This doesn't work on repeated params in activeParams.
	  return paramNames.every(function (paramName, index) {
	    return String(paramValues[index]) === String(activeParams[paramName]);
	  });
	}
	
	function getMatchingRouteIndex(pathname, activeRoutes, activeParams) {
	  var remainingPathname = pathname,
	      paramNames = [],
	      paramValues = [];
	
	  for (var i = 0, len = activeRoutes.length; i < len; ++i) {
	    var route = activeRoutes[i];
	    var pattern = route.path || '';
	
	    if (pattern.charAt(0) === '/') {
	      remainingPathname = pathname;
	      paramNames = [];
	      paramValues = [];
	    }
	
	    if (remainingPathname !== null) {
	      var matched = _PatternUtils.matchPattern(pattern, remainingPathname);
	      remainingPathname = matched.remainingPathname;
	      paramNames = [].concat(paramNames, matched.paramNames);
	      paramValues = [].concat(paramValues, matched.paramValues);
	    }
	
	    if (remainingPathname === '' && route.path && paramsAreActive(paramNames, paramValues, activeParams)) return i;
	  }
	
	  return null;
	}
	
	/**
	 * Returns true if the given pathname matches the active routes
	 * and params.
	 */
	function routeIsActive(pathname, routes, params, indexOnly) {
	  var i = getMatchingRouteIndex(pathname, routes, params);
	
	  if (i === null) {
	    // No match.
	    return false;
	  } else if (!indexOnly) {
	    // Any match is good enough.
	    return true;
	  }
	
	  // If any remaining routes past the match index have paths, then we can't
	  // be on the index route.
	  return routes.slice(i + 1).every(function (route) {
	    return !route.path;
	  });
	}
	
	/**
	 * Returns true if all key/value pairs in the given query are
	 * currently active.
	 */
	function queryIsActive(query, activeQuery) {
	  if (activeQuery == null) return query == null;
	
	  if (query == null) return true;
	
	  return deepEqual(query, activeQuery);
	}
	
	/**
	 * Returns true if a <Link> to the given pathname/query combination is
	 * currently active.
	 */
	function isActive(pathname, query, indexOnly, location, routes, params) {
	  if (location == null) return false;
	
	  if (!routeIsActive(pathname, routes, params, indexOnly)) return false;
	
	  return queryIsActive(query, location.query);
	}
	
	exports['default'] = isActive;
	module.exports = exports['default'];

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _AsyncUtils = __webpack_require__(268);
	
	function getComponentsForRoute(location, route, callback) {
	  if (route.component || route.components) {
	    callback(null, route.component || route.components);
	  } else if (route.getComponent) {
	    route.getComponent(location, callback);
	  } else if (route.getComponents) {
	    route.getComponents(location, callback);
	  } else {
	    callback();
	  }
	}
	
	/**
	 * Asynchronously fetches all components needed for the given router
	 * state and calls callback(error, components) when finished.
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getComponents method.
	 */
	function getComponents(nextState, callback) {
	  _AsyncUtils.mapAsync(nextState.routes, function (route, index, callback) {
	    getComponentsForRoute(nextState.location, route, callback);
	  }, callback);
	}
	
	exports['default'] = getComponents;
	module.exports = exports['default'];

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(210);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _AsyncUtils = __webpack_require__(268);
	
	var _PatternUtils = __webpack_require__(261);
	
	var _RouteUtils = __webpack_require__(258);
	
	function getChildRoutes(route, location, callback) {
	  if (route.childRoutes) {
	    callback(null, route.childRoutes);
	  } else if (route.getChildRoutes) {
	    route.getChildRoutes(location, function (error, childRoutes) {
	      callback(error, !error && _RouteUtils.createRoutes(childRoutes));
	    });
	  } else {
	    callback();
	  }
	}
	
	function getIndexRoute(route, location, callback) {
	  if (route.indexRoute) {
	    callback(null, route.indexRoute);
	  } else if (route.getIndexRoute) {
	    route.getIndexRoute(location, function (error, indexRoute) {
	      callback(error, !error && _RouteUtils.createRoutes(indexRoute)[0]);
	    });
	  } else if (route.childRoutes) {
	    (function () {
	      var pathless = route.childRoutes.filter(function (obj) {
	        return !obj.hasOwnProperty('path');
	      });
	
	      _AsyncUtils.loopAsync(pathless.length, function (index, next, done) {
	        getIndexRoute(pathless[index], location, function (error, indexRoute) {
	          if (error || indexRoute) {
	            var routes = [pathless[index]].concat(Array.isArray(indexRoute) ? indexRoute : [indexRoute]);
	            done(error, routes);
	          } else {
	            next();
	          }
	        });
	      }, function (err, routes) {
	        callback(null, routes);
	      });
	    })();
	  } else {
	    callback();
	  }
	}
	
	function assignParams(params, paramNames, paramValues) {
	  return paramNames.reduce(function (params, paramName, index) {
	    var paramValue = paramValues && paramValues[index];
	
	    if (Array.isArray(params[paramName])) {
	      params[paramName].push(paramValue);
	    } else if (paramName in params) {
	      params[paramName] = [params[paramName], paramValue];
	    } else {
	      params[paramName] = paramValue;
	    }
	
	    return params;
	  }, params);
	}
	
	function createParams(paramNames, paramValues) {
	  return assignParams({}, paramNames, paramValues);
	}
	
	function matchRouteDeep(route, location, remainingPathname, paramNames, paramValues, callback) {
	  var pattern = route.path || '';
	
	  if (pattern.charAt(0) === '/') {
	    remainingPathname = location.pathname;
	    paramNames = [];
	    paramValues = [];
	  }
	
	  if (remainingPathname !== null) {
	    var matched = _PatternUtils.matchPattern(pattern, remainingPathname);
	    remainingPathname = matched.remainingPathname;
	    paramNames = [].concat(paramNames, matched.paramNames);
	    paramValues = [].concat(paramValues, matched.paramValues);
	
	    if (remainingPathname === '' && route.path) {
	      var _ret2 = (function () {
	        var match = {
	          routes: [route],
	          params: createParams(paramNames, paramValues)
	        };
	
	        getIndexRoute(route, location, function (error, indexRoute) {
	          if (error) {
	            callback(error);
	          } else {
	            if (Array.isArray(indexRoute)) {
	              var _match$routes;
	
	              process.env.NODE_ENV !== 'production' ? _warning2['default'](indexRoute.every(function (route) {
	                return !route.path;
	              }), 'Index routes should not have paths') : undefined;
	              (_match$routes = match.routes).push.apply(_match$routes, indexRoute);
	            } else if (indexRoute) {
	              process.env.NODE_ENV !== 'production' ? _warning2['default'](!indexRoute.path, 'Index routes should not have paths') : undefined;
	              match.routes.push(indexRoute);
	            }
	
	            callback(null, match);
	          }
	        });
	        return {
	          v: undefined
	        };
	      })();
	
	      if (typeof _ret2 === 'object') return _ret2.v;
	    }
	  }
	
	  if (remainingPathname != null || route.childRoutes) {
	    // Either a) this route matched at least some of the path or b)
	    // we don't have to load this route's children asynchronously. In
	    // either case continue checking for matches in the subtree.
	    getChildRoutes(route, location, function (error, childRoutes) {
	      if (error) {
	        callback(error);
	      } else if (childRoutes) {
	        // Check the child routes to see if any of them match.
	        matchRoutes(childRoutes, location, function (error, match) {
	          if (error) {
	            callback(error);
	          } else if (match) {
	            // A child route matched! Augment the match and pass it up the stack.
	            match.routes.unshift(route);
	            callback(null, match);
	          } else {
	            callback();
	          }
	        }, remainingPathname, paramNames, paramValues);
	      } else {
	        callback();
	      }
	    });
	  } else {
	    callback();
	  }
	}
	
	/**
	 * Asynchronously matches the given location to a set of routes and calls
	 * callback(error, state) when finished. The state object will have the
	 * following properties:
	 *
	 * - routes       An array of routes that matched, in hierarchical order
	 * - params       An object of URL parameters
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getChildRoutes method.
	 */
	function matchRoutes(routes, location, callback) {
	  var remainingPathname = arguments.length <= 3 || arguments[3] === undefined ? location.pathname : arguments[3];
	  var paramNames = arguments.length <= 4 || arguments[4] === undefined ? [] : arguments[4];
	  var paramValues = arguments.length <= 5 || arguments[5] === undefined ? [] : arguments[5];
	  return (function () {
	    _AsyncUtils.loopAsync(routes.length, function (index, next, done) {
	      matchRouteDeep(routes[index], location, remainingPathname, paramNames, paramValues, function (error, match) {
	        if (error || match) {
	          done(error, match);
	        } else {
	          next();
	        }
	      });
	    }, callback);
	  })();
	}
	
	exports['default'] = matchRoutes;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.falsy = falsy;
	
	var _react = __webpack_require__(1);
	
	var func = _react.PropTypes.func;
	var object = _react.PropTypes.object;
	var arrayOf = _react.PropTypes.arrayOf;
	var oneOfType = _react.PropTypes.oneOfType;
	var element = _react.PropTypes.element;
	var shape = _react.PropTypes.shape;
	var string = _react.PropTypes.string;
	
	function falsy(props, propName, componentName) {
	  if (props[propName]) return new Error('<' + componentName + '> should not have a "' + propName + '" prop');
	}
	
	var history = shape({
	  listen: func.isRequired,
	  pushState: func.isRequired,
	  replaceState: func.isRequired,
	  go: func.isRequired
	});
	
	exports.history = history;
	var location = shape({
	  pathname: string.isRequired,
	  search: string.isRequired,
	  state: object,
	  action: string.isRequired,
	  key: string
	});
	
	exports.location = location;
	var component = oneOfType([func, string]);
	exports.component = component;
	var components = oneOfType([component, object]);
	exports.components = components;
	var route = oneOfType([object, element]);
	exports.route = route;
	var routes = oneOfType([route, arrayOf(route)]);
	
	exports.routes = routes;
	exports['default'] = {
	  falsy: falsy,
	  history: history,
	  location: location,
	  component: component,
	  components: components,
	  route: route
	};

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _React$PropTypes = _react2['default'].PropTypes;
	var bool = _React$PropTypes.bool;
	var object = _React$PropTypes.object;
	var string = _React$PropTypes.string;
	var func = _React$PropTypes.func;
	
	function isLeftClickEvent(event) {
	  return event.button === 0;
	}
	
	function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	}
	
	function isEmptyObject(object) {
	  for (var p in object) {
	    if (object.hasOwnProperty(p)) return false;
	  }return true;
	}
	
	/**
	 * A <Link> is used to create an <a> element that links to a route.
	 * When that route is active, the link gets the value of its
	 * `activeClassName` prop
	 *
	 * For example, assuming you have the following route:
	 *
	 *   <Route path="/posts/:postID" component={Post} />
	 *
	 * You could use the following component to link to that route:
	 *
	 *   <Link to={`/posts/${post.id}`} />
	 *
	 * Links may pass along location state and/or query string parameters
	 * in the state/query props, respectively.
	 *
	 *   <Link ... query={{ show: true }} state={{ the: 'state' }} />
	 */
	
	var Link = (function (_Component) {
	  _inherits(Link, _Component);
	
	  function Link() {
	    _classCallCheck(this, Link);
	
	    _Component.apply(this, arguments);
	  }
	
	  Link.prototype.handleClick = function handleClick(event) {
	    var allowTransition = true;
	
	    if (this.props.onClick) this.props.onClick(event);
	
	    if (isModifiedEvent(event) || !isLeftClickEvent(event)) return;
	
	    if (event.defaultPrevented === true) allowTransition = false;
	
	    // If target prop is set (e.g. to "_blank") let browser handle link.
	    /* istanbul ignore if: untestable with Karma */
	    if (this.props.target) {
	      if (!allowTransition) event.preventDefault();
	
	      return;
	    }
	
	    event.preventDefault();
	
	    if (allowTransition) {
	      var _props = this.props;
	      var state = _props.state;
	      var to = _props.to;
	      var query = _props.query;
	      var hash = _props.hash;
	
	      if (hash) to += hash;
	
	      this.context.history.pushState(state, to, query);
	    }
	  };
	
	  Link.prototype.render = function render() {
	    var _this = this;
	
	    var _props2 = this.props;
	    var to = _props2.to;
	    var query = _props2.query;
	    var hash = _props2.hash;
	    var state = _props2.state;
	    var activeClassName = _props2.activeClassName;
	    var activeStyle = _props2.activeStyle;
	    var onlyActiveOnIndex = _props2.onlyActiveOnIndex;
	
	    var props = _objectWithoutProperties(_props2, ['to', 'query', 'hash', 'state', 'activeClassName', 'activeStyle', 'onlyActiveOnIndex']);
	
	    // Manually override onClick.
	    props.onClick = function (e) {
	      return _this.handleClick(e);
	    };
	
	    // Ignore if rendered outside the context of history, simplifies unit testing.
	    var history = this.context.history;
	
	    if (history) {
	      props.href = history.createHref(to, query);
	
	      if (hash) props.href += hash;
	
	      if (activeClassName || activeStyle != null && !isEmptyObject(activeStyle)) {
	        if (history.isActive(to, query, onlyActiveOnIndex)) {
	          if (activeClassName) props.className += props.className === '' ? activeClassName : ' ' + activeClassName;
	
	          if (activeStyle) props.style = _extends({}, props.style, activeStyle);
	        }
	      }
	    }
	
	    return _react2['default'].createElement('a', props);
	  };
	
	  return Link;
	})(_react.Component);
	
	Link.contextTypes = {
	  history: object
	};
	
	Link.propTypes = {
	  to: string.isRequired,
	  query: object,
	  hash: string,
	  state: object,
	  activeStyle: object,
	  activeClassName: string,
	  onlyActiveOnIndex: bool.isRequired,
	  onClick: func
	};
	
	Link.defaultProps = {
	  onlyActiveOnIndex: false,
	  className: '',
	  style: {}
	};
	
	exports['default'] = Link;
	module.exports = exports['default'];

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Link = __webpack_require__(273);
	
	var _Link2 = _interopRequireDefault(_Link);
	
	/**
	 * An <IndexLink> is used to link to an <IndexRoute>.
	 */
	
	var IndexLink = (function (_Component) {
	  _inherits(IndexLink, _Component);
	
	  function IndexLink() {
	    _classCallCheck(this, IndexLink);
	
	    _Component.apply(this, arguments);
	  }
	
	  IndexLink.prototype.render = function render() {
	    return _react2['default'].createElement(_Link2['default'], _extends({}, this.props, { onlyActiveOnIndex: true }));
	  };
	
	  return IndexLink;
	})(_react.Component);
	
	exports['default'] = IndexLink;
	module.exports = exports['default'];

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _warning = __webpack_require__(210);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(178);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Redirect = __webpack_require__(276);
	
	var _Redirect2 = _interopRequireDefault(_Redirect);
	
	var _PropTypes = __webpack_require__(272);
	
	var _React$PropTypes = _react2['default'].PropTypes;
	var string = _React$PropTypes.string;
	var object = _React$PropTypes.object;
	
	/**
	 * An <IndexRedirect> is used to redirect from an indexRoute.
	 */
	
	var IndexRedirect = (function (_Component) {
	  _inherits(IndexRedirect, _Component);
	
	  function IndexRedirect() {
	    _classCallCheck(this, IndexRedirect);
	
	    _Component.apply(this, arguments);
	  }
	
	  /* istanbul ignore next: sanity check */
	
	  IndexRedirect.prototype.render = function render() {
	     true ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, '<IndexRedirect> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;
	  };
	
	  return IndexRedirect;
	})(_react.Component);
	
	IndexRedirect.propTypes = {
	  to: string.isRequired,
	  query: object,
	  state: object,
	  onEnter: _PropTypes.falsy,
	  children: _PropTypes.falsy
	};
	
	IndexRedirect.createRouteFromReactElement = function (element, parentRoute) {
	  /* istanbul ignore else: sanity check */
	  if (parentRoute) {
	    parentRoute.indexRoute = _Redirect2['default'].createRouteFromReactElement(element);
	  } else {
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'An <IndexRedirect> does not make sense at the root of your route config') : undefined;
	  }
	};
	
	exports['default'] = IndexRedirect;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _invariant = __webpack_require__(178);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _RouteUtils = __webpack_require__(258);
	
	var _PatternUtils = __webpack_require__(261);
	
	var _PropTypes = __webpack_require__(272);
	
	var _React$PropTypes = _react2['default'].PropTypes;
	var string = _React$PropTypes.string;
	var object = _React$PropTypes.object;
	
	/**
	 * A <Redirect> is used to declare another URL path a client should
	 * be sent to when they request a given URL.
	 *
	 * Redirects are placed alongside routes in the route configuration
	 * and are traversed in the same manner.
	 */
	
	var Redirect = (function (_Component) {
	  _inherits(Redirect, _Component);
	
	  function Redirect() {
	    _classCallCheck(this, Redirect);
	
	    _Component.apply(this, arguments);
	  }
	
	  /* istanbul ignore next: sanity check */
	
	  Redirect.prototype.render = function render() {
	     true ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, '<Redirect> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;
	  };
	
	  return Redirect;
	})(_react.Component);
	
	Redirect.createRouteFromReactElement = function (element) {
	  var route = _RouteUtils.createRouteFromReactElement(element);
	
	  if (route.from) route.path = route.from;
	
	  route.onEnter = function (nextState, replaceState) {
	    var location = nextState.location;
	    var params = nextState.params;
	
	    var pathname = undefined;
	    if (route.to.charAt(0) === '/') {
	      pathname = _PatternUtils.formatPattern(route.to, params);
	    } else if (!route.to) {
	      pathname = location.pathname;
	    } else {
	      var routeIndex = nextState.routes.indexOf(route);
	      var parentPattern = Redirect.getRoutePattern(nextState.routes, routeIndex - 1);
	      var pattern = parentPattern.replace(/\/*$/, '/') + route.to;
	      pathname = _PatternUtils.formatPattern(pattern, params);
	    }
	
	    replaceState(route.state || location.state, pathname, route.query || location.query);
	  };
	
	  return route;
	};
	
	Redirect.getRoutePattern = function (routes, routeIndex) {
	  var parentPattern = '';
	
	  for (var i = routeIndex; i >= 0; i--) {
	    var route = routes[i];
	    var pattern = route.path || '';
	    parentPattern = pattern.replace(/\/*$/, '/') + parentPattern;
	
	    if (pattern.indexOf('/') === 0) break;
	  }
	
	  return '/' + parentPattern;
	};
	
	Redirect.propTypes = {
	  path: string,
	  from: string, // Alias for path
	  to: string.isRequired,
	  query: object,
	  state: object,
	  onEnter: _PropTypes.falsy,
	  children: _PropTypes.falsy
	};
	
	exports['default'] = Redirect;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _warning = __webpack_require__(210);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(178);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _RouteUtils = __webpack_require__(258);
	
	var _PropTypes = __webpack_require__(272);
	
	var func = _react2['default'].PropTypes.func;
	
	/**
	 * An <IndexRoute> is used to specify its parent's <Route indexRoute> in
	 * a JSX route config.
	 */
	
	var IndexRoute = (function (_Component) {
	  _inherits(IndexRoute, _Component);
	
	  function IndexRoute() {
	    _classCallCheck(this, IndexRoute);
	
	    _Component.apply(this, arguments);
	  }
	
	  /* istanbul ignore next: sanity check */
	
	  IndexRoute.prototype.render = function render() {
	     true ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, '<IndexRoute> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;
	  };
	
	  return IndexRoute;
	})(_react.Component);
	
	IndexRoute.propTypes = {
	  path: _PropTypes.falsy,
	  component: _PropTypes.component,
	  components: _PropTypes.components,
	  getComponent: func,
	  getComponents: func
	};
	
	IndexRoute.createRouteFromReactElement = function (element, parentRoute) {
	  /* istanbul ignore else: sanity check */
	  if (parentRoute) {
	    parentRoute.indexRoute = _RouteUtils.createRouteFromReactElement(element);
	  } else {
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'An <IndexRoute> does not make sense at the root of your route config') : undefined;
	  }
	};
	
	exports['default'] = IndexRoute;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _invariant = __webpack_require__(178);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _RouteUtils = __webpack_require__(258);
	
	var _PropTypes = __webpack_require__(272);
	
	var _React$PropTypes = _react2['default'].PropTypes;
	var string = _React$PropTypes.string;
	var func = _React$PropTypes.func;
	
	/**
	 * A <Route> is used to declare which components are rendered to the
	 * page when the URL matches a given pattern.
	 *
	 * Routes are arranged in a nested tree structure. When a new URL is
	 * requested, the tree is searched depth-first to find a route whose
	 * path matches the URL.  When one is found, all routes in the tree
	 * that lead to it are considered "active" and their components are
	 * rendered into the DOM, nested in the same order as in the tree.
	 */
	
	var Route = (function (_Component) {
	  _inherits(Route, _Component);
	
	  function Route() {
	    _classCallCheck(this, Route);
	
	    _Component.apply(this, arguments);
	  }
	
	  /* istanbul ignore next: sanity check */
	
	  Route.prototype.render = function render() {
	     true ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, '<Route> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;
	  };
	
	  return Route;
	})(_react.Component);
	
	Route.createRouteFromReactElement = _RouteUtils.createRouteFromReactElement;
	
	Route.propTypes = {
	  path: string,
	  component: _PropTypes.component,
	  components: _PropTypes.components,
	  getComponent: func,
	  getComponents: func
	};
	
	exports['default'] = Route;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _PropTypes = __webpack_require__(272);
	
	/**
	 * A mixin that adds the "history" instance variable to components.
	 */
	var History = {
	
	  contextTypes: {
	    history: _PropTypes.history
	  },
	
	  componentWillMount: function componentWillMount() {
	    this.history = this.context.history;
	  }
	
	};
	
	exports['default'] = History;
	module.exports = exports['default'];

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _invariant = __webpack_require__(178);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var object = _react2['default'].PropTypes.object;
	
	/**
	 * The Lifecycle mixin adds the routerWillLeave lifecycle method to a
	 * component that may be used to cancel a transition or prompt the user
	 * for confirmation.
	 *
	 * On standard transitions, routerWillLeave receives a single argument: the
	 * location we're transitioning to. To cancel the transition, return false.
	 * To prompt the user for confirmation, return a prompt message (string).
	 *
	 * During the beforeunload event (assuming you're using the useBeforeUnload
	 * history enhancer), routerWillLeave does not receive a location object
	 * because it isn't possible for us to know the location we're transitioning
	 * to. In this case routerWillLeave must return a prompt message to prevent
	 * the user from closing the window/tab.
	 */
	var Lifecycle = {
	
	  contextTypes: {
	    history: object.isRequired,
	    // Nested children receive the route as context, either
	    // set by the route component using the RouteContext mixin
	    // or by some other ancestor.
	    route: object
	  },
	
	  propTypes: {
	    // Route components receive the route object as a prop.
	    route: object
	  },
	
	  componentDidMount: function componentDidMount() {
	    !this.routerWillLeave ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'The Lifecycle mixin requires you to define a routerWillLeave method') : _invariant2['default'](false) : undefined;
	
	    var route = this.props.route || this.context.route;
	
	    !route ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'The Lifecycle mixin must be used on either a) a <Route component> or ' + 'b) a descendant of a <Route component> that uses the RouteContext mixin') : _invariant2['default'](false) : undefined;
	
	    this._unlistenBeforeLeavingRoute = this.context.history.listenBeforeLeavingRoute(route, this.routerWillLeave);
	  },
	
	  componentWillUnmount: function componentWillUnmount() {
	    if (this._unlistenBeforeLeavingRoute) this._unlistenBeforeLeavingRoute();
	  }
	
	};
	
	exports['default'] = Lifecycle;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var object = _react2['default'].PropTypes.object;
	
	/**
	 * The RouteContext mixin provides a convenient way for route
	 * components to set the route in context. This is needed for
	 * routes that render elements that want to use the Lifecycle
	 * mixin to prevent transitions.
	 */
	var RouteContext = {
	
	  propTypes: {
	    route: object.isRequired
	  },
	
	  childContextTypes: {
	    route: object.isRequired
	  },
	
	  getChildContext: function getChildContext() {
	    return {
	      route: this.props.route
	    };
	  }
	
	};
	
	exports['default'] = RouteContext;
	module.exports = exports['default'];

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _invariant = __webpack_require__(178);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _historyLibCreateMemoryHistory = __webpack_require__(283);
	
	var _historyLibCreateMemoryHistory2 = _interopRequireDefault(_historyLibCreateMemoryHistory);
	
	var _historyLibUseBasename = __webpack_require__(284);
	
	var _historyLibUseBasename2 = _interopRequireDefault(_historyLibUseBasename);
	
	var _RouteUtils = __webpack_require__(258);
	
	var _useRoutes = __webpack_require__(262);
	
	var _useRoutes2 = _interopRequireDefault(_useRoutes);
	
	var createHistory = _useRoutes2['default'](_historyLibUseBasename2['default'](_historyLibCreateMemoryHistory2['default']));
	
	/**
	 * A high-level API to be used for server-side rendering.
	 *
	 * This function matches a location to a set of routes and calls
	 * callback(error, redirectLocation, renderProps) when finished.
	 *
	 * Note: You probably don't want to use this in a browser. Use
	 * the history.listen API instead.
	 */
	function match(_ref, callback) {
	  var routes = _ref.routes;
	  var location = _ref.location;
	  var parseQueryString = _ref.parseQueryString;
	  var stringifyQuery = _ref.stringifyQuery;
	  var basename = _ref.basename;
	
	  !location ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'match needs a location') : _invariant2['default'](false) : undefined;
	
	  var history = createHistory({
	    routes: _RouteUtils.createRoutes(routes),
	    parseQueryString: parseQueryString,
	    stringifyQuery: stringifyQuery,
	    basename: basename
	  });
	
	  // Allow match({ location: '/the/path', ... })
	  if (typeof location === 'string') location = history.createLocation(location);
	
	  history.match(location, function (error, redirectLocation, nextState) {
	    callback(error, redirectLocation, nextState && _extends({}, nextState, { history: history }));
	  });
	}
	
	exports['default'] = match;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(210);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(178);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _Actions = __webpack_require__(243);
	
	var _createHistory = __webpack_require__(248);
	
	var _createHistory2 = _interopRequireDefault(_createHistory);
	
	var _parsePath = __webpack_require__(254);
	
	var _parsePath2 = _interopRequireDefault(_parsePath);
	
	function createStateStorage(entries) {
	  return entries.filter(function (entry) {
	    return entry.state;
	  }).reduce(function (memo, entry) {
	    memo[entry.key] = entry.state;
	    return memo;
	  }, {});
	}
	
	function createMemoryHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  if (Array.isArray(options)) {
	    options = { entries: options };
	  } else if (typeof options === 'string') {
	    options = { entries: [options] };
	  }
	
	  var history = _createHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: saveState,
	    go: go
	  }));
	
	  var _options = options;
	  var entries = _options.entries;
	  var current = _options.current;
	
	  if (typeof entries === 'string') {
	    entries = [entries];
	  } else if (!Array.isArray(entries)) {
	    entries = ['/'];
	  }
	
	  entries = entries.map(function (entry) {
	    var key = history.createKey();
	
	    if (typeof entry === 'string') return { pathname: entry, key: key };
	
	    if (typeof entry === 'object' && entry) return _extends({}, entry, { key: key });
	
	     true ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Unable to create history entry from %s', entry) : _invariant2['default'](false) : undefined;
	  });
	
	  if (current == null) {
	    current = entries.length - 1;
	  } else {
	    !(current >= 0 && current < entries.length) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Current index must be >= 0 and < %s, was %s', entries.length, current) : _invariant2['default'](false) : undefined;
	  }
	
	  var storage = createStateStorage(entries);
	
	  function saveState(key, state) {
	    storage[key] = state;
	  }
	
	  function readState(key) {
	    return storage[key];
	  }
	
	  function getCurrentLocation() {
	    var entry = entries[current];
	    var key = entry.key;
	    var basename = entry.basename;
	    var pathname = entry.pathname;
	    var search = entry.search;
	
	    var path = (basename || '') + pathname + (search || '');
	
	    var state = undefined;
	    if (key) {
	      state = readState(key);
	    } else {
	      state = null;
	      key = history.createKey();
	      entry.key = key;
	    }
	
	    var location = _parsePath2['default'](path);
	
	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }
	
	  function canGo(n) {
	    var index = current + n;
	    return index >= 0 && index < entries.length;
	  }
	
	  function go(n) {
	    if (n) {
	      if (!canGo(n)) {
	        process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'Cannot go(%s) there is not enough history', n) : undefined;
	        return;
	      }
	
	      current += n;
	
	      var currentLocation = getCurrentLocation();
	
	      // change action to POP
	      history.transitionTo(_extends({}, currentLocation, { action: _Actions.POP }));
	    }
	  }
	
	  function finishTransition(location) {
	    switch (location.action) {
	      case _Actions.PUSH:
	        current += 1;
	
	        // if we are not on the top of stack
	        // remove rest and push new
	        if (current < entries.length) entries.splice(current);
	
	        entries.push(location);
	        saveState(location.key, location.state);
	        break;
	      case _Actions.REPLACE:
	        entries[current] = location;
	        saveState(location.key, location.state);
	        break;
	    }
	  }
	
	  return history;
	}
	
	exports['default'] = createMemoryHistory;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var _ExecutionEnvironment = __webpack_require__(244);
	
	var _runTransitionHook = __webpack_require__(256);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _extractPath = __webpack_require__(255);
	
	var _extractPath2 = _interopRequireDefault(_extractPath);
	
	var _parsePath = __webpack_require__(254);
	
	var _parsePath2 = _interopRequireDefault(_parsePath);
	
	var _deprecate = __webpack_require__(257);
	
	var _deprecate2 = _interopRequireDefault(_deprecate);
	
	function useBasename(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var basename = options.basename;
	
	    var historyOptions = _objectWithoutProperties(options, ['basename']);
	
	    var history = createHistory(historyOptions);
	
	    // Automatically use the value of <base href> in HTML
	    // documents as basename if it's not explicitly given.
	    if (basename == null && _ExecutionEnvironment.canUseDOM) {
	      var base = document.getElementsByTagName('base')[0];
	
	      if (base) basename = _extractPath2['default'](base.href);
	    }
	
	    function addBasename(location) {
	      if (basename && location.basename == null) {
	        if (location.pathname.indexOf(basename) === 0) {
	          location.pathname = location.pathname.substring(basename.length);
	          location.basename = basename;
	
	          if (location.pathname === '') location.pathname = '/';
	        } else {
	          location.basename = '';
	        }
	      }
	
	      return location;
	    }
	
	    function prependBasename(location) {
	      if (!basename) return location;
	
	      if (typeof location === 'string') location = _parsePath2['default'](location);
	
	      var pname = location.pathname;
	      var normalizedBasename = basename.slice(-1) === '/' ? basename : basename + '/';
	      var normalizedPathname = pname.charAt(0) === '/' ? pname.slice(1) : pname;
	      var pathname = normalizedBasename + normalizedPathname;
	
	      return _extends({}, location, {
	        pathname: pathname
	      });
	    }
	
	    // Override all read methods with basename-aware versions.
	    function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        _runTransitionHook2['default'](hook, addBasename(location), callback);
	      });
	    }
	
	    function listen(listener) {
	      return history.listen(function (location) {
	        listener(addBasename(location));
	      });
	    }
	
	    // Override all write methods with basename-aware versions.
	    function push(location) {
	      history.push(prependBasename(location));
	    }
	
	    function replace(location) {
	      history.replace(prependBasename(location));
	    }
	
	    function createPath(location) {
	      return history.createPath(prependBasename(location));
	    }
	
	    function createHref(location) {
	      return history.createHref(prependBasename(location));
	    }
	
	    function createLocation() {
	      return addBasename(history.createLocation.apply(history, arguments));
	    }
	
	    // deprecated
	    function pushState(state, path) {
	      if (typeof path === 'string') path = _parsePath2['default'](path);
	
	      push(_extends({ state: state }, path));
	    }
	
	    // deprecated
	    function replaceState(state, path) {
	      if (typeof path === 'string') path = _parsePath2['default'](path);
	
	      replace(_extends({ state: state }, path));
	    }
	
	    return _extends({}, history, {
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation,
	
	      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	    });
	  };
	}
	
	exports['default'] = useBasename;
	module.exports = exports['default'];

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _routerStateReducer2 = __webpack_require__(286);
	
	var _routerStateReducer3 = _interopRequireDefault(_routerStateReducer2);
	
	exports.routerStateReducer = _routerStateReducer3['default'];
	
	var _ReduxRouter2 = __webpack_require__(288);
	
	var _ReduxRouter3 = _interopRequireDefault(_ReduxRouter2);
	
	exports.ReduxRouter = _ReduxRouter3['default'];
	
	var _client = __webpack_require__(291);
	
	var _client2 = _interopRequireDefault(_client);
	
	exports.reduxReactRouter = _client2['default'];
	
	var _isActive2 = __webpack_require__(297);
	
	var _isActive3 = _interopRequireDefault(_isActive2);
	
	exports.isActive = _isActive3['default'];
	
	var _actionCreators = __webpack_require__(290);
	
	exports.historyAPI = _actionCreators.historyAPI;
	exports.pushState = _actionCreators.pushState;
	exports.push = _actionCreators.push;
	exports.replaceState = _actionCreators.replaceState;
	exports.replace = _actionCreators.replace;
	exports.setState = _actionCreators.setState;
	exports.go = _actionCreators.go;
	exports.goBack = _actionCreators.goBack;
	exports.goForward = _actionCreators.goForward;

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports['default'] = routerStateReducer;
	
	var _constants = __webpack_require__(287);
	
	/**
	 * Reducer of ROUTER_DID_CHANGE actions. Returns a state object
	 * with { pathname, query, params, navigationType }
	 * @param  {Object} state - Previous state
	 * @param  {Object} action - Action
	 * @return {Object} New state
	 */
	
	function routerStateReducer(state, action) {
	  if (state === undefined) state = null;
	
	  var _extends2;
	
	  switch (action.type) {
	    case _constants.ROUTER_DID_CHANGE:
	      return action.payload;
	    case _constants.REPLACE_ROUTES:
	      if (!state) return state;
	      return _extends({}, state, (_extends2 = {}, _extends2[_constants.DOES_NEED_REFRESH] = true, _extends2));
	    default:
	      return state;
	  }
	}
	
	module.exports = exports['default'];

/***/ },
/* 287 */
/***/ function(module, exports) {

	// Signals that the router's state has changed. It should
	// never be called by the application, only as an implementation detail of
	// redux-react-router.
	'use strict';
	
	exports.__esModule = true;
	var ROUTER_DID_CHANGE = '@@reduxReactRouter/routerDidChange';
	
	exports.ROUTER_DID_CHANGE = ROUTER_DID_CHANGE;
	var HISTORY_API = '@@reduxReactRouter/historyAPI';
	exports.HISTORY_API = HISTORY_API;
	var MATCH = '@@reduxReactRouter/match';
	exports.MATCH = MATCH;
	var INIT_ROUTES = '@@reduxReactRouter/initRoutes';
	exports.INIT_ROUTES = INIT_ROUTES;
	var REPLACE_ROUTES = '@@reduxReactRouter/replaceRoutes';
	
	exports.REPLACE_ROUTES = REPLACE_ROUTES;
	var ROUTER_STATE_SELECTOR = '@@reduxReactRouter/routerStateSelector';
	
	exports.ROUTER_STATE_SELECTOR = ROUTER_STATE_SELECTOR;
	var DOES_NEED_REFRESH = '@@reduxReactRouter/doesNeedRefresh';
	exports.DOES_NEED_REFRESH = DOES_NEED_REFRESH;

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(168);
	
	var _reactRouter = __webpack_require__(240);
	
	var _routerStateEquals = __webpack_require__(289);
	
	var _routerStateEquals2 = _interopRequireDefault(_routerStateEquals);
	
	var _constants = __webpack_require__(287);
	
	var _actionCreators = __webpack_require__(290);
	
	function memoizeRouterStateSelector(selector) {
	  var previousRouterState = null;
	
	  return function (state) {
	    var nextRouterState = selector(state);
	    if (_routerStateEquals2['default'](previousRouterState, nextRouterState)) {
	      return previousRouterState;
	    }
	    previousRouterState = nextRouterState;
	    return nextRouterState;
	  };
	}
	
	function getRoutesFromProps(props) {
	  return props.routes || props.children;
	}
	
	var ReduxRouter = (function (_Component) {
	  _inherits(ReduxRouter, _Component);
	
	  _createClass(ReduxRouter, null, [{
	    key: 'propTypes',
	    value: {
	      children: _react.PropTypes.node
	    },
	    enumerable: true
	  }, {
	    key: 'contextTypes',
	    value: {
	      store: _react.PropTypes.object
	    },
	    enumerable: true
	  }]);
	
	  function ReduxRouter(props, context) {
	    _classCallCheck(this, ReduxRouter);
	
	    _Component.call(this, props, context);
	    context.store.dispatch(_actionCreators.initRoutes(getRoutesFromProps(props)));
	  }
	
	  ReduxRouter.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    this.receiveRoutes(getRoutesFromProps(nextProps));
	  };
	
	  ReduxRouter.prototype.receiveRoutes = function receiveRoutes(routes) {
	    if (!routes) return;
	
	    var store = this.context.store;
	
	    store.dispatch(_actionCreators.replaceRoutes(routes));
	  };
	
	  ReduxRouter.prototype.render = function render() {
	    var store = this.context.store;
	
	    if (!store) {
	      throw new Error('Redux store missing from context of <ReduxRouter>. Make sure you\'re ' + 'using a <Provider>');
	    }
	
	    var history = store.history;
	    var routerStateSelector = store[_constants.ROUTER_STATE_SELECTOR];
	
	    if (!history || !routerStateSelector) {
	      throw new Error('Redux store not configured properly for <ReduxRouter>. Make sure ' + 'you\'re using the reduxReactRouter() store enhancer.');
	    }
	
	    return _react2['default'].createElement(ReduxRouterContext, _extends({
	      history: history,
	      routerStateSelector: memoizeRouterStateSelector(routerStateSelector)
	    }, this.props));
	  };
	
	  return ReduxRouter;
	})(_react.Component);
	
	var ReduxRouterContext = (function (_Component2) {
	  _inherits(ReduxRouterContext, _Component2);
	
	  function ReduxRouterContext() {
	    _classCallCheck(this, _ReduxRouterContext);
	
	    _Component2.apply(this, arguments);
	  }
	
	  ReduxRouterContext.prototype.render = function render() {
	    var location = this.props.location;
	
	    if (location === null || location === undefined) {
	      return null; // Async matching
	    }
	
	    var RoutingContext = this.props.RoutingContext || _reactRouter.RoutingContext;
	
	    return _react2['default'].createElement(RoutingContext, this.props);
	  };
	
	  _createClass(ReduxRouterContext, null, [{
	    key: 'propTypes',
	    value: {
	      location: _react.PropTypes.object,
	      RoutingContext: _react.PropTypes.element
	    },
	    enumerable: true
	  }]);
	
	  var _ReduxRouterContext = ReduxRouterContext;
	  ReduxRouterContext = _reactRedux.connect(function (state, _ref) {
	    var routerStateSelector = _ref.routerStateSelector;
	    return routerStateSelector(state) || {};
	  })(ReduxRouterContext) || ReduxRouterContext;
	  return ReduxRouterContext;
	})(_react.Component);
	
	exports['default'] = ReduxRouter;
	module.exports = exports['default'];

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = routerStateEquals;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _deepEqual = __webpack_require__(249);
	
	var _deepEqual2 = _interopRequireDefault(_deepEqual);
	
	var _constants = __webpack_require__(287);
	
	/**
	 * Check if two router states are equal. Ignores `location.key`.
	 * @returns {Boolean}
	 */
	
	function routerStateEquals(a, b) {
	  if (!a && !b) return true;
	  if (a && !b || !a && b) return false;
	  if (a[_constants.DOES_NEED_REFRESH] || b[_constants.DOES_NEED_REFRESH]) return false;
	
	  return a.location.pathname === b.location.pathname && a.location.search === b.location.search && _deepEqual2['default'](a.location.state, b.location.state);
	}
	
	module.exports = exports['default'];

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.routerDidChange = routerDidChange;
	exports.initRoutes = initRoutes;
	exports.replaceRoutes = replaceRoutes;
	exports.historyAPI = historyAPI;
	
	var _constants = __webpack_require__(287);
	
	/**
	 * Action creator for signaling that the router has changed.
	 * @private
	 * @param  {RouterState} state - New router state
	 * @return {Action} Action object
	 */
	
	function routerDidChange(state) {
	  return {
	    type: _constants.ROUTER_DID_CHANGE,
	    payload: state
	  };
	}
	
	/**
	 * Action creator that initiates route config
	 * @private
	 * @param {Array<Route>|ReactElement} routes - New routes
	 */
	
	function initRoutes(routes) {
	  return {
	    type: _constants.INIT_ROUTES,
	    payload: routes
	  };
	}
	
	/**
	 * Action creator that replaces the current route config
	 * @private
	 * @param {Array<Route>|ReactElement} routes - New routes
	 */
	
	function replaceRoutes(routes) {
	  return {
	    type: _constants.REPLACE_ROUTES,
	    payload: routes
	  };
	}
	
	/**
	 * Creates an action creator for calling a history API method.
	 * @param {string} method - Name of method
	 * @returns {ActionCreator} Action creator with same parameters as corresponding
	 * history method
	 */
	
	function historyAPI(method) {
	  return function () {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return {
	      type: _constants.HISTORY_API,
	      payload: {
	        method: method,
	        args: args
	      }
	    };
	  };
	}
	
	var pushState = historyAPI('pushState');
	exports.pushState = pushState;
	var push = historyAPI('push');
	exports.push = push;
	var replaceState = historyAPI('replaceState');
	exports.replaceState = replaceState;
	var replace = historyAPI('replace');
	exports.replace = replace;
	var setState = historyAPI('setState');
	exports.setState = setState;
	var go = historyAPI('go');
	exports.go = go;
	var goBack = historyAPI('goBack');
	exports.goBack = goBack;
	var goForward = historyAPI('goForward');
	exports.goForward = goForward;

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _redux = __webpack_require__(158);
	
	var _actionCreators = __webpack_require__(290);
	
	var _routerStateEquals = __webpack_require__(289);
	
	var _routerStateEquals2 = _interopRequireDefault(_routerStateEquals);
	
	var _reduxReactRouter = __webpack_require__(292);
	
	var _reduxReactRouter2 = _interopRequireDefault(_reduxReactRouter);
	
	var _useDefaults = __webpack_require__(294);
	
	var _useDefaults2 = _interopRequireDefault(_useDefaults);
	
	var _routeReplacement = __webpack_require__(295);
	
	var _routeReplacement2 = _interopRequireDefault(_routeReplacement);
	
	function historySynchronization(next) {
	  return function (options) {
	    return function (createStore) {
	      return function (reducer, initialState) {
	        var onError = options.onError;
	        var routerStateSelector = options.routerStateSelector;
	
	        var store = next(options)(createStore)(reducer, initialState);
	        var history = store.history;
	
	        var prevRouterState = undefined;
	        var routerState = undefined;
	
	        history.listen(function (error, nextRouterState) {
	          if (error) {
	            onError(error);
	            return;
	          }
	
	          if (!_routerStateEquals2['default'](routerState, nextRouterState)) {
	            prevRouterState = routerState;
	            routerState = nextRouterState;
	            store.dispatch(_actionCreators.routerDidChange(nextRouterState));
	          }
	        });
	
	        store.subscribe(function () {
	          var nextRouterState = routerStateSelector(store.getState());
	
	          if (nextRouterState && prevRouterState !== nextRouterState && !_routerStateEquals2['default'](routerState, nextRouterState)) {
	            routerState = nextRouterState;
	            var _nextRouterState$location = nextRouterState.location;
	            var state = _nextRouterState$location.state;
	            var pathname = _nextRouterState$location.pathname;
	            var query = _nextRouterState$location.query;
	
	            history.replace({ state: state, pathname: pathname, query: query });
	          }
	        });
	
	        return store;
	      };
	    };
	  };
	}
	
	exports['default'] = _redux.compose(_useDefaults2['default'], _routeReplacement2['default'], historySynchronization)(_reduxReactRouter2['default']);
	module.exports = exports['default'];

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = reduxReactRouter;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _redux = __webpack_require__(158);
	
	var _reactRouter = __webpack_require__(240);
	
	var _historyMiddleware = __webpack_require__(293);
	
	var _historyMiddleware2 = _interopRequireDefault(_historyMiddleware);
	
	var _constants = __webpack_require__(287);
	
	function reduxReactRouter(_ref) {
	  var routes = _ref.routes;
	  var createHistory = _ref.createHistory;
	  var parseQueryString = _ref.parseQueryString;
	  var stringifyQuery = _ref.stringifyQuery;
	  var routerStateSelector = _ref.routerStateSelector;
	
	  return function (createStore) {
	    return function (reducer, initialState) {
	
	      var baseCreateHistory = undefined;
	      if (typeof createHistory === 'function') {
	        baseCreateHistory = createHistory;
	      } else if (createHistory) {
	        baseCreateHistory = function () {
	          return createHistory;
	        };
	      }
	
	      var history = _reactRouter.useRoutes(baseCreateHistory)({
	        routes: routes,
	        parseQueryString: parseQueryString,
	        stringifyQuery: stringifyQuery
	      });
	
	      ['pushState', 'push', 'replaceState', 'replace', 'setState', 'go', 'goBack', 'goForward', 'listen', 'createLocation', 'match'].forEach(function (funcName) {
	        if (!history.hasOwnProperty(funcName) && typeof history[funcName] === 'function') {
	          throw new Error('History API does not support function: ' + funcName);
	        }
	      });
	
	      var store = _redux.applyMiddleware(_historyMiddleware2['default'](history))(createStore)(reducer, initialState);
	
	      store.history = history;
	      store[_constants.ROUTER_STATE_SELECTOR] = routerStateSelector;
	
	      return store;
	    };
	  };
	}
	
	module.exports = exports['default'];

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = historyMiddleware;
	
	var _constants = __webpack_require__(287);
	
	/**
	 * Middleware for interacting with the history API
	 * @param {History} History object
	 */
	
	function historyMiddleware(history) {
	  return function () {
	    return function (next) {
	      return function (action) {
	        if (action.type === _constants.HISTORY_API) {
	          var _action$payload = action.payload;
	          var method = _action$payload.method;
	          var args = _action$payload.args;
	
	          return history[method].apply(history, args);
	        }
	        return next(action);
	      };
	    };
	  };
	}
	
	module.exports = exports['default'];

/***/ },
/* 294 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports['default'] = useDefaults;
	var defaults = {
	  onError: function onError(error) {
	    throw error;
	  },
	  routerStateSelector: function routerStateSelector(state) {
	    return state.router;
	  }
	};
	
	function useDefaults(next) {
	  return function (options) {
	    return function (createStore) {
	      return function (reducer, initialState) {
	        var optionsWithDefaults = _extends({}, defaults, options);
	
	        var baseCreateHistory = optionsWithDefaults.createHistory;
	        var baseHistory = optionsWithDefaults.history;
	
	        var createHistory = undefined;
	        if (typeof baseCreateHistory === 'function') {
	          createHistory = baseCreateHistory;
	        } else if (baseHistory) {
	          createHistory = function () {
	            return baseHistory;
	          };
	        } else {
	          createHistory = null;
	        }
	
	        return next(_extends({}, optionsWithDefaults, {
	          createHistory: createHistory
	        }))(createStore)(reducer, initialState);
	      };
	    };
	  };
	}
	
	module.exports = exports['default'];

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports['default'] = routeReplacement;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _redux = __webpack_require__(158);
	
	var _reactRouter = __webpack_require__(240);
	
	var _replaceRoutesMiddleware = __webpack_require__(296);
	
	var _replaceRoutesMiddleware2 = _interopRequireDefault(_replaceRoutesMiddleware);
	
	function routeReplacement(next) {
	  return function (options) {
	    return function (createStore) {
	      return function (reducer, initialState) {
	        var baseRoutes = options.routes;
	        var getRoutes = options.getRoutes;
	        var routerStateSelector = options.routerStateSelector;
	
	        var store = undefined;
	
	        var childRoutes = [];
	        var areChildRoutesResolved = false;
	        var childRoutesCallbacks = [];
	
	        function replaceRoutes(r, isInit) {
	          childRoutes = _reactRouter.createRoutes(r);
	
	          var routerState = routerStateSelector(store.getState());
	          if (routerState && !isInit) {
	            var _routerState$location = routerState.location;
	            var state = _routerState$location.state;
	            var pathname = _routerState$location.pathname;
	            var query = _routerState$location.query;
	
	            store.history.replace({ state: state, pathname: pathname, query: query });
	          }
	
	          if (!areChildRoutesResolved) {
	            areChildRoutesResolved = true;
	            childRoutesCallbacks.forEach(function (cb) {
	              return cb(null, childRoutes);
	            });
	          }
	        }
	
	        var routes = undefined;
	        if (baseRoutes) {
	          routes = baseRoutes;
	        } else if (getRoutes) {
	          routes = getRoutes({
	            dispatch: function dispatch(action) {
	              return store.dispatch(action);
	            },
	            getState: function getState() {
	              return store.getState();
	            }
	          });
	        } else {
	          routes = [{
	            getChildRoutes: function getChildRoutes(location, cb) {
	              if (!areChildRoutesResolved) {
	                childRoutesCallbacks.push(cb);
	                return;
	              }
	
	              cb(null, childRoutes);
	            }
	          }];
	        }
	
	        store = _redux.compose(_redux.applyMiddleware(_replaceRoutesMiddleware2['default'](replaceRoutes)), next(_extends({}, options, {
	          routes: _reactRouter.createRoutes(routes)
	        })))(createStore)(reducer, initialState);
	
	        return store;
	      };
	    };
	  };
	}
	
	module.exports = exports['default'];

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = replaceRoutesMiddleware;
	
	var _constants = __webpack_require__(287);
	
	function replaceRoutesMiddleware(replaceRoutes) {
	  return function () {
	    return function (next) {
	      return function (action) {
	        var isInitRoutes = action.type === _constants.INIT_ROUTES;
	        if (isInitRoutes || action.type === _constants.REPLACE_ROUTES) {
	          replaceRoutes(action.payload, isInitRoutes);
	        }
	        return next(action);
	      };
	    };
	  };
	}
	
	module.exports = exports['default'];

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = isActive;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _reactRouterLibIsActive = __webpack_require__(269);
	
	var _reactRouterLibIsActive2 = _interopRequireDefault(_reactRouterLibIsActive);
	
	/**
	 * Creates a router state selector that returns whether or not the given
	 * pathname and query are active.
	 * @param {String} pathname
	 * @param {Object} query
	 * @param {Boolean} indexOnly
	 * @return {Boolean}
	 */
	
	function isActive(pathname, query) {
	  var indexOnly = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];
	
	  return function (state) {
	    if (!state) return false;
	    var location = state.location;
	    var params = state.params;
	    var routes = state.routes;
	
	    return _reactRouterLibIsActive2['default'](pathname, query, indexOnly, location, routes, params);
	  };
	}
	
	module.exports = exports['default'];

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.generatedHexagram = generatedHexagram;
	exports.clearHexagram = clearHexagram;
	exports.generateKua = generateKua;
	exports.generateHexagram = generateHexagram;
	exports.generateTrigram = generateTrigram;
	
	var _ActionTypes = __webpack_require__(299);
	
	function generatedHexagram(kuas) {
	  return {
	    type: _ActionTypes.HEXAGRAM_GENERATED
	  };
	}
	
	//payload: kuas,
	function clearHexagram() {
	  return {
	    type: _ActionTypes.HEXAGRAM_CLEAR
	  };
	}
	
	// Generate a single line
	function generateKua() {
	  return function (dispatch, getState) {
	    var hexx = getState().kuas;
	
	    // hexagram complete with 6!
	    if (!hexx || hexx.length <= 5) {
	      dispatch({ type: _ActionTypes.HEXAGRAM_GENERATE_KUA });
	    } else if (hexx && hexx.length >= 6) {
	      dispatch(generatedHexagram(hexx));
	    }
	  };
	}
	
	// 6 lines
	function generateHexagram() {
	  return function (dispatch, getState) {
	    // Throw 6 coins
	    var _arr = [1, 2, 3, 4, 5, 6];
	    for (var _i = 0; _i < _arr.length; _i++) {
	      var i = _arr[_i];
	      dispatch(generateKua());
	    }
	
	    // The last one emit 'HEXAGRAM_GENERATED'
	    dispatch(generatedHexagram());
	  };
	}
	
	// 3 lines
	function generateTrigram() {
	  return function (dispatch, getState) {
	    // Throw 3 coins
	    var _arr2 = [1, 2, 3];
	    for (var _i2 = 0; _i2 < _arr2.length; _i2++) {
	      var i = _arr2[_i2];
	      dispatch(generateKua());
	    }
	
	    dispatch({ type: _ActionTypes.HEXAGRAM_GENERATE_TRIGRAM });
	  };
	}

/***/ },
/* 299 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var HEXAGRAM_GENERATE_KUA = exports.HEXAGRAM_GENERATE_KUA = 'HEXAGRAM_GENERATE_KUA';
	var HEXAGRAM_GENERATE_TRIGRAM = exports.HEXAGRAM_GENERATE_TRIGRAM = 'HEXAGRAM_GENERATE_TRIGRAM';
	var HEXAGRAM_GENERATE_HEXAGRAM = exports.HEXAGRAM_GENERATE_HEXAGRAM = 'HEXAGRAM_GENERATE_HEXAGRAM';
	var HEXAGRAM_GENERATED = exports.HEXAGRAM_GENERATED = 'HEXAGRAM_GENERATED';
	var HEXAGRAM_CLEAR = exports.HEXAGRAM_CLEAR = 'HEXAGRAM_CLEAR';

/***/ },
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */,
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */,
/* 324 */,
/* 325 */,
/* 326 */,
/* 327 */,
/* 328 */,
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */,
/* 335 */,
/* 336 */,
/* 337 */,
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */,
/* 344 */,
/* 345 */,
/* 346 */,
/* 347 */,
/* 348 */,
/* 349 */,
/* 350 */,
/* 351 */,
/* 352 */,
/* 353 */,
/* 354 */,
/* 355 */,
/* 356 */,
/* 357 */,
/* 358 */,
/* 359 */,
/* 360 */,
/* 361 */,
/* 362 */,
/* 363 */,
/* 364 */,
/* 365 */,
/* 366 */,
/* 367 */,
/* 368 */,
/* 369 */,
/* 370 */,
/* 371 */,
/* 372 */,
/* 373 */,
/* 374 */,
/* 375 */,
/* 376 */,
/* 377 */,
/* 378 */,
/* 379 */,
/* 380 */,
/* 381 */,
/* 382 */,
/* 383 */,
/* 384 */,
/* 385 */,
/* 386 */,
/* 387 */,
/* 388 */,
/* 389 */,
/* 390 */,
/* 391 */,
/* 392 */,
/* 393 */,
/* 394 */,
/* 395 */,
/* 396 */,
/* 397 */,
/* 398 */,
/* 399 */,
/* 400 */,
/* 401 */,
/* 402 */,
/* 403 */,
/* 404 */,
/* 405 */,
/* 406 */,
/* 407 */,
/* 408 */,
/* 409 */,
/* 410 */,
/* 411 */,
/* 412 */,
/* 413 */,
/* 414 */,
/* 415 */,
/* 416 */,
/* 417 */,
/* 418 */,
/* 419 */,
/* 420 */,
/* 421 */,
/* 422 */,
/* 423 */,
/* 424 */,
/* 425 */,
/* 426 */,
/* 427 */,
/* 428 */,
/* 429 */,
/* 430 */,
/* 431 */,
/* 432 */,
/* 433 */,
/* 434 */,
/* 435 */,
/* 436 */,
/* 437 */,
/* 438 */,
/* 439 */,
/* 440 */,
/* 441 */,
/* 442 */,
/* 443 */,
/* 444 */,
/* 445 */,
/* 446 */,
/* 447 */,
/* 448 */,
/* 449 */,
/* 450 */,
/* 451 */,
/* 452 */,
/* 453 */,
/* 454 */,
/* 455 */,
/* 456 */,
/* 457 */,
/* 458 */,
/* 459 */,
/* 460 */,
/* 461 */,
/* 462 */,
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactAddonsPureRenderMixin = __webpack_require__(311);
	
	var _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);
	
	var _svgIcon = __webpack_require__(331);
	
	var _svgIcon2 = _interopRequireDefault(_svgIcon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var NavigationArrowBack = _react2.default.createClass({
	  displayName: 'NavigationArrowBack',
	
	  mixins: [_reactAddonsPureRenderMixin2.default],
	
	  render: function render() {
	    return _react2.default.createElement(
	      _svgIcon2.default,
	      this.props,
	      _react2.default.createElement('path', { d: 'M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z' })
	    );
	  }
	});
	
	exports.default = NavigationArrowBack;
	module.exports = exports['default'];

/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactAddonsPureRenderMixin = __webpack_require__(311);
	
	var _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);
	
	var _svgIcon = __webpack_require__(331);
	
	var _svgIcon2 = _interopRequireDefault(_svgIcon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ImageBrightness7 = _react2.default.createClass({
	  displayName: 'ImageBrightness7',
	
	  mixins: [_reactAddonsPureRenderMixin2.default],
	
	  render: function render() {
	    return _react2.default.createElement(
	      _svgIcon2.default,
	      this.props,
	      _react2.default.createElement('path', { d: 'M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm0-10c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z' })
	    );
	  }
	});
	
	exports.default = ImageBrightness7;
	module.exports = exports['default'];

/***/ },
/* 465 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(240);
	
	var _reactRouter2 = _interopRequireDefault(_reactRouter);
	
	var _reactRedux = __webpack_require__(168);
	
	var _reduxRouter = __webpack_require__(285);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Footer = _react2.default.createClass({
	  displayName: 'Footer',
	  render: function render() {
	    return _react2.default.createElement(
	      'div',
	      { className: 'footer icon-bar' },
	      _react2.default.createElement(
	        _reactRouter.Link,
	        { to: '/play', className: this.props.path === '/play' || this.props.path === '/' ? 'active' : 'normal', ref: 'play' },
	        _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(
	            'i',
	            { className: 'material-icons' },
	            'brightness_high'
	          )
	        )
	      ),
	      _react2.default.createElement(
	        _reactRouter.Link,
	        { to: '/list', className: this.props.path === '/list' || this.props.path.startsWith('/details') ? 'active' : 'normal', ref: 'list' },
	        _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(
	            'i',
	            { className: 'material-icons' },
	            'menu'
	          )
	        )
	      )
	    );
	  }
	});
	
	/*
	<Link to="/day">
	 <div><i className="material-icons">explore</i></div>
	</Link>
	*/
	
	exports.default = (0, _reactRedux.connect)(function (state) {
	  return {
	    path: state.router.location.pathname,
	    params: state.router.params
	  };
	}, { pushState: _reduxRouter.pushState })(Footer);

/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(467);

/***/ },
/* 467 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * @providesModule ReactCSSTransitionGroup
	 */
	
	'use strict';
	
	var React = __webpack_require__(2);
	
	var assign = __webpack_require__(39);
	
	var ReactTransitionGroup = __webpack_require__(322);
	var ReactCSSTransitionGroupChild = __webpack_require__(468);
	
	function createTransitionTimeoutPropValidator(transitionType) {
	  var timeoutPropName = 'transition' + transitionType + 'Timeout';
	  var enabledPropName = 'transition' + transitionType;
	
	  return function (props) {
	    // If the transition is enabled
	    if (props[enabledPropName]) {
	      // If no timeout duration is provided
	      if (props[timeoutPropName] == null) {
	        return new Error(timeoutPropName + ' wasn\'t supplied to ReactCSSTransitionGroup: ' + 'this can cause unreliable animations and won\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');
	
	        // If the duration isn't a number
	      } else if (typeof props[timeoutPropName] !== 'number') {
	          return new Error(timeoutPropName + ' must be a number (in milliseconds)');
	        }
	    }
	  };
	}
	
	var ReactCSSTransitionGroup = React.createClass({
	  displayName: 'ReactCSSTransitionGroup',
	
	  propTypes: {
	    transitionName: ReactCSSTransitionGroupChild.propTypes.name,
	
	    transitionAppear: React.PropTypes.bool,
	    transitionEnter: React.PropTypes.bool,
	    transitionLeave: React.PropTypes.bool,
	    transitionAppearTimeout: createTransitionTimeoutPropValidator('Appear'),
	    transitionEnterTimeout: createTransitionTimeoutPropValidator('Enter'),
	    transitionLeaveTimeout: createTransitionTimeoutPropValidator('Leave')
	  },
	
	  getDefaultProps: function () {
	    return {
	      transitionAppear: false,
	      transitionEnter: true,
	      transitionLeave: true
	    };
	  },
	
	  _wrapChild: function (child) {
	    // We need to provide this childFactory so that
	    // ReactCSSTransitionGroupChild can receive updates to name, enter, and
	    // leave while it is leaving.
	    return React.createElement(ReactCSSTransitionGroupChild, {
	      name: this.props.transitionName,
	      appear: this.props.transitionAppear,
	      enter: this.props.transitionEnter,
	      leave: this.props.transitionLeave,
	      appearTimeout: this.props.transitionAppearTimeout,
	      enterTimeout: this.props.transitionEnterTimeout,
	      leaveTimeout: this.props.transitionLeaveTimeout
	    }, child);
	  },
	
	  render: function () {
	    return React.createElement(ReactTransitionGroup, assign({}, this.props, { childFactory: this._wrapChild }));
	  }
	});
	
	module.exports = ReactCSSTransitionGroup;

/***/ },
/* 468 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * @providesModule ReactCSSTransitionGroupChild
	 */
	
	'use strict';
	
	var React = __webpack_require__(2);
	var ReactDOM = __webpack_require__(3);
	
	var CSSCore = __webpack_require__(469);
	var ReactTransitionEvents = __webpack_require__(470);
	
	var onlyChild = __webpack_require__(156);
	
	// We don't remove the element from the DOM until we receive an animationend or
	// transitionend event. If the user screws up and forgets to add an animation
	// their node will be stuck in the DOM forever, so we detect if an animation
	// does not start and if it doesn't, we just call the end listener immediately.
	var TICK = 17;
	
	var ReactCSSTransitionGroupChild = React.createClass({
	  displayName: 'ReactCSSTransitionGroupChild',
	
	  propTypes: {
	    name: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.shape({
	      enter: React.PropTypes.string,
	      leave: React.PropTypes.string,
	      active: React.PropTypes.string
	    }), React.PropTypes.shape({
	      enter: React.PropTypes.string,
	      enterActive: React.PropTypes.string,
	      leave: React.PropTypes.string,
	      leaveActive: React.PropTypes.string,
	      appear: React.PropTypes.string,
	      appearActive: React.PropTypes.string
	    })]).isRequired,
	
	    // Once we require timeouts to be specified, we can remove the
	    // boolean flags (appear etc.) and just accept a number
	    // or a bool for the timeout flags (appearTimeout etc.)
	    appear: React.PropTypes.bool,
	    enter: React.PropTypes.bool,
	    leave: React.PropTypes.bool,
	    appearTimeout: React.PropTypes.number,
	    enterTimeout: React.PropTypes.number,
	    leaveTimeout: React.PropTypes.number
	  },
	
	  transition: function (animationType, finishCallback, userSpecifiedDelay) {
	    var node = ReactDOM.findDOMNode(this);
	
	    if (!node) {
	      if (finishCallback) {
	        finishCallback();
	      }
	      return;
	    }
	
	    var className = this.props.name[animationType] || this.props.name + '-' + animationType;
	    var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';
	    var timeout = null;
	
	    var endListener = function (e) {
	      if (e && e.target !== node) {
	        return;
	      }
	
	      clearTimeout(timeout);
	
	      CSSCore.removeClass(node, className);
	      CSSCore.removeClass(node, activeClassName);
	
	      ReactTransitionEvents.removeEndEventListener(node, endListener);
	
	      // Usually this optional callback is used for informing an owner of
	      // a leave animation and telling it to remove the child.
	      if (finishCallback) {
	        finishCallback();
	      }
	    };
	
	    CSSCore.addClass(node, className);
	
	    // Need to do this to actually trigger a transition.
	    this.queueClass(activeClassName);
	
	    // If the user specified a timeout delay.
	    if (userSpecifiedDelay) {
	      // Clean-up the animation after the specified delay
	      timeout = setTimeout(endListener, userSpecifiedDelay);
	      this.transitionTimeouts.push(timeout);
	    } else {
	      // DEPRECATED: this listener will be removed in a future version of react
	      ReactTransitionEvents.addEndEventListener(node, endListener);
	    }
	  },
	
	  queueClass: function (className) {
	    this.classNameQueue.push(className);
	
	    if (!this.timeout) {
	      this.timeout = setTimeout(this.flushClassNameQueue, TICK);
	    }
	  },
	
	  flushClassNameQueue: function () {
	    if (this.isMounted()) {
	      this.classNameQueue.forEach(CSSCore.addClass.bind(CSSCore, ReactDOM.findDOMNode(this)));
	    }
	    this.classNameQueue.length = 0;
	    this.timeout = null;
	  },
	
	  componentWillMount: function () {
	    this.classNameQueue = [];
	    this.transitionTimeouts = [];
	  },
	
	  componentWillUnmount: function () {
	    if (this.timeout) {
	      clearTimeout(this.timeout);
	    }
	    this.transitionTimeouts.forEach(function (timeout) {
	      clearTimeout(timeout);
	    });
	  },
	
	  componentWillAppear: function (done) {
	    if (this.props.appear) {
	      this.transition('appear', done, this.props.appearTimeout);
	    } else {
	      done();
	    }
	  },
	
	  componentWillEnter: function (done) {
	    if (this.props.enter) {
	      this.transition('enter', done, this.props.enterTimeout);
	    } else {
	      done();
	    }
	  },
	
	  componentWillLeave: function (done) {
	    if (this.props.leave) {
	      this.transition('leave', done, this.props.leaveTimeout);
	    } else {
	      done();
	    }
	  },
	
	  render: function () {
	    return onlyChild(this.props.children);
	  }
	});
	
	module.exports = ReactCSSTransitionGroupChild;

/***/ },
/* 469 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSCore
	 * @typechecks
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(13);
	
	/**
	 * The CSSCore module specifies the API (and implements most of the methods)
	 * that should be used when dealing with the display of elements (via their
	 * CSS classes and visibility on screen. It is an API focused on mutating the
	 * display and not reading it as no logical state should be encoded in the
	 * display of elements.
	 */
	
	var CSSCore = {
	
	  /**
	   * Adds the class passed in to the element if it doesn't already have it.
	   *
	   * @param {DOMElement} element the element to set the class on
	   * @param {string} className the CSS className
	   * @return {DOMElement} the element passed in
	   */
	  addClass: function (element, className) {
	    !!/\s/.test(className) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'CSSCore.addClass takes only a single class name. "%s" contains ' + 'multiple classes.', className) : invariant(false) : undefined;
	
	    if (className) {
	      if (element.classList) {
	        element.classList.add(className);
	      } else if (!CSSCore.hasClass(element, className)) {
	        element.className = element.className + ' ' + className;
	      }
	    }
	    return element;
	  },
	
	  /**
	   * Removes the class passed in from the element
	   *
	   * @param {DOMElement} element the element to set the class on
	   * @param {string} className the CSS className
	   * @return {DOMElement} the element passed in
	   */
	  removeClass: function (element, className) {
	    !!/\s/.test(className) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'CSSCore.removeClass takes only a single class name. "%s" contains ' + 'multiple classes.', className) : invariant(false) : undefined;
	
	    if (className) {
	      if (element.classList) {
	        element.classList.remove(className);
	      } else if (CSSCore.hasClass(element, className)) {
	        element.className = element.className.replace(new RegExp('(^|\\s)' + className + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ') // multiple spaces to one
	        .replace(/^\s*|\s*$/g, ''); // trim the ends
	      }
	    }
	    return element;
	  },
	
	  /**
	   * Helper to add or remove a class from an element based on a condition.
	   *
	   * @param {DOMElement} element the element to set the class on
	   * @param {string} className the CSS className
	   * @param {*} bool condition to whether to add or remove the class
	   * @return {DOMElement} the element passed in
	   */
	  conditionClass: function (element, className, bool) {
	    return (bool ? CSSCore.addClass : CSSCore.removeClass)(element, className);
	  },
	
	  /**
	   * Tests whether the element has the class specified.
	   *
	   * @param {DOMNode|DOMWindow} element the element to set the class on
	   * @param {string} className the CSS className
	   * @return {boolean} true if the element has the class, false if not
	   */
	  hasClass: function (element, className) {
	    !!/\s/.test(className) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'CSS.hasClass takes only a single class name.') : invariant(false) : undefined;
	    if (element.classList) {
	      return !!className && element.classList.contains(className);
	    }
	    return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;
	  }
	
	};
	
	module.exports = CSSCore;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactTransitionEvents
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(9);
	
	/**
	 * EVENT_NAME_MAP is used to determine which event fired when a
	 * transition/animation ends, based on the style property used to
	 * define that event.
	 */
	var EVENT_NAME_MAP = {
	  transitionend: {
	    'transition': 'transitionend',
	    'WebkitTransition': 'webkitTransitionEnd',
	    'MozTransition': 'mozTransitionEnd',
	    'OTransition': 'oTransitionEnd',
	    'msTransition': 'MSTransitionEnd'
	  },
	
	  animationend: {
	    'animation': 'animationend',
	    'WebkitAnimation': 'webkitAnimationEnd',
	    'MozAnimation': 'mozAnimationEnd',
	    'OAnimation': 'oAnimationEnd',
	    'msAnimation': 'MSAnimationEnd'
	  }
	};
	
	var endEvents = [];
	
	function detectEvents() {
	  var testEl = document.createElement('div');
	  var style = testEl.style;
	
	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are useable, and if not remove them
	  // from the map
	  if (!('AnimationEvent' in window)) {
	    delete EVENT_NAME_MAP.animationend.animation;
	  }
	
	  if (!('TransitionEvent' in window)) {
	    delete EVENT_NAME_MAP.transitionend.transition;
	  }
	
	  for (var baseEventName in EVENT_NAME_MAP) {
	    var baseEvents = EVENT_NAME_MAP[baseEventName];
	    for (var styleName in baseEvents) {
	      if (styleName in style) {
	        endEvents.push(baseEvents[styleName]);
	        break;
	      }
	    }
	  }
	}
	
	if (ExecutionEnvironment.canUseDOM) {
	  detectEvents();
	}
	
	// We use the raw {add|remove}EventListener() call because EventListener
	// does not know how to remove event listeners and we really should
	// clean up. Also, these events are not triggered in older browsers
	// so we should be A-OK here.
	
	function addEventListener(node, eventName, eventListener) {
	  node.addEventListener(eventName, eventListener, false);
	}
	
	function removeEventListener(node, eventName, eventListener) {
	  node.removeEventListener(eventName, eventListener, false);
	}
	
	var ReactTransitionEvents = {
	  addEndEventListener: function (node, eventListener) {
	    if (endEvents.length === 0) {
	      // If CSS transitions are not supported, trigger an "end animation"
	      // event immediately.
	      window.setTimeout(eventListener, 0);
	      return;
	    }
	    endEvents.forEach(function (endEvent) {
	      addEventListener(node, endEvent, eventListener);
	    });
	  },
	
	  removeEndEventListener: function (node, eventListener) {
	    if (endEvents.length === 0) {
	      return;
	    }
	    endEvents.forEach(function (endEvent) {
	      removeEventListener(node, endEvent, eventListener);
	    });
	  }
	};
	
	module.exports = ReactTransitionEvents;

/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.routeReducer = exports.UPDATE_PATH = undefined;
	exports.pushPath = pushPath;
	exports.replacePath = replacePath;
	exports.syncReduxAndRouter = syncReduxAndRouter;
	
	var _deepEqual = __webpack_require__(249);
	
	var _deepEqual2 = _interopRequireDefault(_deepEqual);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Constants
	
	var INIT_PATH = '@@router/INIT_PATH';
	var UPDATE_PATH = exports.UPDATE_PATH = '@@router/UPDATE_PATH';
	var SELECT_STATE = function SELECT_STATE(state) {
	  return state.routing;
	};
	
	// Action creators
	
	function initPath(path, state) {
	  return {
	    type: INIT_PATH,
	    payload: {
	      path: path,
	      state: state,
	      replace: false,
	      avoidRouterUpdate: true
	    }
	  };
	}
	
	function pushPath(path, state) {
	  var _ref = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	
	  var _ref$avoidRouterUpdat = _ref.avoidRouterUpdate;
	  var avoidRouterUpdate = _ref$avoidRouterUpdat === undefined ? false : _ref$avoidRouterUpdat;
	
	  return {
	    type: UPDATE_PATH,
	    payload: {
	      path: path,
	      state: state,
	      replace: false,
	      avoidRouterUpdate: !!avoidRouterUpdate
	    }
	  };
	}
	
	function replacePath(path, state) {
	  var _ref2 = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
	
	  var _ref2$avoidRouterUpda = _ref2.avoidRouterUpdate;
	  var avoidRouterUpdate = _ref2$avoidRouterUpda === undefined ? false : _ref2$avoidRouterUpda;
	
	  return {
	    type: UPDATE_PATH,
	    payload: {
	      path: path,
	      state: state,
	      replace: true,
	      avoidRouterUpdate: !!avoidRouterUpdate
	    }
	  };
	}
	
	// Reducer
	
	var initialState = {
	  changeId: 1,
	  path: undefined,
	  state: undefined,
	  replace: false
	};
	
	function update() {
	  var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
	  var _ref3 = arguments[1];
	  var type = _ref3.type;
	  var payload = _ref3.payload;
	
	  if (type === INIT_PATH || type === UPDATE_PATH) {
	    return _extends({}, state, {
	      path: payload.path,
	      changeId: state.changeId + (payload.avoidRouterUpdate ? 0 : 1),
	      state: payload.state,
	      replace: payload.replace
	    });
	  }
	  return state;
	}
	
	// Syncing
	
	function locationsAreEqual(a, b) {
	  return a != null && b != null && a.path === b.path && (0, _deepEqual2.default)(a.state, b.state);
	}
	
	function createPath(location) {
	  var pathname = location.pathname;
	  var search = location.search;
	  var hash = location.hash;
	
	  var result = pathname;
	  if (search) result += search;
	  if (hash) result += hash;
	  return result;
	}
	
	function syncReduxAndRouter(history, store) {
	  var selectRouterState = arguments.length <= 2 || arguments[2] === undefined ? SELECT_STATE : arguments[2];
	
	  var getRouterState = function getRouterState() {
	    return selectRouterState(store.getState());
	  };
	
	  // To properly handle store updates we need to track the last route.
	  // This route contains a `changeId` which is updated on every
	  // `pushPath` and `replacePath`. If this id changes we always
	  // trigger a history update. However, if the id does not change, we
	  // check if the location has changed, and if it is we trigger a
	  // history update. It's possible for this to happen when something
	  // reloads the entire app state such as redux devtools.
	  var lastRoute = undefined;
	
	  if (!getRouterState()) {
	    throw new Error('Cannot sync router: route state does not exist. Did you ' + 'install the routing reducer?');
	  }
	
	  var unsubscribeHistory = history.listen(function (location) {
	    var route = {
	      path: createPath(location),
	      state: location.state
	    };
	
	    if (!lastRoute) {
	      // `initialState` *should* represent the current location when
	      // the app loads, but we cannot get the current location when it
	      // is defined. What happens is `history.listen` is called
	      // immediately when it is registered, and it updates the app
	      // state with an UPDATE_PATH action. This causes problem when
	      // users are listening to UPDATE_PATH actions just for
	      // *changes*, and with redux devtools because "revert" will use
	      // `initialState` and it won't revert to the original URL.
	      // Instead, we specialize the first route notification and do
	      // different things based on it.
	      initialState = {
	        changeId: 1,
	        path: route.path,
	        state: route.state,
	        replace: false
	      };
	
	      // Also set `lastRoute` so that the store subscriber doesn't
	      // trigger an unnecessary `pushState` on load
	      lastRoute = initialState;
	
	      store.dispatch(initPath(route.path, route.state));
	    } else if (!locationsAreEqual(getRouterState(), route)) {
	      // The above check avoids dispatching an action if the store is
	      // already up-to-date
	      var method = location.action === 'REPLACE' ? replacePath : pushPath;
	      store.dispatch(method(route.path, route.state, { avoidRouterUpdate: true }));
	    }
	  });
	
	  var unsubscribeStore = store.subscribe(function () {
	    var routing = getRouterState();
	
	    // Only trigger history update if this is a new change or the
	    // location has changed.
	    if (lastRoute.changeId !== routing.changeId || !locationsAreEqual(lastRoute, routing)) {
	
	      lastRoute = routing;
	      var method = routing.replace ? 'replaceState' : 'pushState';
	      history[method](routing.state, routing.path);
	    }
	  });
	
	  return function unsubscribe() {
	    unsubscribeHistory();
	    unsubscribeStore();
	  };
	}
	
	exports.routeReducer = update;


/***/ },
/* 472 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(179);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _reactRedux = __webpack_require__(168);
	
	var _lodash = __webpack_require__(473);
	
	var _ = _interopRequireWildcard(_lodash);
	
	var _reactRouter = __webpack_require__(240);
	
	var _reactRouter2 = _interopRequireDefault(_reactRouter);
	
	var _reduxRouter = __webpack_require__(285);
	
	var _HexagramActions = __webpack_require__(298);
	
	var HexagramActions = _interopRequireWildcard(_HexagramActions);
	
	var _Kua = __webpack_require__(475);
	
	var _Kua2 = _interopRequireDefault(_Kua);
	
	var _HexagramInfoCard = __webpack_require__(476);
	
	var _HexagramInfoCard2 = _interopRequireDefault(_HexagramInfoCard);
	
	var _materialUi = __webpack_require__(300);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ReactCSSTransitionGroup = __webpack_require__(466);
	
	var opts = {
	  hexagram_timeout: 3500
	};
	
	var PlayPage = _react2.default.createClass({
	  displayName: 'PlayPage',
	
	  propTypes: {
	    kuas: _react.PropTypes.arrayOf(_react.PropTypes.number),
	    hexagram: _react.PropTypes.object,
	    dispatch: _react.PropTypes.func
	  },
	
	  getInitialState: function getInitialState() {
	    return { already_played: !_.isEmpty(this.props.hexagram) };
	  },
	  render: function render() {
	    var kuas = this.props.kuas;
	
	    return _react2.default.createElement(
	      'div',
	      { className: 'playpage-container' },
	      _react2.default.createElement(
	        'div',
	        { className: 'canvas' },
	        _react2.default.createElement(
	          'div',
	          { className: 'infoArea' },
	          _react2.default.createElement(
	            'div',
	            { className: 'question', ref: 'question' },
	            _react2.default.createElement(
	              ReactCSSTransitionGroup,
	              { transitionName: 'question',
	                transitionEnterTimeout: 400, transitionLeaveTimeout: 400 },
	              this.renderQuestion()
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'iching-card', ref: 'card', onTouchTap: this.goToHexagram, onClick: this.goToHexagram },
	            _react2.default.createElement(
	              ReactCSSTransitionGroup,
	              { transitionName: 'hexagram-preview',
	                transitionEnterTimeout: 400, transitionLeaveTimeout: 400 },
	              this.renderPreviewCard()
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'ichingDragArea' },
	          _react2.default.createElement('button', { ref: 'gongo', className: 'gongo',
	            onMouseDown: this.onGongoHold,
	            onMouseUp: this.onGongoRelease,
	            onTouchStart: this.onGongoHold,
	            onTouchEnd: this.onGongoRelease,
	            onTouchTap: this.play }),
	          _react2.default.createElement('audio', { ref: 'gongosound', src: 'assets/audio/bell-square.mp3', preload: 'auto' })
	        )
	      )
	    );
	  },
	  renderPreviewCard: function renderPreviewCard() {
	    var hexagram = this.props.hexagram;
	
	    if (!_.isEmpty(hexagram)) {
	      return _react2.default.createElement(_HexagramInfoCard2.default, { hexagram: hexagram, trigrams: true });
	    }
	  },
	  renderQuestion: function renderQuestion() {
	    if (!this.state.already_played) {
	      return _react2.default.createElement(
	        'h1',
	        null,
	        'Concentrate and make your question'
	      );
	    }
	  },
	  onGongoHold: function onGongoHold() {
	    _reactDom2.default.findDOMNode(this.refs.gongo).className = 'gongo down';
	  },
	  onGongoRelease: function onGongoRelease() {
	    var _this = this;
	
	    _reactDom2.default.findDOMNode(this.refs.gongo).className = 'gongo hit';
	    var au = _reactDom2.default.findDOMNode(this.refs.gongosound);
	    au.currentTime = 0.0;
	    au.play();
	
	    window.store.dispatch(HexagramActions.clearHexagram());
	    this.setState({ already_played: true });
	    setTimeout(function () {
	      _this.play();
	    }, opts.hexagram_timeout);
	  },
	  goToHexagram: function goToHexagram() {
	    window.store.dispatch((0, _reduxRouter.pushState)(null, '/details/' + this.props.hexagram.name, ''));
	  },
	  play: function play(ev) {
	    window.store.dispatch(HexagramActions.generateHexagram());
	  }
	});
	
	exports.default = (0, _reactRedux.connect)(function (state) {
	  return {
	    kuas: state.kuas,
	    hexagram: state.hexagram
	  };
	}, { pushState: _reduxRouter.pushState })(PlayPage);

/***/ },
/* 473 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**
	 * @license
	 * lodash 4.7.0 (Custom Build) <https://lodash.com/>
	 * Build: `lodash -d -o ./foo/lodash.js`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	;(function() {
	
	  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
	  var undefined;
	
	  /** Used as the semantic version number. */
	  var VERSION = '4.7.0';
	
	  /** Used as the size to enable large array optimizations. */
	  var LARGE_ARRAY_SIZE = 200;
	
	  /** Used as the `TypeError` message for "Functions" methods. */
	  var FUNC_ERROR_TEXT = 'Expected a function';
	
	  /** Used to stand-in for `undefined` hash values. */
	  var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	  /** Used as the internal argument placeholder. */
	  var PLACEHOLDER = '__lodash_placeholder__';
	
	  /** Used to compose bitmasks for wrapper metadata. */
	  var BIND_FLAG = 1,
	      BIND_KEY_FLAG = 2,
	      CURRY_BOUND_FLAG = 4,
	      CURRY_FLAG = 8,
	      CURRY_RIGHT_FLAG = 16,
	      PARTIAL_FLAG = 32,
	      PARTIAL_RIGHT_FLAG = 64,
	      ARY_FLAG = 128,
	      REARG_FLAG = 256,
	      FLIP_FLAG = 512;
	
	  /** Used to compose bitmasks for comparison styles. */
	  var UNORDERED_COMPARE_FLAG = 1,
	      PARTIAL_COMPARE_FLAG = 2;
	
	  /** Used as default options for `_.truncate`. */
	  var DEFAULT_TRUNC_LENGTH = 30,
	      DEFAULT_TRUNC_OMISSION = '...';
	
	  /** Used to detect hot functions by number of calls within a span of milliseconds. */
	  var HOT_COUNT = 150,
	      HOT_SPAN = 16;
	
	  /** Used to indicate the type of lazy iteratees. */
	  var LAZY_FILTER_FLAG = 1,
	      LAZY_MAP_FLAG = 2,
	      LAZY_WHILE_FLAG = 3;
	
	  /** Used as references for various `Number` constants. */
	  var INFINITY = 1 / 0,
	      MAX_SAFE_INTEGER = 9007199254740991,
	      MAX_INTEGER = 1.7976931348623157e+308,
	      NAN = 0 / 0;
	
	  /** Used as references for the maximum length and index of an array. */
	  var MAX_ARRAY_LENGTH = 4294967295,
	      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
	      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
	
	  /** `Object#toString` result references. */
	  var argsTag = '[object Arguments]',
	      arrayTag = '[object Array]',
	      boolTag = '[object Boolean]',
	      dateTag = '[object Date]',
	      errorTag = '[object Error]',
	      funcTag = '[object Function]',
	      genTag = '[object GeneratorFunction]',
	      mapTag = '[object Map]',
	      numberTag = '[object Number]',
	      objectTag = '[object Object]',
	      promiseTag = '[object Promise]',
	      regexpTag = '[object RegExp]',
	      setTag = '[object Set]',
	      stringTag = '[object String]',
	      symbolTag = '[object Symbol]',
	      weakMapTag = '[object WeakMap]',
	      weakSetTag = '[object WeakSet]';
	
	  var arrayBufferTag = '[object ArrayBuffer]',
	      dataViewTag = '[object DataView]',
	      float32Tag = '[object Float32Array]',
	      float64Tag = '[object Float64Array]',
	      int8Tag = '[object Int8Array]',
	      int16Tag = '[object Int16Array]',
	      int32Tag = '[object Int32Array]',
	      uint8Tag = '[object Uint8Array]',
	      uint8ClampedTag = '[object Uint8ClampedArray]',
	      uint16Tag = '[object Uint16Array]',
	      uint32Tag = '[object Uint32Array]';
	
	  /** Used to match empty string literals in compiled template source. */
	  var reEmptyStringLeading = /\b__p \+= '';/g,
	      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
	      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
	
	  /** Used to match HTML entities and HTML characters. */
	  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,
	      reUnescapedHtml = /[&<>"'`]/g,
	      reHasEscapedHtml = RegExp(reEscapedHtml.source),
	      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
	
	  /** Used to match template delimiters. */
	  var reEscape = /<%-([\s\S]+?)%>/g,
	      reEvaluate = /<%([\s\S]+?)%>/g,
	      reInterpolate = /<%=([\s\S]+?)%>/g;
	
	  /** Used to match property names within property paths. */
	  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	      reIsPlainProp = /^\w*$/,
	      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]/g;
	
	  /** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */
	  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
	      reHasRegExpChar = RegExp(reRegExpChar.source);
	
	  /** Used to match leading and trailing whitespace. */
	  var reTrim = /^\s+|\s+$/g,
	      reTrimStart = /^\s+/,
	      reTrimEnd = /\s+$/;
	
	  /** Used to match backslashes in property paths. */
	  var reEscapeChar = /\\(\\)?/g;
	
	  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */
	  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
	
	  /** Used to match `RegExp` flags from their coerced string values. */
	  var reFlags = /\w*$/;
	
	  /** Used to detect hexadecimal string values. */
	  var reHasHexPrefix = /^0x/i;
	
	  /** Used to detect bad signed hexadecimal string values. */
	  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
	
	  /** Used to detect binary string values. */
	  var reIsBinary = /^0b[01]+$/i;
	
	  /** Used to detect host constructors (Safari). */
	  var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	  /** Used to detect octal string values. */
	  var reIsOctal = /^0o[0-7]+$/i;
	
	  /** Used to detect unsigned integer values. */
	  var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */
	  var reLatin1 = /[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g;
	
	  /** Used to ensure capturing order of template delimiters. */
	  var reNoMatch = /($^)/;
	
	  /** Used to match unescaped characters in compiled string literals. */
	  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
	
	  /** Used to compose unicode character classes. */
	  var rsAstralRange = '\\ud800-\\udfff',
	      rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
	      rsComboSymbolsRange = '\\u20d0-\\u20f0',
	      rsDingbatRange = '\\u2700-\\u27bf',
	      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
	      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
	      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
	      rsQuoteRange = '\\u2018\\u2019\\u201c\\u201d',
	      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
	      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
	      rsVarRange = '\\ufe0e\\ufe0f',
	      rsBreakRange = rsMathOpRange + rsNonCharRange + rsQuoteRange + rsSpaceRange;
	
	  /** Used to compose unicode capture groups. */
	  var rsAstral = '[' + rsAstralRange + ']',
	      rsBreak = '[' + rsBreakRange + ']',
	      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',
	      rsDigits = '\\d+',
	      rsDingbat = '[' + rsDingbatRange + ']',
	      rsLower = '[' + rsLowerRange + ']',
	      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
	      rsFitz = '\\ud83c[\\udffb-\\udfff]',
	      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	      rsNonAstral = '[^' + rsAstralRange + ']',
	      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	      rsUpper = '[' + rsUpperRange + ']',
	      rsZWJ = '\\u200d';
	
	  /** Used to compose unicode regexes. */
	  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',
	      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',
	      reOptMod = rsModifier + '?',
	      rsOptVar = '[' + rsVarRange + ']?',
	      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	      rsSeq = rsOptVar + reOptMod + rsOptJoin,
	      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
	      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
	
	  /**
	   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
	   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
	   */
	  var reComboMark = RegExp(rsCombo, 'g');
	
	  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
	
	  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');
	
	  /** Used to match non-compound words composed of alphanumeric characters. */
	  var reBasicWord = /[a-zA-Z0-9]+/g;
	
	  /** Used to match complex or compound words. */
	  var reComplexWord = RegExp([
	    rsUpper + '?' + rsLower + '+(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
	    rsUpperMisc + '+(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',
	    rsUpper + '?' + rsLowerMisc + '+',
	    rsUpper + '+',
	    rsDigits,
	    rsEmoji
	  ].join('|'), 'g');
	
	  /** Used to detect strings that need a more robust regexp to match words. */
	  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
	
	  /** Used to assign default `context` object properties. */
	  var contextProps = [
	    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
	    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
	    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',
	    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
	    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
	  ];
	
	  /** Used to make template sourceURLs easier to identify. */
	  var templateCounter = -1;
	
	  /** Used to identify `toStringTag` values of typed arrays. */
	  var typedArrayTags = {};
	  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	  typedArrayTags[uint32Tag] = true;
	  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	  typedArrayTags[setTag] = typedArrayTags[stringTag] =
	  typedArrayTags[weakMapTag] = false;
	
	  /** Used to identify `toStringTag` values supported by `_.clone`. */
	  var cloneableTags = {};
	  cloneableTags[argsTag] = cloneableTags[arrayTag] =
	  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	  cloneableTags[boolTag] = cloneableTags[dateTag] =
	  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	  cloneableTags[int32Tag] = cloneableTags[mapTag] =
	  cloneableTags[numberTag] = cloneableTags[objectTag] =
	  cloneableTags[regexpTag] = cloneableTags[setTag] =
	  cloneableTags[stringTag] = cloneableTags[symbolTag] =
	  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	  cloneableTags[errorTag] = cloneableTags[funcTag] =
	  cloneableTags[weakMapTag] = false;
	
	  /** Used to map latin-1 supplementary letters to basic latin letters. */
	  var deburredLetters = {
	    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
	    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
	    '\xc7': 'C',  '\xe7': 'c',
	    '\xd0': 'D',  '\xf0': 'd',
	    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
	    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
	    '\xcC': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
	    '\xeC': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
	    '\xd1': 'N',  '\xf1': 'n',
	    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
	    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
	    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
	    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
	    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
	    '\xc6': 'Ae', '\xe6': 'ae',
	    '\xde': 'Th', '\xfe': 'th',
	    '\xdf': 'ss'
	  };
	
	  /** Used to map characters to HTML entities. */
	  var htmlEscapes = {
	    '&': '&amp;',
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    "'": '&#39;',
	    '`': '&#96;'
	  };
	
	  /** Used to map HTML entities to characters. */
	  var htmlUnescapes = {
	    '&amp;': '&',
	    '&lt;': '<',
	    '&gt;': '>',
	    '&quot;': '"',
	    '&#39;': "'",
	    '&#96;': '`'
	  };
	
	  /** Used to determine if values are of the language type `Object`. */
	  var objectTypes = {
	    'function': true,
	    'object': true
	  };
	
	  /** Used to escape characters for inclusion in compiled string literals. */
	  var stringEscapes = {
	    '\\': '\\',
	    "'": "'",
	    '\n': 'n',
	    '\r': 'r',
	    '\u2028': 'u2028',
	    '\u2029': 'u2029'
	  };
	
	  /** Built-in method references without a dependency on `root`. */
	  var freeParseFloat = parseFloat,
	      freeParseInt = parseInt;
	
	  /** Detect free variable `exports`. */
	  var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)
	    ? exports
	    : undefined;
	
	  /** Detect free variable `module`. */
	  var freeModule = (objectTypes[typeof module] && module && !module.nodeType)
	    ? module
	    : undefined;
	
	  /** Detect the popular CommonJS extension `module.exports`. */
	  var moduleExports = (freeModule && freeModule.exports === freeExports)
	    ? freeExports
	    : undefined;
	
	  /** Detect free variable `global` from Node.js. */
	  var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);
	
	  /** Detect free variable `self`. */
	  var freeSelf = checkGlobal(objectTypes[typeof self] && self);
	
	  /** Detect free variable `window`. */
	  var freeWindow = checkGlobal(objectTypes[typeof window] && window);
	
	  /** Detect `this` as the global object. */
	  var thisGlobal = checkGlobal(objectTypes[typeof this] && this);
	
	  /**
	   * Used as a reference to the global object.
	   *
	   * The `this` value is used if it's the global object to avoid Greasemonkey's
	   * restricted `window` object, otherwise the `window` object is used.
	   */
	  var root = freeGlobal ||
	    ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||
	      freeSelf || thisGlobal || Function('return this')();
	
	  /*--------------------------------------------------------------------------*/
	
	  /**
	   * Adds the key-value `pair` to `map`.
	   *
	   * @private
	   * @param {Object} map The map to modify.
	   * @param {Array} pair The key-value pair to add.
	   * @returns {Object} Returns `map`.
	   */
	  function addMapEntry(map, pair) {
	    // Don't return `Map#set` because it doesn't return the map instance in IE 11.
	    map.set(pair[0], pair[1]);
	    return map;
	  }
	
	  /**
	   * Adds `value` to `set`.
	   *
	   * @private
	   * @param {Object} set The set to modify.
	   * @param {*} value The value to add.
	   * @returns {Object} Returns `set`.
	   */
	  function addSetEntry(set, value) {
	    set.add(value);
	    return set;
	  }
	
	  /**
	   * A faster alternative to `Function#apply`, this function invokes `func`
	   * with the `this` binding of `thisArg` and the arguments of `args`.
	   *
	   * @private
	   * @param {Function} func The function to invoke.
	   * @param {*} thisArg The `this` binding of `func`.
	   * @param {...*} args The arguments to invoke `func` with.
	   * @returns {*} Returns the result of `func`.
	   */
	  function apply(func, thisArg, args) {
	    var length = args.length;
	    switch (length) {
	      case 0: return func.call(thisArg);
	      case 1: return func.call(thisArg, args[0]);
	      case 2: return func.call(thisArg, args[0], args[1]);
	      case 3: return func.call(thisArg, args[0], args[1], args[2]);
	    }
	    return func.apply(thisArg, args);
	  }
	
	  /**
	   * A specialized version of `baseAggregator` for arrays.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} setter The function to set `accumulator` values.
	   * @param {Function} iteratee The iteratee to transform keys.
	   * @param {Object} accumulator The initial aggregated object.
	   * @returns {Function} Returns `accumulator`.
	   */
	  function arrayAggregator(array, setter, iteratee, accumulator) {
	    var index = -1,
	        length = array.length;
	
	    while (++index < length) {
	      var value = array[index];
	      setter(accumulator, value, iteratee(value), array);
	    }
	    return accumulator;
	  }
	
	  /**
	   * Creates a new array concatenating `array` with `other`.
	   *
	   * @private
	   * @param {Array} array The first array to concatenate.
	   * @param {Array} other The second array to concatenate.
	   * @returns {Array} Returns the new concatenated array.
	   */
	  function arrayConcat(array, other) {
	    var index = -1,
	        length = array.length,
	        othIndex = -1,
	        othLength = other.length,
	        result = Array(length + othLength);
	
	    while (++index < length) {
	      result[index] = array[index];
	    }
	    while (++othIndex < othLength) {
	      result[index++] = other[othIndex];
	    }
	    return result;
	  }
	
	  /**
	   * A specialized version of `_.forEach` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEach(array, iteratee) {
	    var index = -1,
	        length = array.length;
	
	    while (++index < length) {
	      if (iteratee(array[index], index, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }
	
	  /**
	   * A specialized version of `_.forEachRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEachRight(array, iteratee) {
	    var length = array.length;
	
	    while (length--) {
	      if (iteratee(array[length], length, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }
	
	  /**
	   * A specialized version of `_.every` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if all elements pass the predicate check,
	   *  else `false`.
	   */
	  function arrayEvery(array, predicate) {
	    var index = -1,
	        length = array.length;
	
	    while (++index < length) {
	      if (!predicate(array[index], index, array)) {
	        return false;
	      }
	    }
	    return true;
	  }
	
	  /**
	   * A specialized version of `_.filter` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {Array} Returns the new filtered array.
	   */
	  function arrayFilter(array, predicate) {
	    var index = -1,
	        length = array.length,
	        resIndex = 0,
	        result = [];
	
	    while (++index < length) {
	      var value = array[index];
	      if (predicate(value, index, array)) {
	        result[resIndex++] = value;
	      }
	    }
	    return result;
	  }
	
	  /**
	   * A specialized version of `_.includes` for arrays without support for
	   * specifying an index to search from.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} target The value to search for.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludes(array, value) {
	    return !!array.length && baseIndexOf(array, value, 0) > -1;
	  }
	
	  /**
	   * This function is like `arrayIncludes` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} target The value to search for.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludesWith(array, value, comparator) {
	    var index = -1,
	        length = array.length;
	
	    while (++index < length) {
	      if (comparator(value, array[index])) {
	        return true;
	      }
	    }
	    return false;
	  }
	
	  /**
	   * A specialized version of `_.map` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the new mapped array.
	   */
	  function arrayMap(array, iteratee) {
	    var index = -1,
	        length = array.length,
	        result = Array(length);
	
	    while (++index < length) {
	      result[index] = iteratee(array[index], index, array);
	    }
	    return result;
	  }
	
	  /**
	   * Appends the elements of `values` to `array`.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {Array} values The values to append.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayPush(array, values) {
	    var index = -1,
	        length = values.length,
	        offset = array.length;
	
	    while (++index < length) {
	      array[offset + index] = values[index];
	    }
	    return array;
	  }
	
	  /**
	   * A specialized version of `_.reduce` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the first element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduce(array, iteratee, accumulator, initAccum) {
	    var index = -1,
	        length = array.length;
	
	    if (initAccum && length) {
	      accumulator = array[++index];
	    }
	    while (++index < length) {
	      accumulator = iteratee(accumulator, array[index], index, array);
	    }
	    return accumulator;
	  }
	
	  /**
	   * A specialized version of `_.reduceRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the last element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
	    var length = array.length;
	    if (initAccum && length) {
	      accumulator = array[--length];
	    }
	    while (length--) {
	      accumulator = iteratee(accumulator, array[length], length, array);
	    }
	    return accumulator;
	  }
	
	  /**
	   * A specialized version of `_.some` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if any element passes the predicate check,
	   *  else `false`.
	   */
	  function arraySome(array, predicate) {
	    var index = -1,
	        length = array.length;
	
	    while (++index < length) {
	      if (predicate(array[index], index, array)) {
	        return true;
	      }
	    }
	    return false;
	  }
	
	  /**
	   * The base implementation of methods like `_.max` and `_.min` which accepts a
	   * `comparator` to determine the extremum value.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The iteratee invoked per iteration.
	   * @param {Function} comparator The comparator used to compare values.
	   * @returns {*} Returns the extremum value.
	   */
	  function baseExtremum(array, iteratee, comparator) {
	    var index = -1,
	        length = array.length;
	
	    while (++index < length) {
	      var value = array[index],
	          current = iteratee(value);
	
	      if (current != null && (computed === undefined
	            ? current === current
	            : comparator(current, computed)
	          )) {
	        var computed = current,
	            result = value;
	      }
	    }
	    return result;
	  }
	
	  /**
	   * The base implementation of methods like `_.find` and `_.findKey`, without
	   * support for iteratee shorthands, which iterates over `collection` using
	   * `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to search.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @param {boolean} [retKey] Specify returning the key of the found element
	   *  instead of the element itself.
	   * @returns {*} Returns the found element or its key, else `undefined`.
	   */
	  function baseFind(collection, predicate, eachFunc, retKey) {
	    var result;
	    eachFunc(collection, function(value, key, collection) {
	      if (predicate(value, key, collection)) {
	        result = retKey ? key : value;
	        return false;
	      }
	    });
	    return result;
	  }
	
	  /**
	   * The base implementation of `_.findIndex` and `_.findLastIndex` without
	   * support for iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseFindIndex(array, predicate, fromRight) {
	    var length = array.length,
	        index = fromRight ? length : -1;
	
	    while ((fromRight ? index-- : ++index < length)) {
	      if (predicate(array[index], index, array)) {
	        return index;
	      }
	    }
	    return -1;
	  }
	
	  /**
	   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOf(array, value, fromIndex) {
	    if (value !== value) {
	      return indexOfNaN(array, fromIndex);
	    }
	    var index = fromIndex - 1,
	        length = array.length;
	
	    while (++index < length) {
	      if (array[index] === value) {
	        return index;
	      }
	    }
	    return -1;
	  }
	
	  /**
	   * This function is like `baseIndexOf` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOfWith(array, value, fromIndex, comparator) {
	    var index = fromIndex - 1,
	        length = array.length;
	
	    while (++index < length) {
	      if (comparator(array[index], value)) {
	        return index;
	      }
	    }
	    return -1;
	  }
	
	  /**
	   * The base implementation of `_.mean` and `_.meanBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the mean.
	   */
	  function baseMean(array, iteratee) {
	    var length = array ? array.length : 0;
	    return length ? (baseSum(array, iteratee) / length) : NAN;
	  }
	
	  /**
	   * The base implementation of `_.reduce` and `_.reduceRight`, without support
	   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} accumulator The initial value.
	   * @param {boolean} initAccum Specify using the first or last element of
	   *  `collection` as the initial value.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the accumulated value.
	   */
	  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
	    eachFunc(collection, function(value, index, collection) {
	      accumulator = initAccum
	        ? (initAccum = false, value)
	        : iteratee(accumulator, value, index, collection);
	    });
	    return accumulator;
	  }
	
	  /**
	   * The base implementation of `_.sortBy` which uses `comparer` to define the
	   * sort order of `array` and replaces criteria objects with their corresponding
	   * values.
	   *
	   * @private
	   * @param {Array} array The array to sort.
	   * @param {Function} comparer The function to define sort order.
	   * @returns {Array} Returns `array`.
	   */
	  function baseSortBy(array, comparer) {
	    var length = array.length;
	
	    array.sort(comparer);
	    while (length--) {
	      array[length] = array[length].value;
	    }
	    return array;
	  }
	
	  /**
	   * The base implementation of `_.sum` and `_.sumBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the sum.
	   */
	  function baseSum(array, iteratee) {
	    var result,
	        index = -1,
	        length = array.length;
	
	    while (++index < length) {
	      var current = iteratee(array[index]);
	      if (current !== undefined) {
	        result = result === undefined ? current : (result + current);
	      }
	    }
	    return result;
	  }
	
	  /**
	   * The base implementation of `_.times` without support for iteratee shorthands
	   * or max array length checks.
	   *
	   * @private
	   * @param {number} n The number of times to invoke `iteratee`.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the array of results.
	   */
	  function baseTimes(n, iteratee) {
	    var index = -1,
	        result = Array(n);
	
	    while (++index < n) {
	      result[index] = iteratee(index);
	    }
	    return result;
	  }
	
	  /**
	   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
	   * of key-value pairs for `object` corresponding to the property names of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the new array of key-value pairs.
	   */
	  function baseToPairs(object, props) {
	    return arrayMap(props, function(key) {
	      return [key, object[key]];
	    });
	  }
	
	  /**
	   * The base implementation of `_.unary` without support for storing wrapper metadata.
	   *
	   * @private
	   * @param {Function} func The function to cap arguments for.
	   * @returns {Function} Returns the new function.
	   */
	  function baseUnary(func) {
	    return function(value) {
	      return func(value);
	    };
	  }
	
	  /**
	   * The base implementation of `_.values` and `_.valuesIn` which creates an
	   * array of `object` property values corresponding to the property names
	   * of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the array of property values.
	   */
	  function baseValues(object, props) {
	    return arrayMap(props, function(key) {
	      return object[key];
	    });
	  }
	
	  /**
	   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the first unmatched string symbol.
	   */
	  function charsStartIndex(strSymbols, chrSymbols) {
	    var index = -1,
	        length = strSymbols.length;
	
	    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }
	
	  /**
	   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the last unmatched string symbol.
	   */
	  function charsEndIndex(strSymbols, chrSymbols) {
	    var index = strSymbols.length;
	
	    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }
	
	  /**
	   * Checks if `value` is a global object.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {null|Object} Returns `value` if it's a global object, else `null`.
	   */
	  function checkGlobal(value) {
	    return (value && value.Object === Object) ? value : null;
	  }
	
	  /**
	   * Compares values to sort them in ascending order.
	   *
	   * @private
	   * @param {*} value The value to compare.
	   * @param {*} other The other value to compare.
	   * @returns {number} Returns the sort order indicator for `value`.
	   */
	  function compareAscending(value, other) {
	    if (value !== other) {
	      var valIsNull = value === null,
	          valIsUndef = value === undefined,
	          valIsReflexive = value === value;
	
	      var othIsNull = other === null,
	          othIsUndef = other === undefined,
	          othIsReflexive = other === other;
	
	      if ((value > other && !othIsNull) || !valIsReflexive ||
	          (valIsNull && !othIsUndef && othIsReflexive) ||
	          (valIsUndef && othIsReflexive)) {
	        return 1;
	      }
	      if ((value < other && !valIsNull) || !othIsReflexive ||
	          (othIsNull && !valIsUndef && valIsReflexive) ||
	          (othIsUndef && valIsReflexive)) {
	        return -1;
	      }
	    }
	    return 0;
	  }
	
	  /**
	   * Used by `_.orderBy` to compare multiple properties of a value to another
	   * and stable sort them.
	   *
	   * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	   * specify an order of "desc" for descending or "asc" for ascending sort order
	   * of corresponding values.
	   *
	   * @private
	   * @param {Object} object The object to compare.
	   * @param {Object} other The other object to compare.
	   * @param {boolean[]|string[]} orders The order to sort by for each property.
	   * @returns {number} Returns the sort order indicator for `object`.
	   */
	  function compareMultiple(object, other, orders) {
	    var index = -1,
	        objCriteria = object.criteria,
	        othCriteria = other.criteria,
	        length = objCriteria.length,
	        ordersLength = orders.length;
	
	    while (++index < length) {
	      var result = compareAscending(objCriteria[index], othCriteria[index]);
	      if (result) {
	        if (index >= ordersLength) {
	          return result;
	        }
	        var order = orders[index];
	        return result * (order == 'desc' ? -1 : 1);
	      }
	    }
	    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	    // that causes it, under certain circumstances, to provide the same value for
	    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	    // for more details.
	    //
	    // This also ensures a stable sort in V8 and other engines.
	    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	    return object.index - other.index;
	  }
	
	  /**
	   * Gets the number of `placeholder` occurrences in `array`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} placeholder The placeholder to search for.
	   * @returns {number} Returns the placeholder count.
	   */
	  function countHolders(array, placeholder) {
	    var length = array.length,
	        result = 0;
	
	    while (length--) {
	      if (array[length] === placeholder) {
	        result++;
	      }
	    }
	    return result;
	  }
	
	  /**
	   * Creates a function that performs a mathematical operation on two values.
	   *
	   * @private
	   * @param {Function} operator The function to perform the operation.
	   * @returns {Function} Returns the new mathematical operation function.
	   */
	  function createMathOperation(operator) {
	    return function(value, other) {
	      var result;
	      if (value === undefined && other === undefined) {
	        return 0;
	      }
	      if (value !== undefined) {
	        result = value;
	      }
	      if (other !== undefined) {
	        result = result === undefined ? other : operator(result, other);
	      }
	      return result;
	    };
	  }
	
	  /**
	   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.
	   *
	   * @private
	   * @param {string} letter The matched letter to deburr.
	   * @returns {string} Returns the deburred letter.
	   */
	  function deburrLetter(letter) {
	    return deburredLetters[letter];
	  }
	
	  /**
	   * Used by `_.escape` to convert characters to HTML entities.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  function escapeHtmlChar(chr) {
	    return htmlEscapes[chr];
	  }
	
	  /**
	   * Used by `_.template` to escape characters for inclusion in compiled string literals.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  function escapeStringChar(chr) {
	    return '\\' + stringEscapes[chr];
	  }
	
	  /**
	   * Gets the index at which the first occurrence of `NaN` is found in `array`.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {number} fromIndex The index to search from.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched `NaN`, else `-1`.
	   */
	  function indexOfNaN(array, fromIndex, fromRight) {
	    var length = array.length,
	        index = fromIndex + (fromRight ? 0 : -1);
	
	    while ((fromRight ? index-- : ++index < length)) {
	      var other = array[index];
	      if (other !== other) {
	        return index;
	      }
	    }
	    return -1;
	  }
	
	  /**
	   * Checks if `value` is a host object in IE < 9.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	   */
	  function isHostObject(value) {
	    // Many host objects are `Object` objects that can coerce to strings
	    // despite having improperly defined `toString` methods.
	    var result = false;
	    if (value != null && typeof value.toString != 'function') {
	      try {
	        result = !!(value + '');
	      } catch (e) {}
	    }
	    return result;
	  }
	
	  /**
	   * Checks if `value` is a valid array-like index.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	   */
	  function isIndex(value, length) {
	    value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
	    length = length == null ? MAX_SAFE_INTEGER : length;
	    return value > -1 && value % 1 == 0 && value < length;
	  }
	
	  /**
	   * Converts `iterator` to an array.
	   *
	   * @private
	   * @param {Object} iterator The iterator to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function iteratorToArray(iterator) {
	    var data,
	        result = [];
	
	    while (!(data = iterator.next()).done) {
	      result.push(data.value);
	    }
	    return result;
	  }
	
	  /**
	   * Converts `map` to an array.
	   *
	   * @private
	   * @param {Object} map The map to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function mapToArray(map) {
	    var index = -1,
	        result = Array(map.size);
	
	    map.forEach(function(value, key) {
	      result[++index] = [key, value];
	    });
	    return result;
	  }
	
	  /**
	   * Replaces all `placeholder` elements in `array` with an internal placeholder
	   * and returns an array of their indexes.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {*} placeholder The placeholder to replace.
	   * @returns {Array} Returns the new array of placeholder indexes.
	   */
	  function replaceHolders(array, placeholder) {
	    var index = -1,
	        length = array.length,
	        resIndex = 0,
	        result = [];
	
	    while (++index < length) {
	      var value = array[index];
	      if (value === placeholder || value === PLACEHOLDER) {
	        array[index] = PLACEHOLDER;
	        result[resIndex++] = index;
	      }
	    }
	    return result;
	  }
	
	  /**
	   * Converts `set` to an array.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function setToArray(set) {
	    var index = -1,
	        result = Array(set.size);
	
	    set.forEach(function(value) {
	      result[++index] = value;
	    });
	    return result;
	  }
	
	  /**
	   * Gets the number of symbols in `string`.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {number} Returns the string size.
	   */
	  function stringSize(string) {
	    if (!(string && reHasComplexSymbol.test(string))) {
	      return string.length;
	    }
	    var result = reComplexSymbol.lastIndex = 0;
	    while (reComplexSymbol.test(string)) {
	      result++;
	    }
	    return result;
	  }
	
	  /**
	   * Converts `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function stringToArray(string) {
	    return string.match(reComplexSymbol);
	  }
	
	  /**
	   * Used by `_.unescape` to convert HTML entities to characters.
	   *
	   * @private
	   * @param {string} chr The matched character to unescape.
	   * @returns {string} Returns the unescaped character.
	   */
	  function unescapeHtmlChar(chr) {
	    return htmlUnescapes[chr];
	  }
	
	  /*--------------------------------------------------------------------------*/
	
	  /**
	   * Create a new pristine `lodash` function using the `context` object.
	   *
	   * @static
	   * @memberOf _
	   * @since 1.1.0
	   * @category Util
	   * @param {Object} [context=root] The context object.
	   * @returns {Function} Returns a new `lodash` function.
	   * @example
	   *
	   * _.mixin({ 'foo': _.constant('foo') });
	   *
	   * var lodash = _.runInContext();
	   * lodash.mixin({ 'bar': lodash.constant('bar') });
	   *
	   * _.isFunction(_.foo);
	   * // => true
	   * _.isFunction(_.bar);
	   * // => false
	   *
	   * lodash.isFunction(lodash.foo);
	   * // => false
	   * lodash.isFunction(lodash.bar);
	   * // => true
	   *
	   * // Use `context` to mock `Date#getTime` use in `_.now`.
	   * var mock = _.runInContext({
	   *   'Date': function() {
	   *     return { 'getTime': getTimeMock };
	   *   }
	   * });
	   *
	   * // Create a suped-up `defer` in Node.js.
	   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
	   */
	  function runInContext(context) {
	    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;
	
	    /** Built-in constructor references. */
	    var Date = context.Date,
	        Error = context.Error,
	        Math = context.Math,
	        RegExp = context.RegExp,
	        TypeError = context.TypeError;
	
	    /** Used for built-in method references. */
	    var arrayProto = context.Array.prototype,
	        objectProto = context.Object.prototype;
	
	    /** Used to resolve the decompiled source of functions. */
	    var funcToString = context.Function.prototype.toString;
	
	    /** Used to check objects for own properties. */
	    var hasOwnProperty = objectProto.hasOwnProperty;
	
	    /** Used to generate unique IDs. */
	    var idCounter = 0;
	
	    /** Used to infer the `Object` constructor. */
	    var objectCtorString = funcToString.call(Object);
	
	    /**
	     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	     * of values.
	     */
	    var objectToString = objectProto.toString;
	
	    /** Used to restore the original `_` reference in `_.noConflict`. */
	    var oldDash = root._;
	
	    /** Used to detect if a method is native. */
	    var reIsNative = RegExp('^' +
	      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	    );
	
	    /** Built-in value references. */
	    var Buffer = moduleExports ? context.Buffer : undefined,
	        Reflect = context.Reflect,
	        Symbol = context.Symbol,
	        Uint8Array = context.Uint8Array,
	        clearTimeout = context.clearTimeout,
	        enumerate = Reflect ? Reflect.enumerate : undefined,
	        getOwnPropertySymbols = Object.getOwnPropertySymbols,
	        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,
	        objectCreate = Object.create,
	        propertyIsEnumerable = objectProto.propertyIsEnumerable,
	        setTimeout = context.setTimeout,
	        splice = arrayProto.splice;
	
	    /* Built-in method references for those with the same name as other `lodash` methods. */
	    var nativeCeil = Math.ceil,
	        nativeFloor = Math.floor,
	        nativeGetPrototype = Object.getPrototypeOf,
	        nativeIsFinite = context.isFinite,
	        nativeJoin = arrayProto.join,
	        nativeKeys = Object.keys,
	        nativeMax = Math.max,
	        nativeMin = Math.min,
	        nativeParseInt = context.parseInt,
	        nativeRandom = Math.random,
	        nativeReverse = arrayProto.reverse;
	
	    /* Built-in method references that are verified to be native. */
	    var DataView = getNative(context, 'DataView'),
	        Map = getNative(context, 'Map'),
	        Promise = getNative(context, 'Promise'),
	        Set = getNative(context, 'Set'),
	        WeakMap = getNative(context, 'WeakMap'),
	        nativeCreate = getNative(Object, 'create');
	
	    /** Used to store function metadata. */
	    var metaMap = WeakMap && new WeakMap;
	
	    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */
	    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');
	
	    /** Used to lookup unminified function names. */
	    var realNames = {};
	
	    /** Used to detect maps, sets, and weakmaps. */
	    var dataViewCtorString = DataView ? (DataView + '') : '',
	        mapCtorString = Map ? funcToString.call(Map) : '',
	        promiseCtorString = Promise ? funcToString.call(Promise) : '',
	        setCtorString = Set ? funcToString.call(Set) : '',
	        weakMapCtorString = WeakMap ? funcToString.call(WeakMap) : '';
	
	    /** Used to convert symbols to primitives and strings. */
	    var symbolProto = Symbol ? Symbol.prototype : undefined,
	        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
	        symbolToString = symbolProto ? symbolProto.toString : undefined;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates a `lodash` object which wraps `value` to enable implicit method
	     * chain sequences. Methods that operate on and return arrays, collections,
	     * and functions can be chained together. Methods that retrieve a single value
	     * or may return a primitive value will automatically end the chain sequence
	     * and return the unwrapped value. Otherwise, the value must be unwrapped
	     * with `_#value`.
	     *
	     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
	     * enabled using `_.chain`.
	     *
	     * The execution of chained methods is lazy, that is, it's deferred until
	     * `_#value` is implicitly or explicitly called.
	     *
	     * Lazy evaluation allows several methods to support shortcut fusion.
	     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
	     * the creation of intermediate arrays and can greatly reduce the number of
	     * iteratee executions. Sections of a chain sequence qualify for shortcut
	     * fusion if the section is applied to an array of at least two hundred
	     * elements and any iteratees accept only one argument. The heuristic for
	     * whether a section qualifies for shortcut fusion is subject to change.
	     *
	     * Chaining is supported in custom builds as long as the `_#value` method is
	     * directly or indirectly included in the build.
	     *
	     * In addition to lodash methods, wrappers have `Array` and `String` methods.
	     *
	     * The wrapper `Array` methods are:
	     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	     *
	     * The wrapper `String` methods are:
	     * `replace` and `split`
	     *
	     * The wrapper methods that support shortcut fusion are:
	     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	     *
	     * The chainable wrapper methods are:
	     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
	     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
	     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
	     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
	     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
	     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
	     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
	     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
	     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
	     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
	     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
	     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
	     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
	     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
	     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
	     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
	     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
	     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
	     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
	     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
	     * `zipObject`, `zipObjectDeep`, and `zipWith`
	     *
	     * The wrapper methods that are **not** chainable by default are:
	     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `divide`, `each`,
	     * `eachRight`, `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`,
	     * `findIndex`, `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`,
	     * `floor`, `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`,
	     * `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`,
	     * `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`,
	     * `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`, `isBuffer`,
	     * `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`, `isError`,
	     * `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`, `isMatch`,
	     * `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`,
	     * `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`, `isSafeInteger`,
	     * `isSet`, `isString`, `isUndefined`, `isTypedArray`, `isWeakMap`, `isWeakSet`,
	     * `join`, `kebabCase`, `last`, `lastIndexOf`, `lowerCase`, `lowerFirst`,
	     * `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`, `min`, `minBy`, `multiply`,
	     * `noConflict`, `noop`, `now`, `pad`, `padEnd`, `padStart`, `parseInt`,
	     * `pop`, `random`, `reduce`, `reduceRight`, `repeat`, `result`, `round`,
	     * `runInContext`, `sample`, `shift`, `size`, `snakeCase`, `some`, `sortedIndex`,
	     * `sortedIndexBy`, `sortedLastIndex`, `sortedLastIndexBy`, `startCase`,
	     * `startsWith`, `subtract`, `sum`, `sumBy`, `template`, `times`, `toInteger`,
	     * `toJSON`, `toLength`, `toLower`, `toNumber`, `toSafeInteger`, `toString`,
	     * `toUpper`, `trim`, `trimEnd`, `trimStart`, `truncate`, `unescape`,
	     * `uniqueId`, `upperCase`, `upperFirst`, `value`, and `words`
	     *
	     * @name _
	     * @constructor
	     * @category Seq
	     * @param {*} value The value to wrap in a `lodash` instance.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2, 3]);
	     *
	     * // Returns an unwrapped value.
	     * wrapped.reduce(_.add);
	     * // => 6
	     *
	     * // Returns a wrapped value.
	     * var squares = wrapped.map(square);
	     *
	     * _.isArray(squares);
	     * // => false
	     *
	     * _.isArray(squares.value());
	     * // => true
	     */
	    function lodash(value) {
	      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
	        if (value instanceof LodashWrapper) {
	          return value;
	        }
	        if (hasOwnProperty.call(value, '__wrapped__')) {
	          return wrapperClone(value);
	        }
	      }
	      return new LodashWrapper(value);
	    }
	
	    /**
	     * The function whose prototype chain sequence wrappers inherit from.
	     *
	     * @private
	     */
	    function baseLodash() {
	      // No operation performed.
	    }
	
	    /**
	     * The base constructor for creating `lodash` wrapper objects.
	     *
	     * @private
	     * @param {*} value The value to wrap.
	     * @param {boolean} [chainAll] Enable explicit method chain sequences.
	     */
	    function LodashWrapper(value, chainAll) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__chain__ = !!chainAll;
	      this.__index__ = 0;
	      this.__values__ = undefined;
	    }
	
	    /**
	     * By default, the template delimiters used by lodash are like those in
	     * embedded Ruby (ERB). Change the following template settings to use
	     * alternative delimiters.
	     *
	     * @static
	     * @memberOf _
	     * @type {Object}
	     */
	    lodash.templateSettings = {
	
	      /**
	       * Used to detect `data` property values to be HTML-escaped.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'escape': reEscape,
	
	      /**
	       * Used to detect code to be evaluated.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'evaluate': reEvaluate,
	
	      /**
	       * Used to detect `data` property values to inject.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'interpolate': reInterpolate,
	
	      /**
	       * Used to reference the data object in the template text.
	       *
	       * @memberOf _.templateSettings
	       * @type {string}
	       */
	      'variable': '',
	
	      /**
	       * Used to import variables into the compiled template.
	       *
	       * @memberOf _.templateSettings
	       * @type {Object}
	       */
	      'imports': {
	
	        /**
	         * A reference to the `lodash` function.
	         *
	         * @memberOf _.templateSettings.imports
	         * @type {Function}
	         */
	        '_': lodash
	      }
	    };
	
	    // Ensure wrappers are instances of `baseLodash`.
	    lodash.prototype = baseLodash.prototype;
	    lodash.prototype.constructor = lodash;
	
	    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
	    LodashWrapper.prototype.constructor = LodashWrapper;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	     *
	     * @private
	     * @constructor
	     * @param {*} value The value to wrap.
	     */
	    function LazyWrapper(value) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__dir__ = 1;
	      this.__filtered__ = false;
	      this.__iteratees__ = [];
	      this.__takeCount__ = MAX_ARRAY_LENGTH;
	      this.__views__ = [];
	    }
	
	    /**
	     * Creates a clone of the lazy wrapper object.
	     *
	     * @private
	     * @name clone
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the cloned `LazyWrapper` object.
	     */
	    function lazyClone() {
	      var result = new LazyWrapper(this.__wrapped__);
	      result.__actions__ = copyArray(this.__actions__);
	      result.__dir__ = this.__dir__;
	      result.__filtered__ = this.__filtered__;
	      result.__iteratees__ = copyArray(this.__iteratees__);
	      result.__takeCount__ = this.__takeCount__;
	      result.__views__ = copyArray(this.__views__);
	      return result;
	    }
	
	    /**
	     * Reverses the direction of lazy iteration.
	     *
	     * @private
	     * @name reverse
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the new reversed `LazyWrapper` object.
	     */
	    function lazyReverse() {
	      if (this.__filtered__) {
	        var result = new LazyWrapper(this);
	        result.__dir__ = -1;
	        result.__filtered__ = true;
	      } else {
	        result = this.clone();
	        result.__dir__ *= -1;
	      }
	      return result;
	    }
	
	    /**
	     * Extracts the unwrapped value from its lazy wrapper.
	     *
	     * @private
	     * @name value
	     * @memberOf LazyWrapper
	     * @returns {*} Returns the unwrapped value.
	     */
	    function lazyValue() {
	      var array = this.__wrapped__.value(),
	          dir = this.__dir__,
	          isArr = isArray(array),
	          isRight = dir < 0,
	          arrLength = isArr ? array.length : 0,
	          view = getView(0, arrLength, this.__views__),
	          start = view.start,
	          end = view.end,
	          length = end - start,
	          index = isRight ? end : (start - 1),
	          iteratees = this.__iteratees__,
	          iterLength = iteratees.length,
	          resIndex = 0,
	          takeCount = nativeMin(length, this.__takeCount__);
	
	      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||
	          (arrLength == length && takeCount == length)) {
	        return baseWrapperValue(array, this.__actions__);
	      }
	      var result = [];
	
	      outer:
	      while (length-- && resIndex < takeCount) {
	        index += dir;
	
	        var iterIndex = -1,
	            value = array[index];
	
	        while (++iterIndex < iterLength) {
	          var data = iteratees[iterIndex],
	              iteratee = data.iteratee,
	              type = data.type,
	              computed = iteratee(value);
	
	          if (type == LAZY_MAP_FLAG) {
	            value = computed;
	          } else if (!computed) {
	            if (type == LAZY_FILTER_FLAG) {
	              continue outer;
	            } else {
	              break outer;
	            }
	          }
	        }
	        result[resIndex++] = value;
	      }
	      return result;
	    }
	
	    // Ensure `LazyWrapper` is an instance of `baseLodash`.
	    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
	    LazyWrapper.prototype.constructor = LazyWrapper;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates an hash object.
	     *
	     * @private
	     * @constructor
	     * @returns {Object} Returns the new hash object.
	     */
	    function Hash() {}
	
	    /**
	     * Removes `key` and its value from the hash.
	     *
	     * @private
	     * @param {Object} hash The hash to modify.
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function hashDelete(hash, key) {
	      return hashHas(hash, key) && delete hash[key];
	    }
	
	    /**
	     * Gets the hash value for `key`.
	     *
	     * @private
	     * @param {Object} hash The hash to query.
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function hashGet(hash, key) {
	      if (nativeCreate) {
	        var result = hash[key];
	        return result === HASH_UNDEFINED ? undefined : result;
	      }
	      return hasOwnProperty.call(hash, key) ? hash[key] : undefined;
	    }
	
	    /**
	     * Checks if a hash value for `key` exists.
	     *
	     * @private
	     * @param {Object} hash The hash to query.
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function hashHas(hash, key) {
	      return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);
	    }
	
	    /**
	     * Sets the hash `key` to `value`.
	     *
	     * @private
	     * @param {Object} hash The hash to modify.
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     */
	    function hashSet(hash, key, value) {
	      hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	    }
	
	    // Avoid inheriting from `Object.prototype` when possible.
	    Hash.prototype = nativeCreate ? nativeCreate(null) : objectProto;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates a map cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */
	    function MapCache(values) {
	      var index = -1,
	          length = values ? values.length : 0;
	
	      this.clear();
	      while (++index < length) {
	        var entry = values[index];
	        this.set(entry[0], entry[1]);
	      }
	    }
	
	    /**
	     * Removes all key-value entries from the map.
	     *
	     * @private
	     * @name clear
	     * @memberOf MapCache
	     */
	    function mapClear() {
	      this.__data__ = {
	        'hash': new Hash,
	        'map': Map ? new Map : [],
	        'string': new Hash
	      };
	    }
	
	    /**
	     * Removes `key` and its value from the map.
	     *
	     * @private
	     * @name delete
	     * @memberOf MapCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function mapDelete(key) {
	      var data = this.__data__;
	      if (isKeyable(key)) {
	        return hashDelete(typeof key == 'string' ? data.string : data.hash, key);
	      }
	      return Map ? data.map['delete'](key) : assocDelete(data.map, key);
	    }
	
	    /**
	     * Gets the map value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf MapCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function mapGet(key) {
	      var data = this.__data__;
	      if (isKeyable(key)) {
	        return hashGet(typeof key == 'string' ? data.string : data.hash, key);
	      }
	      return Map ? data.map.get(key) : assocGet(data.map, key);
	    }
	
	    /**
	     * Checks if a map value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf MapCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function mapHas(key) {
	      var data = this.__data__;
	      if (isKeyable(key)) {
	        return hashHas(typeof key == 'string' ? data.string : data.hash, key);
	      }
	      return Map ? data.map.has(key) : assocHas(data.map, key);
	    }
	
	    /**
	     * Sets the map `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf MapCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the map cache instance.
	     */
	    function mapSet(key, value) {
	      var data = this.__data__;
	      if (isKeyable(key)) {
	        hashSet(typeof key == 'string' ? data.string : data.hash, key, value);
	      } else if (Map) {
	        data.map.set(key, value);
	      } else {
	        assocSet(data.map, key, value);
	      }
	      return this;
	    }
	
	    // Add methods to `MapCache`.
	    MapCache.prototype.clear = mapClear;
	    MapCache.prototype['delete'] = mapDelete;
	    MapCache.prototype.get = mapGet;
	    MapCache.prototype.has = mapHas;
	    MapCache.prototype.set = mapSet;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     *
	     * Creates a set cache object to store unique values.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */
	    function SetCache(values) {
	      var index = -1,
	          length = values ? values.length : 0;
	
	      this.__data__ = new MapCache;
	      while (++index < length) {
	        this.push(values[index]);
	      }
	    }
	
	    /**
	     * Checks if `value` is in `cache`.
	     *
	     * @private
	     * @param {Object} cache The set cache to search.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns `true` if `value` is found, else `false`.
	     */
	    function cacheHas(cache, value) {
	      var map = cache.__data__;
	      if (isKeyable(value)) {
	        var data = map.__data__,
	            hash = typeof value == 'string' ? data.string : data.hash;
	
	        return hash[value] === HASH_UNDEFINED;
	      }
	      return map.has(value);
	    }
	
	    /**
	     * Adds `value` to the set cache.
	     *
	     * @private
	     * @name push
	     * @memberOf SetCache
	     * @param {*} value The value to cache.
	     */
	    function cachePush(value) {
	      var map = this.__data__;
	      if (isKeyable(value)) {
	        var data = map.__data__,
	            hash = typeof value == 'string' ? data.string : data.hash;
	
	        hash[value] = HASH_UNDEFINED;
	      }
	      else {
	        map.set(value, HASH_UNDEFINED);
	      }
	    }
	
	    // Add methods to `SetCache`.
	    SetCache.prototype.push = cachePush;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates a stack cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */
	    function Stack(values) {
	      var index = -1,
	          length = values ? values.length : 0;
	
	      this.clear();
	      while (++index < length) {
	        var entry = values[index];
	        this.set(entry[0], entry[1]);
	      }
	    }
	
	    /**
	     * Removes all key-value entries from the stack.
	     *
	     * @private
	     * @name clear
	     * @memberOf Stack
	     */
	    function stackClear() {
	      this.__data__ = { 'array': [], 'map': null };
	    }
	
	    /**
	     * Removes `key` and its value from the stack.
	     *
	     * @private
	     * @name delete
	     * @memberOf Stack
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function stackDelete(key) {
	      var data = this.__data__,
	          array = data.array;
	
	      return array ? assocDelete(array, key) : data.map['delete'](key);
	    }
	
	    /**
	     * Gets the stack value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Stack
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function stackGet(key) {
	      var data = this.__data__,
	          array = data.array;
	
	      return array ? assocGet(array, key) : data.map.get(key);
	    }
	
	    /**
	     * Checks if a stack value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Stack
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function stackHas(key) {
	      var data = this.__data__,
	          array = data.array;
	
	      return array ? assocHas(array, key) : data.map.has(key);
	    }
	
	    /**
	     * Sets the stack `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Stack
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the stack cache instance.
	     */
	    function stackSet(key, value) {
	      var data = this.__data__,
	          array = data.array;
	
	      if (array) {
	        if (array.length < (LARGE_ARRAY_SIZE - 1)) {
	          assocSet(array, key, value);
	        } else {
	          data.array = null;
	          data.map = new MapCache(array);
	        }
	      }
	      var map = data.map;
	      if (map) {
	        map.set(key, value);
	      }
	      return this;
	    }
	
	    // Add methods to `Stack`.
	    Stack.prototype.clear = stackClear;
	    Stack.prototype['delete'] = stackDelete;
	    Stack.prototype.get = stackGet;
	    Stack.prototype.has = stackHas;
	    Stack.prototype.set = stackSet;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Removes `key` and its value from the associative array.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function assocDelete(array, key) {
	      var index = assocIndexOf(array, key);
	      if (index < 0) {
	        return false;
	      }
	      var lastIndex = array.length - 1;
	      if (index == lastIndex) {
	        array.pop();
	      } else {
	        splice.call(array, index, 1);
	      }
	      return true;
	    }
	
	    /**
	     * Gets the associative array value for `key`.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function assocGet(array, key) {
	      var index = assocIndexOf(array, key);
	      return index < 0 ? undefined : array[index][1];
	    }
	
	    /**
	     * Checks if an associative array value for `key` exists.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function assocHas(array, key) {
	      return assocIndexOf(array, key) > -1;
	    }
	
	    /**
	     * Gets the index at which the `key` is found in `array` of key-value pairs.
	     *
	     * @private
	     * @param {Array} array The array to search.
	     * @param {*} key The key to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     */
	    function assocIndexOf(array, key) {
	      var length = array.length;
	      while (length--) {
	        if (eq(array[length][0], key)) {
	          return length;
	        }
	      }
	      return -1;
	    }
	
	    /**
	     * Sets the associative array `key` to `value`.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     */
	    function assocSet(array, key, value) {
	      var index = assocIndexOf(array, key);
	      if (index < 0) {
	        array.push([key, value]);
	      } else {
	        array[index][1] = value;
	      }
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Used by `_.defaults` to customize its `_.assignIn` use.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to assign.
	     * @param {Object} object The parent object of `objValue`.
	     * @returns {*} Returns the value to assign.
	     */
	    function assignInDefaults(objValue, srcValue, key, object) {
	      if (objValue === undefined ||
	          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
	        return srcValue;
	      }
	      return objValue;
	    }
	
	    /**
	     * This function is like `assignValue` except that it doesn't assign
	     * `undefined` values.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignMergeValue(object, key, value) {
	      if ((value !== undefined && !eq(object[key], value)) ||
	          (typeof key == 'number' && value === undefined && !(key in object))) {
	        object[key] = value;
	      }
	    }
	
	    /**
	     * Assigns `value` to `key` of `object` if the existing value is not equivalent
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignValue(object, key, value) {
	      var objValue = object[key];
	      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	          (value === undefined && !(key in object))) {
	        object[key] = value;
	      }
	    }
	
	    /**
	     * Aggregates elements of `collection` on `accumulator` with keys transformed
	     * by `iteratee` and values set by `setter`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform keys.
	     * @param {Object} accumulator The initial aggregated object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseAggregator(collection, setter, iteratee, accumulator) {
	      baseEach(collection, function(value, key, collection) {
	        setter(accumulator, value, iteratee(value), collection);
	      });
	      return accumulator;
	    }
	
	    /**
	     * The base implementation of `_.assign` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */
	    function baseAssign(object, source) {
	      return object && copyObject(source, keys(source), object);
	    }
	
	    /**
	     * The base implementation of `_.at` without support for individual paths.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {string[]} paths The property paths of elements to pick.
	     * @returns {Array} Returns the new array of picked elements.
	     */
	    function baseAt(object, paths) {
	      var index = -1,
	          isNil = object == null,
	          length = paths.length,
	          result = Array(length);
	
	      while (++index < length) {
	        result[index] = isNil ? undefined : get(object, paths[index]);
	      }
	      return result;
	    }
	
	    /**
	     * Casts `value` to an empty array if it's not an array like object.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array|Object} Returns the cast array-like object.
	     */
	    function baseCastArrayLikeObject(value) {
	      return isArrayLikeObject(value) ? value : [];
	    }
	
	    /**
	     * Casts `value` to `identity` if it's not a function.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Function} Returns cast function.
	     */
	    function baseCastFunction(value) {
	      return typeof value == 'function' ? value : identity;
	    }
	
	    /**
	     * Casts `value` to a string if it's not a string or symbol.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {string|symbol} Returns the cast key.
	     */
	    function baseCastKey(key) {
	      return (typeof key == 'string' || isSymbol(key)) ? key : (key + '');
	    }
	
	    /**
	     * Casts `value` to a path array if it's not one.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast property path array.
	     */
	    function baseCastPath(value) {
	      return isArray(value) ? value : stringToPath(value);
	    }
	
	    /**
	     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.
	     *
	     * @private
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     */
	    function baseClamp(number, lower, upper) {
	      if (number === number) {
	        if (upper !== undefined) {
	          number = number <= upper ? number : upper;
	        }
	        if (lower !== undefined) {
	          number = number >= lower ? number : lower;
	        }
	      }
	      return number;
	    }
	
	    /**
	     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	     * traversed objects.
	     *
	     * @private
	     * @param {*} value The value to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @param {boolean} [isFull] Specify a clone including symbols.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @param {string} [key] The key of `value`.
	     * @param {Object} [object] The parent object of `value`.
	     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	     * @returns {*} Returns the cloned value.
	     */
	    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
	      var result;
	      if (customizer) {
	        result = object ? customizer(value, key, object, stack) : customizer(value);
	      }
	      if (result !== undefined) {
	        return result;
	      }
	      if (!isObject(value)) {
	        return value;
	      }
	      var isArr = isArray(value);
	      if (isArr) {
	        result = initCloneArray(value);
	        if (!isDeep) {
	          return copyArray(value, result);
	        }
	      } else {
	        var tag = getTag(value),
	            isFunc = tag == funcTag || tag == genTag;
	
	        if (isBuffer(value)) {
	          return cloneBuffer(value, isDeep);
	        }
	        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	          if (isHostObject(value)) {
	            return object ? value : {};
	          }
	          result = initCloneObject(isFunc ? {} : value);
	          if (!isDeep) {
	            return copySymbols(value, baseAssign(result, value));
	          }
	        } else {
	          if (!cloneableTags[tag]) {
	            return object ? value : {};
	          }
	          result = initCloneByTag(value, tag, baseClone, isDeep);
	        }
	      }
	      // Check for circular references and return its corresponding clone.
	      stack || (stack = new Stack);
	      var stacked = stack.get(value);
	      if (stacked) {
	        return stacked;
	      }
	      stack.set(value, result);
	
	      if (!isArr) {
	        var props = isFull ? getAllKeys(value) : keys(value);
	      }
	      // Recursively populate clone (susceptible to call stack limits).
	      arrayEach(props || value, function(subValue, key) {
	        if (props) {
	          key = subValue;
	          subValue = value[key];
	        }
	        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
	      });
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.conforms` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new function.
	     */
	    function baseConforms(source) {
	      var props = keys(source),
	          length = props.length;
	
	      return function(object) {
	        if (object == null) {
	          return !length;
	        }
	        var index = length;
	        while (index--) {
	          var key = props[index],
	              predicate = source[key],
	              value = object[key];
	
	          if ((value === undefined &&
	              !(key in Object(object))) || !predicate(value)) {
	            return false;
	          }
	        }
	        return true;
	      };
	    }
	
	    /**
	     * The base implementation of `_.create` without support for assigning
	     * properties to the created object.
	     *
	     * @private
	     * @param {Object} prototype The object to inherit from.
	     * @returns {Object} Returns the new object.
	     */
	    function baseCreate(proto) {
	      return isObject(proto) ? objectCreate(proto) : {};
	    }
	
	    /**
	     * The base implementation of `_.delay` and `_.defer` which accepts an array
	     * of `func` arguments.
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {Object} args The arguments to provide to `func`.
	     * @returns {number} Returns the timer id.
	     */
	    function baseDelay(func, wait, args) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return setTimeout(function() { func.apply(undefined, args); }, wait);
	    }
	
	    /**
	     * The base implementation of methods like `_.difference` without support
	     * for excluding multiple arrays or iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Array} values The values to exclude.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     */
	    function baseDifference(array, values, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          isCommon = true,
	          length = array.length,
	          result = [],
	          valuesLength = values.length;
	
	      if (!length) {
	        return result;
	      }
	      if (iteratee) {
	        values = arrayMap(values, baseUnary(iteratee));
	      }
	      if (comparator) {
	        includes = arrayIncludesWith;
	        isCommon = false;
	      }
	      else if (values.length >= LARGE_ARRAY_SIZE) {
	        includes = cacheHas;
	        isCommon = false;
	        values = new SetCache(values);
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;
	
	        if (isCommon && computed === computed) {
	          var valuesIndex = valuesLength;
	          while (valuesIndex--) {
	            if (values[valuesIndex] === computed) {
	              continue outer;
	            }
	          }
	          result.push(value);
	        }
	        else if (!includes(values, computed, comparator)) {
	          result.push(value);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.forEach` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEach = createBaseEach(baseForOwn);
	
	    /**
	     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEachRight = createBaseEach(baseForOwnRight, true);
	
	    /**
	     * The base implementation of `_.every` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`
	     */
	    function baseEvery(collection, predicate) {
	      var result = true;
	      baseEach(collection, function(value, index, collection) {
	        result = !!predicate(value, index, collection);
	        return result;
	      });
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.fill` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     */
	    function baseFill(array, value, start, end) {
	      var length = array.length;
	
	      start = toInteger(start);
	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = (end === undefined || end > length) ? length : toInteger(end);
	      if (end < 0) {
	        end += length;
	      }
	      end = start > end ? 0 : toLength(end);
	      while (start < end) {
	        array[start++] = value;
	      }
	      return array;
	    }
	
	    /**
	     * The base implementation of `_.filter` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     */
	    function baseFilter(collection, predicate) {
	      var result = [];
	      baseEach(collection, function(value, index, collection) {
	        if (predicate(value, index, collection)) {
	          result.push(value);
	        }
	      });
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.flatten` with support for restricting flattening.
	     *
	     * @private
	     * @param {Array} array The array to flatten.
	     * @param {number} depth The maximum recursion depth.
	     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.
	     * @param {Array} [result=[]] The initial result value.
	     * @returns {Array} Returns the new flattened array.
	     */
	    function baseFlatten(array, depth, isStrict, result) {
	      result || (result = []);
	
	      var index = -1,
	          length = array.length;
	
	      while (++index < length) {
	        var value = array[index];
	        if (depth > 0 && isArrayLikeObject(value) &&
	            (isStrict || isArray(value) || isArguments(value))) {
	          if (depth > 1) {
	            // Recursively flatten arrays (susceptible to call stack limits).
	            baseFlatten(value, depth - 1, isStrict, result);
	          } else {
	            arrayPush(result, value);
	          }
	        } else if (!isStrict) {
	          result[result.length] = value;
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `baseForOwn` which iterates over `object`
	     * properties returned by `keysFunc` invoking `iteratee` for each property.
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseFor = createBaseFor();
	
	    /**
	     * This function is like `baseFor` except that it iterates over properties
	     * in the opposite order.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseForRight = createBaseFor(true);
	
	    /**
	     * The base implementation of `_.forOwn` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwn(object, iteratee) {
	      return object && baseFor(object, iteratee, keys);
	    }
	
	    /**
	     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwnRight(object, iteratee) {
	      return object && baseForRight(object, iteratee, keys);
	    }
	
	    /**
	     * The base implementation of `_.functions` which creates an array of
	     * `object` function property names filtered from `props`.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Array} props The property names to filter.
	     * @returns {Array} Returns the new array of filtered property names.
	     */
	    function baseFunctions(object, props) {
	      return arrayFilter(props, function(key) {
	        return isFunction(object[key]);
	      });
	    }
	
	    /**
	     * The base implementation of `_.get` without support for default values.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseGet(object, path) {
	      path = isKey(path, object) ? [path] : baseCastPath(path);
	
	      var index = 0,
	          length = path.length;
	
	      while (object != null && index < length) {
	        object = object[path[index++]];
	      }
	      return (index && index == length) ? object : undefined;
	    }
	
	    /**
	     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @param {Function} symbolsFunc The function to get the symbols of `object`.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	      var result = keysFunc(object);
	      return isArray(object)
	        ? result
	        : arrayPush(result, symbolsFunc(object));
	    }
	
	    /**
	     * The base implementation of `_.has` without support for deep paths.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHas(object, key) {
	      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
	      // that are composed entirely of index properties, return `false` for
	      // `hasOwnProperty` checks of them.
	      return hasOwnProperty.call(object, key) ||
	        (typeof object == 'object' && key in object && getPrototype(object) === null);
	    }
	
	    /**
	     * The base implementation of `_.hasIn` without support for deep paths.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHasIn(object, key) {
	      return key in Object(object);
	    }
	
	    /**
	     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.
	     *
	     * @private
	     * @param {number} number The number to check.
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     */
	    function baseInRange(number, start, end) {
	      return number >= nativeMin(start, end) && number < nativeMax(start, end);
	    }
	
	    /**
	     * The base implementation of methods like `_.intersection`, without support
	     * for iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of shared values.
	     */
	    function baseIntersection(arrays, iteratee, comparator) {
	      var includes = comparator ? arrayIncludesWith : arrayIncludes,
	          length = arrays[0].length,
	          othLength = arrays.length,
	          othIndex = othLength,
	          caches = Array(othLength),
	          maxLength = Infinity,
	          result = [];
	
	      while (othIndex--) {
	        var array = arrays[othIndex];
	        if (othIndex && iteratee) {
	          array = arrayMap(array, baseUnary(iteratee));
	        }
	        maxLength = nativeMin(array.length, maxLength);
	        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
	          ? new SetCache(othIndex && array)
	          : undefined;
	      }
	      array = arrays[0];
	
	      var index = -1,
	          seen = caches[0];
	
	      outer:
	      while (++index < length && result.length < maxLength) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;
	
	        if (!(seen
	              ? cacheHas(seen, computed)
	              : includes(result, computed, comparator)
	            )) {
	          othIndex = othLength;
	          while (--othIndex) {
	            var cache = caches[othIndex];
	            if (!(cache
	                  ? cacheHas(cache, computed)
	                  : includes(arrays[othIndex], computed, comparator))
	                ) {
	              continue outer;
	            }
	          }
	          if (seen) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.invert` and `_.invertBy` which inverts
	     * `object` with values transformed by `iteratee` and set by `setter`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform values.
	     * @param {Object} accumulator The initial inverted object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseInverter(object, setter, iteratee, accumulator) {
	      baseForOwn(object, function(value, key, object) {
	        setter(accumulator, iteratee(value), key, object);
	      });
	      return accumulator;
	    }
	
	    /**
	     * The base implementation of `_.invoke` without support for individual
	     * method arguments.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {Array} args The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     */
	    function baseInvoke(object, path, args) {
	      if (!isKey(path, object)) {
	        path = baseCastPath(path);
	        object = parent(object, path);
	        path = last(path);
	      }
	      var func = object == null ? object : object[path];
	      return func == null ? undefined : apply(func, object, args);
	    }
	
	    /**
	     * The base implementation of `_.isEqual` which supports partial comparisons
	     * and tracks traversed objects.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {boolean} [bitmask] The bitmask of comparison flags.
	     *  The bitmask may be composed of the following flags:
	     *     1 - Unordered comparison
	     *     2 - Partial comparison
	     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     */
	    function baseIsEqual(value, other, customizer, bitmask, stack) {
	      if (value === other) {
	        return true;
	      }
	      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
	        return value !== value && other !== other;
	      }
	      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
	    }
	
	    /**
	     * A specialized version of `baseIsEqual` for arrays and objects which performs
	     * deep comparisons and tracks traversed objects enabling objects with circular
	     * references to be compared.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
	      var objIsArr = isArray(object),
	          othIsArr = isArray(other),
	          objTag = arrayTag,
	          othTag = arrayTag;
	
	      if (!objIsArr) {
	        objTag = getTag(object);
	        objTag = objTag == argsTag ? objectTag : objTag;
	      }
	      if (!othIsArr) {
	        othTag = getTag(other);
	        othTag = othTag == argsTag ? objectTag : othTag;
	      }
	      var objIsObj = objTag == objectTag && !isHostObject(object),
	          othIsObj = othTag == objectTag && !isHostObject(other),
	          isSameTag = objTag == othTag;
	
	      if (isSameTag && !objIsObj) {
	        stack || (stack = new Stack);
	        return (objIsArr || isTypedArray(object))
	          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)
	          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
	      }
	      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
	        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
	
	        if (objIsWrapped || othIsWrapped) {
	          var objUnwrapped = objIsWrapped ? object.value() : object,
	              othUnwrapped = othIsWrapped ? other.value() : other;
	
	          stack || (stack = new Stack);
	          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
	        }
	      }
	      if (!isSameTag) {
	        return false;
	      }
	      stack || (stack = new Stack);
	      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
	    }
	
	    /**
	     * The base implementation of `_.isMatch` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Array} matchData The property names, values, and compare flags to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     */
	    function baseIsMatch(object, source, matchData, customizer) {
	      var index = matchData.length,
	          length = index,
	          noCustomizer = !customizer;
	
	      if (object == null) {
	        return !length;
	      }
	      object = Object(object);
	      while (index--) {
	        var data = matchData[index];
	        if ((noCustomizer && data[2])
	              ? data[1] !== object[data[0]]
	              : !(data[0] in object)
	            ) {
	          return false;
	        }
	      }
	      while (++index < length) {
	        data = matchData[index];
	        var key = data[0],
	            objValue = object[key],
	            srcValue = data[1];
	
	        if (noCustomizer && data[2]) {
	          if (objValue === undefined && !(key in object)) {
	            return false;
	          }
	        } else {
	          var stack = new Stack;
	          if (customizer) {
	            var result = customizer(objValue, srcValue, key, object, source, stack);
	          }
	          if (!(result === undefined
	                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)
	                : result
	              )) {
	            return false;
	          }
	        }
	      }
	      return true;
	    }
	
	    /**
	     * The base implementation of `_.iteratee`.
	     *
	     * @private
	     * @param {*} [value=_.identity] The value to convert to an iteratee.
	     * @returns {Function} Returns the iteratee.
	     */
	    function baseIteratee(value) {
	      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	      if (typeof value == 'function') {
	        return value;
	      }
	      if (value == null) {
	        return identity;
	      }
	      if (typeof value == 'object') {
	        return isArray(value)
	          ? baseMatchesProperty(value[0], value[1])
	          : baseMatches(value);
	      }
	      return property(value);
	    }
	
	    /**
	     * The base implementation of `_.keys` which doesn't skip the constructor
	     * property of prototypes or treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeys(object) {
	      return nativeKeys(Object(object));
	    }
	
	    /**
	     * The base implementation of `_.keysIn` which doesn't skip the constructor
	     * property of prototypes or treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeysIn(object) {
	      object = object == null ? object : Object(object);
	
	      var result = [];
	      for (var key in object) {
	        result.push(key);
	      }
	      return result;
	    }
	
	    // Fallback for IE < 9 with es6-shim.
	    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {
	      baseKeysIn = function(object) {
	        return iteratorToArray(enumerate(object));
	      };
	    }
	
	    /**
	     * The base implementation of `_.map` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     */
	    function baseMap(collection, iteratee) {
	      var index = -1,
	          result = isArrayLike(collection) ? Array(collection.length) : [];
	
	      baseEach(collection, function(value, key, collection) {
	        result[++index] = iteratee(value, key, collection);
	      });
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.matches` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new function.
	     */
	    function baseMatches(source) {
	      var matchData = getMatchData(source);
	      if (matchData.length == 1 && matchData[0][2]) {
	        var key = matchData[0][0],
	            value = matchData[0][1];
	
	        return function(object) {
	          if (object == null) {
	            return false;
	          }
	          return object[key] === value &&
	            (value !== undefined || (key in Object(object)));
	        };
	      }
	      return function(object) {
	        return object === source || baseIsMatch(object, source, matchData);
	      };
	    }
	
	    /**
	     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	     *
	     * @private
	     * @param {string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new function.
	     */
	    function baseMatchesProperty(path, srcValue) {
	      return function(object) {
	        var objValue = get(object, path);
	        return (objValue === undefined && objValue === srcValue)
	          ? hasIn(object, path)
	          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
	      };
	    }
	
	    /**
	     * The base implementation of `_.merge` without support for multiple sources.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} [customizer] The function to customize merged values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMerge(object, source, srcIndex, customizer, stack) {
	      if (object === source) {
	        return;
	      }
	      if (!(isArray(source) || isTypedArray(source))) {
	        var props = keysIn(source);
	      }
	      arrayEach(props || source, function(srcValue, key) {
	        if (props) {
	          key = srcValue;
	          srcValue = source[key];
	        }
	        if (isObject(srcValue)) {
	          stack || (stack = new Stack);
	          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	        }
	        else {
	          var newValue = customizer
	            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
	            : undefined;
	
	          if (newValue === undefined) {
	            newValue = srcValue;
	          }
	          assignMergeValue(object, key, newValue);
	        }
	      });
	    }
	
	    /**
	     * A specialized version of `baseMerge` for arrays and objects which performs
	     * deep merges and tracks traversed objects enabling objects with circular
	     * references to be merged.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {string} key The key of the value to merge.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} mergeFunc The function to merge values.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	      var objValue = object[key],
	          srcValue = source[key],
	          stacked = stack.get(srcValue);
	
	      if (stacked) {
	        assignMergeValue(object, key, stacked);
	        return;
	      }
	      var newValue = customizer
	        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	        : undefined;
	
	      var isCommon = newValue === undefined;
	
	      if (isCommon) {
	        newValue = srcValue;
	        if (isArray(srcValue) || isTypedArray(srcValue)) {
	          if (isArray(objValue)) {
	            newValue = objValue;
	          }
	          else if (isArrayLikeObject(objValue)) {
	            newValue = copyArray(objValue);
	          }
	          else {
	            isCommon = false;
	            newValue = baseClone(srcValue, true);
	          }
	        }
	        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	          if (isArguments(objValue)) {
	            newValue = toPlainObject(objValue);
	          }
	          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
	            isCommon = false;
	            newValue = baseClone(srcValue, true);
	          }
	          else {
	            newValue = objValue;
	          }
	        }
	        else {
	          isCommon = false;
	        }
	      }
	      stack.set(srcValue, newValue);
	
	      if (isCommon) {
	        // Recursively merge objects and arrays (susceptible to call stack limits).
	        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	      }
	      stack['delete'](srcValue);
	      assignMergeValue(object, key, newValue);
	    }
	
	    /**
	     * The base implementation of `_.orderBy` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	     * @param {string[]} orders The sort orders of `iteratees`.
	     * @returns {Array} Returns the new sorted array.
	     */
	    function baseOrderBy(collection, iteratees, orders) {
	      var index = -1;
	      iteratees = arrayMap(iteratees.length ? iteratees : [identity], getIteratee());
	
	      var result = baseMap(collection, function(value, key, collection) {
	        var criteria = arrayMap(iteratees, function(iteratee) {
	          return iteratee(value);
	        });
	        return { 'criteria': criteria, 'index': ++index, 'value': value };
	      });
	
	      return baseSortBy(result, function(object, other) {
	        return compareMultiple(object, other, orders);
	      });
	    }
	
	    /**
	     * The base implementation of `_.pick` without support for individual
	     * property identifiers.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} props The property identifiers to pick.
	     * @returns {Object} Returns the new object.
	     */
	    function basePick(object, props) {
	      object = Object(object);
	      return arrayReduce(props, function(result, key) {
	        if (key in object) {
	          result[key] = object[key];
	        }
	        return result;
	      }, {});
	    }
	
	    /**
	     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {Function} predicate The function invoked per property.
	     * @returns {Object} Returns the new object.
	     */
	    function basePickBy(object, predicate) {
	      var index = -1,
	          props = getAllKeysIn(object),
	          length = props.length,
	          result = {};
	
	      while (++index < length) {
	        var key = props[index],
	            value = object[key];
	
	        if (predicate(value, key)) {
	          result[key] = value;
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.property` without support for deep paths.
	     *
	     * @private
	     * @param {string} key The key of the property to get.
	     * @returns {Function} Returns the new function.
	     */
	    function baseProperty(key) {
	      return function(object) {
	        return object == null ? undefined : object[key];
	      };
	    }
	
	    /**
	     * A specialized version of `baseProperty` which supports deep paths.
	     *
	     * @private
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new function.
	     */
	    function basePropertyDeep(path) {
	      return function(object) {
	        return baseGet(object, path);
	      };
	    }
	
	    /**
	     * The base implementation of `_.pullAllBy` without support for iteratee
	     * shorthands.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAll(array, values, iteratee, comparator) {
	      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
	          index = -1,
	          length = values.length,
	          seen = array;
	
	      if (iteratee) {
	        seen = arrayMap(array, baseUnary(iteratee));
	      }
	      while (++index < length) {
	        var fromIndex = 0,
	            value = values[index],
	            computed = iteratee ? iteratee(value) : value;
	
	        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
	          if (seen !== array) {
	            splice.call(seen, fromIndex, 1);
	          }
	          splice.call(array, fromIndex, 1);
	        }
	      }
	      return array;
	    }
	
	    /**
	     * The base implementation of `_.pullAt` without support for individual
	     * indexes or capturing the removed elements.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {number[]} indexes The indexes of elements to remove.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAt(array, indexes) {
	      var length = array ? indexes.length : 0,
	          lastIndex = length - 1;
	
	      while (length--) {
	        var index = indexes[length];
	        if (lastIndex == length || index != previous) {
	          var previous = index;
	          if (isIndex(index)) {
	            splice.call(array, index, 1);
	          }
	          else if (!isKey(index, array)) {
	            var path = baseCastPath(index),
	                object = parent(array, path);
	
	            if (object != null) {
	              delete object[last(path)];
	            }
	          }
	          else {
	            delete array[index];
	          }
	        }
	      }
	      return array;
	    }
	
	    /**
	     * The base implementation of `_.random` without support for returning
	     * floating-point numbers.
	     *
	     * @private
	     * @param {number} lower The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the random number.
	     */
	    function baseRandom(lower, upper) {
	      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
	    }
	
	    /**
	     * The base implementation of `_.range` and `_.rangeRight` which doesn't
	     * coerce arguments to numbers.
	     *
	     * @private
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} step The value to increment or decrement by.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the new array of numbers.
	     */
	    function baseRange(start, end, step, fromRight) {
	      var index = -1,
	          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
	          result = Array(length);
	
	      while (length--) {
	        result[fromRight ? length : ++index] = start;
	        start += step;
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.repeat` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {string} string The string to repeat.
	     * @param {number} n The number of times to repeat the string.
	     * @returns {string} Returns the repeated string.
	     */
	    function baseRepeat(string, n) {
	      var result = '';
	      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
	        return result;
	      }
	      // Leverage the exponentiation by squaring algorithm for a faster repeat.
	      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
	      do {
	        if (n % 2) {
	          result += string;
	        }
	        n = nativeFloor(n / 2);
	        if (n) {
	          string += string;
	        }
	      } while (n);
	
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.set`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseSet(object, path, value, customizer) {
	      path = isKey(path, object) ? [path] : baseCastPath(path);
	
	      var index = -1,
	          length = path.length,
	          lastIndex = length - 1,
	          nested = object;
	
	      while (nested != null && ++index < length) {
	        var key = path[index];
	        if (isObject(nested)) {
	          var newValue = value;
	          if (index != lastIndex) {
	            var objValue = nested[key];
	            newValue = customizer ? customizer(objValue, key, nested) : undefined;
	            if (newValue === undefined) {
	              newValue = objValue == null
	                ? (isIndex(path[index + 1]) ? [] : {})
	                : objValue;
	            }
	          }
	          assignValue(nested, key, newValue);
	        }
	        nested = nested[key];
	      }
	      return object;
	    }
	
	    /**
	     * The base implementation of `setData` without support for hot loop detection.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var baseSetData = !metaMap ? identity : function(func, data) {
	      metaMap.set(func, data);
	      return func;
	    };
	
	    /**
	     * The base implementation of `_.slice` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseSlice(array, start, end) {
	      var index = -1,
	          length = array.length;
	
	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = end > length ? length : end;
	      if (end < 0) {
	        end += length;
	      }
	      length = start > end ? 0 : ((end - start) >>> 0);
	      start >>>= 0;
	
	      var result = Array(length);
	      while (++index < length) {
	        result[index] = array[index + start];
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.some` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     */
	    function baseSome(collection, predicate) {
	      var result;
	
	      baseEach(collection, function(value, index, collection) {
	        result = predicate(value, index, collection);
	        return !result;
	      });
	      return !!result;
	    }
	
	    /**
	     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
	     * performs a binary search of `array` to determine the index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndex(array, value, retHighest) {
	      var low = 0,
	          high = array ? array.length : low;
	
	      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
	        while (low < high) {
	          var mid = (low + high) >>> 1,
	              computed = array[mid];
	
	          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {
	            low = mid + 1;
	          } else {
	            high = mid;
	          }
	        }
	        return high;
	      }
	      return baseSortedIndexBy(array, value, identity, retHighest);
	    }
	
	    /**
	     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
	     * which invokes `iteratee` for `value` and each element of `array` to compute
	     * their sort ranking. The iteratee is invoked with one argument; (value).
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} iteratee The iteratee invoked per element.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndexBy(array, value, iteratee, retHighest) {
	      value = iteratee(value);
	
	      var low = 0,
	          high = array ? array.length : 0,
	          valIsNaN = value !== value,
	          valIsNull = value === null,
	          valIsUndef = value === undefined;
	
	      while (low < high) {
	        var mid = nativeFloor((low + high) / 2),
	            computed = iteratee(array[mid]),
	            isDef = computed !== undefined,
	            isReflexive = computed === computed;
	
	        if (valIsNaN) {
	          var setLow = isReflexive || retHighest;
	        } else if (valIsNull) {
	          setLow = isReflexive && isDef && (retHighest || computed != null);
	        } else if (valIsUndef) {
	          setLow = isReflexive && (retHighest || isDef);
	        } else if (computed == null) {
	          setLow = false;
	        } else {
	          setLow = retHighest ? (computed <= value) : (computed < value);
	        }
	        if (setLow) {
	          low = mid + 1;
	        } else {
	          high = mid;
	        }
	      }
	      return nativeMin(high, MAX_ARRAY_INDEX);
	    }
	
	    /**
	     * The base implementation of `_.sortedUniq`.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseSortedUniq(array) {
	      return baseSortedUniqBy(array);
	    }
	
	    /**
	     * The base implementation of `_.sortedUniqBy` without support for iteratee
	     * shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseSortedUniqBy(array, iteratee) {
	      var index = 0,
	          length = array.length,
	          value = array[0],
	          computed = iteratee ? iteratee(value) : value,
	          seen = computed,
	          resIndex = 1,
	          result = [value];
	
	      while (++index < length) {
	        value = array[index],
	        computed = iteratee ? iteratee(value) : value;
	
	        if (!eq(computed, seen)) {
	          seen = computed;
	          result[resIndex++] = value;
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseUniq(array, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          length = array.length,
	          isCommon = true,
	          result = [],
	          seen = result;
	
	      if (comparator) {
	        isCommon = false;
	        includes = arrayIncludesWith;
	      }
	      else if (length >= LARGE_ARRAY_SIZE) {
	        var set = iteratee ? null : createSet(array);
	        if (set) {
	          return setToArray(set);
	        }
	        isCommon = false;
	        includes = cacheHas;
	        seen = new SetCache;
	      }
	      else {
	        seen = iteratee ? [] : result;
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;
	
	        if (isCommon && computed === computed) {
	          var seenIndex = seen.length;
	          while (seenIndex--) {
	            if (seen[seenIndex] === computed) {
	              continue outer;
	            }
	          }
	          if (iteratee) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	        else if (!includes(seen, computed, comparator)) {
	          if (seen !== result) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.unset`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     */
	    function baseUnset(object, path) {
	      path = isKey(path, object) ? [path] : baseCastPath(path);
	      object = parent(object, path);
	      var key = last(path);
	      return (object != null && has(object, key)) ? delete object[key] : true;
	    }
	
	    /**
	     * The base implementation of `_.update`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to update.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseUpdate(object, path, updater, customizer) {
	      return baseSet(object, path, updater(baseGet(object, path)), customizer);
	    }
	
	    /**
	     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
	     * without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {Function} predicate The function invoked per iteration.
	     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseWhile(array, predicate, isDrop, fromRight) {
	      var length = array.length,
	          index = fromRight ? length : -1;
	
	      while ((fromRight ? index-- : ++index < length) &&
	        predicate(array[index], index, array)) {}
	
	      return isDrop
	        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
	        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
	    }
	
	    /**
	     * The base implementation of `wrapperValue` which returns the result of
	     * performing a sequence of actions on the unwrapped `value`, where each
	     * successive action is supplied the return value of the previous.
	     *
	     * @private
	     * @param {*} value The unwrapped value.
	     * @param {Array} actions Actions to perform to resolve the unwrapped value.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseWrapperValue(value, actions) {
	      var result = value;
	      if (result instanceof LazyWrapper) {
	        result = result.value();
	      }
	      return arrayReduce(actions, function(result, action) {
	        return action.func.apply(action.thisArg, arrayPush([result], action.args));
	      }, result);
	    }
	
	    /**
	     * The base implementation of methods like `_.xor`, without support for
	     * iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of values.
	     */
	    function baseXor(arrays, iteratee, comparator) {
	      var index = -1,
	          length = arrays.length;
	
	      while (++index < length) {
	        var result = result
	          ? arrayPush(
	              baseDifference(result, arrays[index], iteratee, comparator),
	              baseDifference(arrays[index], result, iteratee, comparator)
	            )
	          : arrays[index];
	      }
	      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];
	    }
	
	    /**
	     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
	     *
	     * @private
	     * @param {Array} props The property identifiers.
	     * @param {Array} values The property values.
	     * @param {Function} assignFunc The function to assign values.
	     * @returns {Object} Returns the new object.
	     */
	    function baseZipObject(props, values, assignFunc) {
	      var index = -1,
	          length = props.length,
	          valsLength = values.length,
	          result = {};
	
	      while (++index < length) {
	        var value = index < valsLength ? values[index] : undefined;
	        assignFunc(result, props[index], value);
	      }
	      return result;
	    }
	
	    /**
	     * Creates a clone of  `buffer`.
	     *
	     * @private
	     * @param {Buffer} buffer The buffer to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Buffer} Returns the cloned buffer.
	     */
	    function cloneBuffer(buffer, isDeep) {
	      if (isDeep) {
	        return buffer.slice();
	      }
	      var result = new buffer.constructor(buffer.length);
	      buffer.copy(result);
	      return result;
	    }
	
	    /**
	     * Creates a clone of `arrayBuffer`.
	     *
	     * @private
	     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	     * @returns {ArrayBuffer} Returns the cloned array buffer.
	     */
	    function cloneArrayBuffer(arrayBuffer) {
	      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	      return result;
	    }
	
	    /**
	     * Creates a clone of `dataView`.
	     *
	     * @private
	     * @param {Object} dataView The data view to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned data view.
	     */
	    function cloneDataView(dataView, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	    }
	
	    /**
	     * Creates a clone of `map`.
	     *
	     * @private
	     * @param {Object} map The map to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned map.
	     */
	    function cloneMap(map, isDeep, cloneFunc) {
	      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
	      return arrayReduce(array, addMapEntry, new map.constructor);
	    }
	
	    /**
	     * Creates a clone of `regexp`.
	     *
	     * @private
	     * @param {Object} regexp The regexp to clone.
	     * @returns {Object} Returns the cloned regexp.
	     */
	    function cloneRegExp(regexp) {
	      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	      result.lastIndex = regexp.lastIndex;
	      return result;
	    }
	
	    /**
	     * Creates a clone of `set`.
	     *
	     * @private
	     * @param {Object} set The set to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned set.
	     */
	    function cloneSet(set, isDeep, cloneFunc) {
	      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
	      return arrayReduce(array, addSetEntry, new set.constructor);
	    }
	
	    /**
	     * Creates a clone of the `symbol` object.
	     *
	     * @private
	     * @param {Object} symbol The symbol object to clone.
	     * @returns {Object} Returns the cloned symbol object.
	     */
	    function cloneSymbol(symbol) {
	      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	    }
	
	    /**
	     * Creates a clone of `typedArray`.
	     *
	     * @private
	     * @param {Object} typedArray The typed array to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned typed array.
	     */
	    function cloneTypedArray(typedArray, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	    }
	
	    /**
	     * Creates an array that is the composition of partially applied arguments,
	     * placeholders, and provided arguments into a single array of arguments.
	     *
	     * @private
	     * @param {Array|Object} args The provided arguments.
	     * @param {Array} partials The arguments to prepend to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgs(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersLength = holders.length,
	          leftIndex = -1,
	          leftLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(leftLength + rangeLength),
	          isUncurried = !isCurried;
	
	      while (++leftIndex < leftLength) {
	        result[leftIndex] = partials[leftIndex];
	      }
	      while (++argsIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[holders[argsIndex]] = args[argsIndex];
	        }
	      }
	      while (rangeLength--) {
	        result[leftIndex++] = args[argsIndex++];
	      }
	      return result;
	    }
	
	    /**
	     * This function is like `composeArgs` except that the arguments composition
	     * is tailored for `_.partialRight`.
	     *
	     * @private
	     * @param {Array|Object} args The provided arguments.
	     * @param {Array} partials The arguments to append to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgsRight(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersIndex = -1,
	          holdersLength = holders.length,
	          rightIndex = -1,
	          rightLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(rangeLength + rightLength),
	          isUncurried = !isCurried;
	
	      while (++argsIndex < rangeLength) {
	        result[argsIndex] = args[argsIndex];
	      }
	      var offset = argsIndex;
	      while (++rightIndex < rightLength) {
	        result[offset + rightIndex] = partials[rightIndex];
	      }
	      while (++holdersIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[offset + holders[holdersIndex]] = args[argsIndex++];
	        }
	      }
	      return result;
	    }
	
	    /**
	     * Copies the values of `source` to `array`.
	     *
	     * @private
	     * @param {Array} source The array to copy values from.
	     * @param {Array} [array=[]] The array to copy values to.
	     * @returns {Array} Returns `array`.
	     */
	    function copyArray(source, array) {
	      var index = -1,
	          length = source.length;
	
	      array || (array = Array(length));
	      while (++index < length) {
	        array[index] = source[index];
	      }
	      return array;
	    }
	
	    /**
	     * Copies properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy properties from.
	     * @param {Array} props The property identifiers to copy.
	     * @param {Object} [object={}] The object to copy properties to.
	     * @returns {Object} Returns `object`.
	     */
	    function copyObject(source, props, object) {
	      return copyObjectWith(source, props, object);
	    }
	
	    /**
	     * This function is like `copyObject` except that it accepts a function to
	     * customize copied values.
	     *
	     * @private
	     * @param {Object} source The object to copy properties from.
	     * @param {Array} props The property identifiers to copy.
	     * @param {Object} [object={}] The object to copy properties to.
	     * @param {Function} [customizer] The function to customize copied values.
	     * @returns {Object} Returns `object`.
	     */
	    function copyObjectWith(source, props, object, customizer) {
	      object || (object = {});
	
	      var index = -1,
	          length = props.length;
	
	      while (++index < length) {
	        var key = props[index];
	
	        var newValue = customizer
	          ? customizer(object[key], source[key], key, object, source)
	          : source[key];
	
	        assignValue(object, key, newValue);
	      }
	      return object;
	    }
	
	    /**
	     * Copies own symbol properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */
	    function copySymbols(source, object) {
	      return copyObject(source, getSymbols(source), object);
	    }
	
	    /**
	     * Creates a function like `_.groupBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} [initializer] The accumulator object initializer.
	     * @returns {Function} Returns the new aggregator function.
	     */
	    function createAggregator(setter, initializer) {
	      return function(collection, iteratee) {
	        var func = isArray(collection) ? arrayAggregator : baseAggregator,
	            accumulator = initializer ? initializer() : {};
	
	        return func(collection, setter, getIteratee(iteratee), accumulator);
	      };
	    }
	
	    /**
	     * Creates a function like `_.assign`.
	     *
	     * @private
	     * @param {Function} assigner The function to assign values.
	     * @returns {Function} Returns the new assigner function.
	     */
	    function createAssigner(assigner) {
	      return rest(function(object, sources) {
	        var index = -1,
	            length = sources.length,
	            customizer = length > 1 ? sources[length - 1] : undefined,
	            guard = length > 2 ? sources[2] : undefined;
	
	        customizer = typeof customizer == 'function'
	          ? (length--, customizer)
	          : undefined;
	
	        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	          customizer = length < 3 ? undefined : customizer;
	          length = 1;
	        }
	        object = Object(object);
	        while (++index < length) {
	          var source = sources[index];
	          if (source) {
	            assigner(object, source, index, customizer);
	          }
	        }
	        return object;
	      });
	    }
	
	    /**
	     * Creates a `baseEach` or `baseEachRight` function.
	     *
	     * @private
	     * @param {Function} eachFunc The function to iterate over a collection.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseEach(eachFunc, fromRight) {
	      return function(collection, iteratee) {
	        if (collection == null) {
	          return collection;
	        }
	        if (!isArrayLike(collection)) {
	          return eachFunc(collection, iteratee);
	        }
	        var length = collection.length,
	            index = fromRight ? length : -1,
	            iterable = Object(collection);
	
	        while ((fromRight ? index-- : ++index < length)) {
	          if (iteratee(iterable[index], index, iterable) === false) {
	            break;
	          }
	        }
	        return collection;
	      };
	    }
	
	    /**
	     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseFor(fromRight) {
	      return function(object, iteratee, keysFunc) {
	        var index = -1,
	            iterable = Object(object),
	            props = keysFunc(object),
	            length = props.length;
	
	        while (length--) {
	          var key = props[fromRight ? length : ++index];
	          if (iteratee(iterable[key], key, iterable) === false) {
	            break;
	          }
	        }
	        return object;
	      };
	    }
	
	    /**
	     * Creates a function that wraps `func` to invoke it with the optional `this`
	     * binding of `thisArg`.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createBaseWrapper(func, bitmask, thisArg) {
	      var isBind = bitmask & BIND_FLAG,
	          Ctor = createCtorWrapper(func);
	
	      function wrapper() {
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return fn.apply(isBind ? thisArg : this, arguments);
	      }
	      return wrapper;
	    }
	
	    /**
	     * Creates a function like `_.lowerFirst`.
	     *
	     * @private
	     * @param {string} methodName The name of the `String` case method to use.
	     * @returns {Function} Returns the new function.
	     */
	    function createCaseFirst(methodName) {
	      return function(string) {
	        string = toString(string);
	
	        var strSymbols = reHasComplexSymbol.test(string)
	          ? stringToArray(string)
	          : undefined;
	
	        var chr = strSymbols ? strSymbols[0] : string.charAt(0),
	            trailing = strSymbols ? strSymbols.slice(1).join('') : string.slice(1);
	
	        return chr[methodName]() + trailing;
	      };
	    }
	
	    /**
	     * Creates a function like `_.camelCase`.
	     *
	     * @private
	     * @param {Function} callback The function to combine each word.
	     * @returns {Function} Returns the new compounder function.
	     */
	    function createCompounder(callback) {
	      return function(string) {
	        return arrayReduce(words(deburr(string)), callback, '');
	      };
	    }
	
	    /**
	     * Creates a function that produces an instance of `Ctor` regardless of
	     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	     *
	     * @private
	     * @param {Function} Ctor The constructor to wrap.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCtorWrapper(Ctor) {
	      return function() {
	        // Use a `switch` statement to work with class constructors.
	        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	        // for more details.
	        var args = arguments;
	        switch (args.length) {
	          case 0: return new Ctor;
	          case 1: return new Ctor(args[0]);
	          case 2: return new Ctor(args[0], args[1]);
	          case 3: return new Ctor(args[0], args[1], args[2]);
	          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
	          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
	          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
	          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
	        }
	        var thisBinding = baseCreate(Ctor.prototype),
	            result = Ctor.apply(thisBinding, args);
	
	        // Mimic the constructor's `return` behavior.
	        // See https://es5.github.io/#x13.2.2 for more details.
	        return isObject(result) ? result : thisBinding;
	      };
	    }
	
	    /**
	     * Creates a function that wraps `func` to enable currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {number} arity The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCurryWrapper(func, bitmask, arity) {
	      var Ctor = createCtorWrapper(func);
	
	      function wrapper() {
	        var length = arguments.length,
	            args = Array(length),
	            index = length,
	            placeholder = getPlaceholder(wrapper);
	
	        while (index--) {
	          args[index] = arguments[index];
	        }
	        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
	          ? []
	          : replaceHolders(args, placeholder);
	
	        length -= holders.length;
	        if (length < arity) {
	          return createRecurryWrapper(
	            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,
	            args, holders, undefined, undefined, arity - length);
	        }
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return apply(fn, this, args);
	      }
	      return wrapper;
	    }
	
	    /**
	     * Creates a `_.flow` or `_.flowRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new flow function.
	     */
	    function createFlow(fromRight) {
	      return rest(function(funcs) {
	        funcs = baseFlatten(funcs, 1);
	
	        var length = funcs.length,
	            index = length,
	            prereq = LodashWrapper.prototype.thru;
	
	        if (fromRight) {
	          funcs.reverse();
	        }
	        while (index--) {
	          var func = funcs[index];
	          if (typeof func != 'function') {
	            throw new TypeError(FUNC_ERROR_TEXT);
	          }
	          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
	            var wrapper = new LodashWrapper([], true);
	          }
	        }
	        index = wrapper ? index : length;
	        while (++index < length) {
	          func = funcs[index];
	
	          var funcName = getFuncName(func),
	              data = funcName == 'wrapper' ? getData(func) : undefined;
	
	          if (data && isLaziable(data[0]) &&
	                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&
	                !data[4].length && data[9] == 1
	              ) {
	            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
	          } else {
	            wrapper = (func.length == 1 && isLaziable(func))
	              ? wrapper[funcName]()
	              : wrapper.thru(func);
	          }
	        }
	        return function() {
	          var args = arguments,
	              value = args[0];
	
	          if (wrapper && args.length == 1 &&
	              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {
	            return wrapper.plant(value).value();
	          }
	          var index = 0,
	              result = length ? funcs[index].apply(this, args) : value;
	
	          while (++index < length) {
	            result = funcs[index].call(this, result);
	          }
	          return result;
	        };
	      });
	    }
	
	    /**
	     * Creates a function that wraps `func` to invoke it with optional `this`
	     * binding of `thisArg`, partial application, and currying.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [partialsRight] The arguments to append to those provided
	     *  to the new function.
	     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
	      var isAry = bitmask & ARY_FLAG,
	          isBind = bitmask & BIND_FLAG,
	          isBindKey = bitmask & BIND_KEY_FLAG,
	          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),
	          isFlip = bitmask & FLIP_FLAG,
	          Ctor = isBindKey ? undefined : createCtorWrapper(func);
	
	      function wrapper() {
	        var length = arguments.length,
	            index = length,
	            args = Array(length);
	
	        while (index--) {
	          args[index] = arguments[index];
	        }
	        if (isCurried) {
	          var placeholder = getPlaceholder(wrapper),
	              holdersCount = countHolders(args, placeholder);
	        }
	        if (partials) {
	          args = composeArgs(args, partials, holders, isCurried);
	        }
	        if (partialsRight) {
	          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
	        }
	        length -= holdersCount;
	        if (isCurried && length < arity) {
	          var newHolders = replaceHolders(args, placeholder);
	          return createRecurryWrapper(
	            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,
	            args, newHolders, argPos, ary, arity - length
	          );
	        }
	        var thisBinding = isBind ? thisArg : this,
	            fn = isBindKey ? thisBinding[func] : func;
	
	        length = args.length;
	        if (argPos) {
	          args = reorder(args, argPos);
	        } else if (isFlip && length > 1) {
	          args.reverse();
	        }
	        if (isAry && ary < length) {
	          args.length = ary;
	        }
	        if (this && this !== root && this instanceof wrapper) {
	          fn = Ctor || createCtorWrapper(fn);
	        }
	        return fn.apply(thisBinding, args);
	      }
	      return wrapper;
	    }
	
	    /**
	     * Creates a function like `_.invertBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} toIteratee The function to resolve iteratees.
	     * @returns {Function} Returns the new inverter function.
	     */
	    function createInverter(setter, toIteratee) {
	      return function(object, iteratee) {
	        return baseInverter(object, setter, toIteratee(iteratee), {});
	      };
	    }
	
	    /**
	     * Creates a function like `_.over`.
	     *
	     * @private
	     * @param {Function} arrayFunc The function to iterate over iteratees.
	     * @returns {Function} Returns the new invoker function.
	     */
	    function createOver(arrayFunc) {
	      return rest(function(iteratees) {
	        iteratees = arrayMap(baseFlatten(iteratees, 1), getIteratee());
	        return rest(function(args) {
	          var thisArg = this;
	          return arrayFunc(iteratees, function(iteratee) {
	            return apply(iteratee, thisArg, args);
	          });
	        });
	      });
	    }
	
	    /**
	     * Creates the padding for `string` based on `length`. The `chars` string
	     * is truncated if the number of characters exceeds `length`.
	     *
	     * @private
	     * @param {number} length The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padding for `string`.
	     */
	    function createPadding(length, chars) {
	      chars = chars === undefined ? ' ' : (chars + '');
	
	      var charsLength = chars.length;
	      if (charsLength < 2) {
	        return charsLength ? baseRepeat(chars, length) : chars;
	      }
	      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
	      return reHasComplexSymbol.test(chars)
	        ? stringToArray(result).slice(0, length).join('')
	        : result.slice(0, length);
	    }
	
	    /**
	     * Creates a function that wraps `func` to invoke it with the optional `this`
	     * binding of `thisArg` and the `partials` prepended to those provided to
	     * the wrapper.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {Array} partials The arguments to prepend to those provided to
	     *  the new function.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createPartialWrapper(func, bitmask, thisArg, partials) {
	      var isBind = bitmask & BIND_FLAG,
	          Ctor = createCtorWrapper(func);
	
	      function wrapper() {
	        var argsIndex = -1,
	            argsLength = arguments.length,
	            leftIndex = -1,
	            leftLength = partials.length,
	            args = Array(leftLength + argsLength),
	            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	
	        while (++leftIndex < leftLength) {
	          args[leftIndex] = partials[leftIndex];
	        }
	        while (argsLength--) {
	          args[leftIndex++] = arguments[++argsIndex];
	        }
	        return apply(fn, isBind ? thisArg : this, args);
	      }
	      return wrapper;
	    }
	
	    /**
	     * Creates a `_.range` or `_.rangeRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new range function.
	     */
	    function createRange(fromRight) {
	      return function(start, end, step) {
	        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
	          end = step = undefined;
	        }
	        // Ensure the sign of `-0` is preserved.
	        start = toNumber(start);
	        start = start === start ? start : 0;
	        if (end === undefined) {
	          end = start;
	          start = 0;
	        } else {
	          end = toNumber(end) || 0;
	        }
	        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);
	        return baseRange(start, end, step, fromRight);
	      };
	    }
	
	    /**
	     * Creates a function that wraps `func` to continue currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {Function} wrapFunc The function to create the `func` wrapper.
	     * @param {*} placeholder The placeholder value.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
	      var isCurry = bitmask & CURRY_FLAG,
	          newArgPos = argPos ? copyArray(argPos) : undefined,
	          newHolders = isCurry ? holders : undefined,
	          newHoldersRight = isCurry ? undefined : holders,
	          newPartials = isCurry ? partials : undefined,
	          newPartialsRight = isCurry ? undefined : partials;
	
	      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);
	      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);
	
	      if (!(bitmask & CURRY_BOUND_FLAG)) {
	        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);
	      }
	      var newData = [
	        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
	        newHoldersRight, newArgPos, ary, arity
	      ];
	
	      var result = wrapFunc.apply(undefined, newData);
	      if (isLaziable(func)) {
	        setData(result, newData);
	      }
	      result.placeholder = placeholder;
	      return result;
	    }
	
	    /**
	     * Creates a function like `_.round`.
	     *
	     * @private
	     * @param {string} methodName The name of the `Math` method to use when rounding.
	     * @returns {Function} Returns the new round function.
	     */
	    function createRound(methodName) {
	      var func = Math[methodName];
	      return function(number, precision) {
	        number = toNumber(number);
	        precision = toInteger(precision);
	        if (precision) {
	          // Shift with exponential notation to avoid floating-point issues.
	          // See [MDN](https://mdn.io/round#Examples) for more details.
	          var pair = (toString(number) + 'e').split('e'),
	              value = func(pair[0] + 'e' + (+pair[1] + precision));
	
	          pair = (toString(value) + 'e').split('e');
	          return +(pair[0] + 'e' + (+pair[1] - precision));
	        }
	        return func(number);
	      };
	    }
	
	    /**
	     * Creates a set of `values`.
	     *
	     * @private
	     * @param {Array} values The values to add to the set.
	     * @returns {Object} Returns the new set.
	     */
	    var createSet = !(Set && new Set([1, 2]).size === 2) ? noop : function(values) {
	      return new Set(values);
	    };
	
	    /**
	     * Creates a function that either curries or invokes `func` with optional
	     * `this` binding and partially applied arguments.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags.
	     *  The bitmask may be composed of the following flags:
	     *     1 - `_.bind`
	     *     2 - `_.bindKey`
	     *     4 - `_.curry` or `_.curryRight` of a bound function
	     *     8 - `_.curry`
	     *    16 - `_.curryRight`
	     *    32 - `_.partial`
	     *    64 - `_.partialRight`
	     *   128 - `_.rearg`
	     *   256 - `_.ary`
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to be partially applied.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
	      var isBindKey = bitmask & BIND_KEY_FLAG;
	      if (!isBindKey && typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var length = partials ? partials.length : 0;
	      if (!length) {
	        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
	        partials = holders = undefined;
	      }
	      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
	      arity = arity === undefined ? arity : toInteger(arity);
	      length -= holders ? holders.length : 0;
	
	      if (bitmask & PARTIAL_RIGHT_FLAG) {
	        var partialsRight = partials,
	            holdersRight = holders;
	
	        partials = holders = undefined;
	      }
	      var data = isBindKey ? undefined : getData(func);
	
	      var newData = [
	        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
	        argPos, ary, arity
	      ];
	
	      if (data) {
	        mergeData(newData, data);
	      }
	      func = newData[0];
	      bitmask = newData[1];
	      thisArg = newData[2];
	      partials = newData[3];
	      holders = newData[4];
	      arity = newData[9] = newData[9] == null
	        ? (isBindKey ? 0 : func.length)
	        : nativeMax(newData[9] - length, 0);
	
	      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {
	        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);
	      }
	      if (!bitmask || bitmask == BIND_FLAG) {
	        var result = createBaseWrapper(func, bitmask, thisArg);
	      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {
	        result = createCurryWrapper(func, bitmask, arity);
	      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {
	        result = createPartialWrapper(func, bitmask, thisArg, partials);
	      } else {
	        result = createHybridWrapper.apply(undefined, newData);
	      }
	      var setter = data ? baseSetData : setData;
	      return setter(result, newData);
	    }
	
	    /**
	     * A specialized version of `baseIsEqualDeep` for arrays with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Array} array The array to compare.
	     * @param {Array} other The other array to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `array` and `other` objects.
	     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	     */
	    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
	      var index = -1,
	          isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	          isUnordered = bitmask & UNORDERED_COMPARE_FLAG,
	          arrLength = array.length,
	          othLength = other.length;
	
	      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(array);
	      if (stacked) {
	        return stacked == other;
	      }
	      var result = true;
	      stack.set(array, other);
	
	      // Ignore non-index properties.
	      while (++index < arrLength) {
	        var arrValue = array[index],
	            othValue = other[index];
	
	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, arrValue, index, other, array, stack)
	            : customizer(arrValue, othValue, index, array, other, stack);
	        }
	        if (compared !== undefined) {
	          if (compared) {
	            continue;
	          }
	          result = false;
	          break;
	        }
	        // Recursively compare arrays (susceptible to call stack limits).
	        if (isUnordered) {
	          if (!arraySome(other, function(othValue) {
	                return arrValue === othValue ||
	                  equalFunc(arrValue, othValue, customizer, bitmask, stack);
	              })) {
	            result = false;
	            break;
	          }
	        } else if (!(
	              arrValue === othValue ||
	                equalFunc(arrValue, othValue, customizer, bitmask, stack)
	            )) {
	          result = false;
	          break;
	        }
	      }
	      stack['delete'](array);
	      return result;
	    }
	
	    /**
	     * A specialized version of `baseIsEqualDeep` for comparing objects of
	     * the same `toStringTag`.
	     *
	     * **Note:** This function only supports comparing values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {string} tag The `toStringTag` of the objects to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
	      switch (tag) {
	        case dataViewTag:
	          if ((object.byteLength != other.byteLength) ||
	              (object.byteOffset != other.byteOffset)) {
	            return false;
	          }
	          object = object.buffer;
	          other = other.buffer;
	
	        case arrayBufferTag:
	          if ((object.byteLength != other.byteLength) ||
	              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	            return false;
	          }
	          return true;
	
	        case boolTag:
	        case dateTag:
	          // Coerce dates and booleans to numbers, dates to milliseconds and
	          // booleans to `1` or `0` treating invalid dates coerced to `NaN` as
	          // not equal.
	          return +object == +other;
	
	        case errorTag:
	          return object.name == other.name && object.message == other.message;
	
	        case numberTag:
	          // Treat `NaN` vs. `NaN` as equal.
	          return (object != +object) ? other != +other : object == +other;
	
	        case regexpTag:
	        case stringTag:
	          // Coerce regexes to strings and treat strings, primitives and objects,
	          // as equal. See https://es5.github.io/#x15.10.6.4 for more details.
	          return object == (other + '');
	
	        case mapTag:
	          var convert = mapToArray;
	
	        case setTag:
	          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
	          convert || (convert = setToArray);
	
	          if (object.size != other.size && !isPartial) {
	            return false;
	          }
	          // Assume cyclic values are equal.
	          var stacked = stack.get(object);
	          if (stacked) {
	            return stacked == other;
	          }
	          bitmask |= UNORDERED_COMPARE_FLAG;
	          stack.set(object, other);
	
	          // Recursively compare objects (susceptible to call stack limits).
	          return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);
	
	        case symbolTag:
	          if (symbolValueOf) {
	            return symbolValueOf.call(object) == symbolValueOf.call(other);
	          }
	      }
	      return false;
	    }
	
	    /**
	     * A specialized version of `baseIsEqualDeep` for objects with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
	      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	          objProps = keys(object),
	          objLength = objProps.length,
	          othProps = keys(other),
	          othLength = othProps.length;
	
	      if (objLength != othLength && !isPartial) {
	        return false;
	      }
	      var index = objLength;
	      while (index--) {
	        var key = objProps[index];
	        if (!(isPartial ? key in other : baseHas(other, key))) {
	          return false;
	        }
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      var result = true;
	      stack.set(object, other);
	
	      var skipCtor = isPartial;
	      while (++index < objLength) {
	        key = objProps[index];
	        var objValue = object[key],
	            othValue = other[key];
	
	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, objValue, key, other, object, stack)
	            : customizer(objValue, othValue, key, object, other, stack);
	        }
	        // Recursively compare objects (susceptible to call stack limits).
	        if (!(compared === undefined
	              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
	              : compared
	            )) {
	          result = false;
	          break;
	        }
	        skipCtor || (skipCtor = key == 'constructor');
	      }
	      if (result && !skipCtor) {
	        var objCtor = object.constructor,
	            othCtor = other.constructor;
	
	        // Non `Object` object instances with different constructors are not equal.
	        if (objCtor != othCtor &&
	            ('constructor' in object && 'constructor' in other) &&
	            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	          result = false;
	        }
	      }
	      stack['delete'](object);
	      return result;
	    }
	
	    /**
	     * Creates an array of own enumerable property names and symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeys(object) {
	      return baseGetAllKeys(object, keys, getSymbols);
	    }
	
	    /**
	     * Creates an array of own and inherited enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeysIn(object) {
	      return baseGetAllKeys(object, keysIn, getSymbolsIn);
	    }
	
	    /**
	     * Gets metadata for `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {*} Returns the metadata for `func`.
	     */
	    var getData = !metaMap ? noop : function(func) {
	      return metaMap.get(func);
	    };
	
	    /**
	     * Gets the name of `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {string} Returns the function name.
	     */
	    function getFuncName(func) {
	      var result = (func.name + ''),
	          array = realNames[result],
	          length = hasOwnProperty.call(realNames, result) ? array.length : 0;
	
	      while (length--) {
	        var data = array[length],
	            otherFunc = data.func;
	        if (otherFunc == null || otherFunc == func) {
	          return data.name;
	        }
	      }
	      return result;
	    }
	
	    /**
	     * Gets the appropriate "iteratee" function. If the `_.iteratee` method is
	     * customized this function returns the custom method, otherwise it returns
	     * `baseIteratee`. If arguments are provided the chosen function is invoked
	     * with them and its result is returned.
	     *
	     * @private
	     * @param {*} [value] The value to convert to an iteratee.
	     * @param {number} [arity] The arity of the created iteratee.
	     * @returns {Function} Returns the chosen function or its result.
	     */
	    function getIteratee() {
	      var result = lodash.iteratee || iteratee;
	      result = result === iteratee ? baseIteratee : result;
	      return arguments.length ? result(arguments[0], arguments[1]) : result;
	    }
	
	    /**
	     * Gets the "length" property value of `object`.
	     *
	     * **Note:** This function is used to avoid a
	     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects
	     * Safari on at least iOS 8.1-8.3 ARM64.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {*} Returns the "length" value.
	     */
	    var getLength = baseProperty('length');
	
	    /**
	     * Gets the property names, values, and compare flags of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the match data of `object`.
	     */
	    function getMatchData(object) {
	      var result = toPairs(object),
	          length = result.length;
	
	      while (length--) {
	        result[length][2] = isStrictComparable(result[length][1]);
	      }
	      return result;
	    }
	
	    /**
	     * Gets the native function at `key` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {string} key The key of the method to get.
	     * @returns {*} Returns the function if it's native, else `undefined`.
	     */
	    function getNative(object, key) {
	      var value = object[key];
	      return isNative(value) ? value : undefined;
	    }
	
	    /**
	     * Gets the argument placeholder value for `func`.
	     *
	     * @private
	     * @param {Function} func The function to inspect.
	     * @returns {*} Returns the placeholder value.
	     */
	    function getPlaceholder(func) {
	      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
	      return object.placeholder;
	    }
	
	    /**
	     * Gets the `[[Prototype]]` of `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {null|Object} Returns the `[[Prototype]]`.
	     */
	    function getPrototype(value) {
	      return nativeGetPrototype(Object(value));
	    }
	
	    /**
	     * Creates an array of the own enumerable symbol properties of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    function getSymbols(object) {
	      // Coerce `object` to an object to avoid non-object errors in V8.
	      // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.
	      return getOwnPropertySymbols(Object(object));
	    }
	
	    // Fallback for IE < 11.
	    if (!getOwnPropertySymbols) {
	      getSymbols = function() {
	        return [];
	      };
	    }
	
	    /**
	     * Creates an array of the own and inherited enumerable symbol properties
	     * of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    var getSymbolsIn = !getOwnPropertySymbols ? getSymbols : function(object) {
	      var result = [];
	      while (object) {
	        arrayPush(result, getSymbols(object));
	        object = getPrototype(object);
	      }
	      return result;
	    };
	
	    /**
	     * Gets the `toStringTag` of `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */
	    function getTag(value) {
	      return objectToString.call(value);
	    }
	
	    // Fallback for data views, maps, sets, and weak maps in IE 11,
	    // for data views in Edge, and promises in Node.js.
	    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	        (Map && getTag(new Map) != mapTag) ||
	        (Promise && getTag(Promise.resolve()) != promiseTag) ||
	        (Set && getTag(new Set) != setTag) ||
	        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	      getTag = function(value) {
	        var result = objectToString.call(value),
	            Ctor = result == objectTag ? value.constructor : null,
	            ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';
	
	        if (ctorString) {
	          switch (ctorString) {
	            case dataViewCtorString: return dataViewTag;
	            case mapCtorString: return mapTag;
	            case promiseCtorString: return promiseTag;
	            case setCtorString: return setTag;
	            case weakMapCtorString: return weakMapTag;
	          }
	        }
	        return result;
	      };
	    }
	
	    /**
	     * Gets the view, applying any `transforms` to the `start` and `end` positions.
	     *
	     * @private
	     * @param {number} start The start of the view.
	     * @param {number} end The end of the view.
	     * @param {Array} transforms The transformations to apply to the view.
	     * @returns {Object} Returns an object containing the `start` and `end`
	     *  positions of the view.
	     */
	    function getView(start, end, transforms) {
	      var index = -1,
	          length = transforms.length;
	
	      while (++index < length) {
	        var data = transforms[index],
	            size = data.size;
	
	        switch (data.type) {
	          case 'drop':      start += size; break;
	          case 'dropRight': end -= size; break;
	          case 'take':      end = nativeMin(end, start + size); break;
	          case 'takeRight': start = nativeMax(start, end - size); break;
	        }
	      }
	      return { 'start': start, 'end': end };
	    }
	
	    /**
	     * Checks if `path` exists on `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @param {Function} hasFunc The function to check properties.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     */
	    function hasPath(object, path, hasFunc) {
	      if (object == null) {
	        return false;
	      }
	      var result = hasFunc(object, path);
	      if (!result && !isKey(path)) {
	        path = baseCastPath(path);
	
	        var index = -1,
	            length = path.length;
	
	        while (object != null && ++index < length) {
	          var key = path[index];
	          if (!(result = hasFunc(object, key))) {
	            break;
	          }
	          object = object[key];
	        }
	      }
	      var length = object ? object.length : undefined;
	      return result || (
	        !!length && isLength(length) && isIndex(path, length) &&
	        (isArray(object) || isString(object) || isArguments(object))
	      );
	    }
	
	    /**
	     * Initializes an array clone.
	     *
	     * @private
	     * @param {Array} array The array to clone.
	     * @returns {Array} Returns the initialized clone.
	     */
	    function initCloneArray(array) {
	      var length = array.length,
	          result = array.constructor(length);
	
	      // Add properties assigned by `RegExp#exec`.
	      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	        result.index = array.index;
	        result.input = array.input;
	      }
	      return result;
	    }
	
	    /**
	     * Initializes an object clone.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneObject(object) {
	      return (typeof object.constructor == 'function' && !isPrototype(object))
	        ? baseCreate(getPrototype(object))
	        : {};
	    }
	
	    /**
	     * Initializes an object clone based on its `toStringTag`.
	     *
	     * **Note:** This function only supports cloning values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @param {string} tag The `toStringTag` of the object to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneByTag(object, tag, cloneFunc, isDeep) {
	      var Ctor = object.constructor;
	      switch (tag) {
	        case arrayBufferTag:
	          return cloneArrayBuffer(object);
	
	        case boolTag:
	        case dateTag:
	          return new Ctor(+object);
	
	        case dataViewTag:
	          return cloneDataView(object, isDeep);
	
	        case float32Tag: case float64Tag:
	        case int8Tag: case int16Tag: case int32Tag:
	        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	          return cloneTypedArray(object, isDeep);
	
	        case mapTag:
	          return cloneMap(object, isDeep, cloneFunc);
	
	        case numberTag:
	        case stringTag:
	          return new Ctor(object);
	
	        case regexpTag:
	          return cloneRegExp(object);
	
	        case setTag:
	          return cloneSet(object, isDeep, cloneFunc);
	
	        case symbolTag:
	          return cloneSymbol(object);
	      }
	    }
	
	    /**
	     * Creates an array of index keys for `object` values of arrays,
	     * `arguments` objects, and strings, otherwise `null` is returned.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array|null} Returns index keys, else `null`.
	     */
	    function indexKeys(object) {
	      var length = object ? object.length : undefined;
	      if (isLength(length) &&
	          (isArray(object) || isString(object) || isArguments(object))) {
	        return baseTimes(length, String);
	      }
	      return null;
	    }
	
	    /**
	     * Checks if the given arguments are from an iteratee call.
	     *
	     * @private
	     * @param {*} value The potential iteratee value argument.
	     * @param {*} index The potential iteratee index or key argument.
	     * @param {*} object The potential iteratee object argument.
	     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	     *  else `false`.
	     */
	    function isIterateeCall(value, index, object) {
	      if (!isObject(object)) {
	        return false;
	      }
	      var type = typeof index;
	      if (type == 'number'
	            ? (isArrayLike(object) && isIndex(index, object.length))
	            : (type == 'string' && index in object)
	          ) {
	        return eq(object[index], value);
	      }
	      return false;
	    }
	
	    /**
	     * Checks if `value` is a property name and not a property path.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	     */
	    function isKey(value, object) {
	      var type = typeof value;
	      if (type == 'number' || type == 'symbol') {
	        return true;
	      }
	      return !isArray(value) &&
	        (isSymbol(value) || reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	          (object != null && value in Object(object)));
	    }
	
	    /**
	     * Checks if `value` is suitable for use as unique object key.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	     */
	    function isKeyable(value) {
	      var type = typeof value;
	      return type == 'number' || type == 'boolean' ||
	        (type == 'string' && value != '__proto__') || value == null;
	    }
	
	    /**
	     * Checks if `func` has a lazy counterpart.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
	     *  else `false`.
	     */
	    function isLaziable(func) {
	      var funcName = getFuncName(func),
	          other = lodash[funcName];
	
	      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
	        return false;
	      }
	      if (func === other) {
	        return true;
	      }
	      var data = getData(other);
	      return !!data && func === data[0];
	    }
	
	    /**
	     * Checks if `value` is likely a prototype object.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	     */
	    function isPrototype(value) {
	      var Ctor = value && value.constructor,
	          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	      return value === proto;
	    }
	
	    /**
	     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` if suitable for strict
	     *  equality comparisons, else `false`.
	     */
	    function isStrictComparable(value) {
	      return value === value && !isObject(value);
	    }
	
	    /**
	     * Merges the function metadata of `source` into `data`.
	     *
	     * Merging metadata reduces the number of wrappers used to invoke a function.
	     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	     * may be applied regardless of execution order. Methods like `_.ary` and
	     * `_.rearg` modify function arguments, making the order in which they are
	     * executed important, preventing the merging of metadata. However, we make
	     * an exception for a safe combined case where curried functions have `_.ary`
	     * and or `_.rearg` applied.
	     *
	     * @private
	     * @param {Array} data The destination metadata.
	     * @param {Array} source The source metadata.
	     * @returns {Array} Returns `data`.
	     */
	    function mergeData(data, source) {
	      var bitmask = data[1],
	          srcBitmask = source[1],
	          newBitmask = bitmask | srcBitmask,
	          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);
	
	      var isCombo =
	        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||
	        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||
	        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));
	
	      // Exit early if metadata can't be merged.
	      if (!(isCommon || isCombo)) {
	        return data;
	      }
	      // Use source `thisArg` if available.
	      if (srcBitmask & BIND_FLAG) {
	        data[2] = source[2];
	        // Set when currying a bound function.
	        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;
	      }
	      // Compose partial arguments.
	      var value = source[3];
	      if (value) {
	        var partials = data[3];
	        data[3] = partials ? composeArgs(partials, value, source[4]) : copyArray(value);
	        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : copyArray(source[4]);
	      }
	      // Compose partial right arguments.
	      value = source[5];
	      if (value) {
	        partials = data[5];
	        data[5] = partials ? composeArgsRight(partials, value, source[6]) : copyArray(value);
	        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : copyArray(source[6]);
	      }
	      // Use source `argPos` if available.
	      value = source[7];
	      if (value) {
	        data[7] = copyArray(value);
	      }
	      // Use source `ary` if it's smaller.
	      if (srcBitmask & ARY_FLAG) {
	        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
	      }
	      // Use source `arity` if one is not provided.
	      if (data[9] == null) {
	        data[9] = source[9];
	      }
	      // Use source `func` and merge bitmasks.
	      data[0] = source[0];
	      data[1] = newBitmask;
	
	      return data;
	    }
	
	    /**
	     * Used by `_.defaultsDeep` to customize its `_.merge` use.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to merge.
	     * @param {Object} object The parent object of `objValue`.
	     * @param {Object} source The parent object of `srcValue`.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     * @returns {*} Returns the value to assign.
	     */
	    function mergeDefaults(objValue, srcValue, key, object, source, stack) {
	      if (isObject(objValue) && isObject(srcValue)) {
	        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack.set(srcValue, objValue));
	      }
	      return objValue;
	    }
	
	    /**
	     * Gets the parent value at `path` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array} path The path to get the parent value of.
	     * @returns {*} Returns the parent value.
	     */
	    function parent(object, path) {
	      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
	    }
	
	    /**
	     * Reorder `array` according to the specified indexes where the element at
	     * the first index is assigned as the first element, the element at
	     * the second index is assigned as the second element, and so on.
	     *
	     * @private
	     * @param {Array} array The array to reorder.
	     * @param {Array} indexes The arranged array indexes.
	     * @returns {Array} Returns `array`.
	     */
	    function reorder(array, indexes) {
	      var arrLength = array.length,
	          length = nativeMin(indexes.length, arrLength),
	          oldArray = copyArray(array);
	
	      while (length--) {
	        var index = indexes[length];
	        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
	      }
	      return array;
	    }
	
	    /**
	     * Sets metadata for `func`.
	     *
	     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	     * period of time, it will trip its breaker and transition to an identity
	     * function to avoid garbage collection pauses in V8. See
	     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
	     * for more details.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var setData = (function() {
	      var count = 0,
	          lastCalled = 0;
	
	      return function(key, value) {
	        var stamp = now(),
	            remaining = HOT_SPAN - (stamp - lastCalled);
	
	        lastCalled = stamp;
	        if (remaining > 0) {
	          if (++count >= HOT_COUNT) {
	            return key;
	          }
	        } else {
	          count = 0;
	        }
	        return baseSetData(key, value);
	      };
	    }());
	
	    /**
	     * Converts `string` to a property path array.
	     *
	     * @private
	     * @param {string} string The string to convert.
	     * @returns {Array} Returns the property path array.
	     */
	    var stringToPath = memoize(function(string) {
	      var result = [];
	      toString(string).replace(rePropName, function(match, number, quote, string) {
	        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	      });
	      return result;
	    });
	
	    /**
	     * Creates a clone of `wrapper`.
	     *
	     * @private
	     * @param {Object} wrapper The wrapper to clone.
	     * @returns {Object} Returns the cloned wrapper.
	     */
	    function wrapperClone(wrapper) {
	      if (wrapper instanceof LazyWrapper) {
	        return wrapper.clone();
	      }
	      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
	      result.__actions__ = copyArray(wrapper.__actions__);
	      result.__index__  = wrapper.__index__;
	      result.__values__ = wrapper.__values__;
	      return result;
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates an array of elements split into groups the length of `size`.
	     * If `array` can't be split evenly, the final chunk will be the remaining
	     * elements.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to process.
	     * @param {number} [size=0] The length of each chunk.
	     * @returns {Array} Returns the new array containing chunks.
	     * @example
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 2);
	     * // => [['a', 'b'], ['c', 'd']]
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 3);
	     * // => [['a', 'b', 'c'], ['d']]
	     */
	    function chunk(array, size) {
	      size = nativeMax(toInteger(size), 0);
	
	      var length = array ? array.length : 0;
	      if (!length || size < 1) {
	        return [];
	      }
	      var index = 0,
	          resIndex = 0,
	          result = Array(nativeCeil(length / size));
	
	      while (index < length) {
	        result[resIndex++] = baseSlice(array, index, (index += size));
	      }
	      return result;
	    }
	
	    /**
	     * Creates an array with all falsey values removed. The values `false`, `null`,
	     * `0`, `""`, `undefined`, and `NaN` are falsey.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to compact.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.compact([0, 1, false, 2, '', 3]);
	     * // => [1, 2, 3]
	     */
	    function compact(array) {
	      var index = -1,
	          length = array ? array.length : 0,
	          resIndex = 0,
	          result = [];
	
	      while (++index < length) {
	        var value = array[index];
	        if (value) {
	          result[resIndex++] = value;
	        }
	      }
	      return result;
	    }
	
	    /**
	     * Creates a new array concatenating `array` with any additional arrays
	     * and/or values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to concatenate.
	     * @param {...*} [values] The values to concatenate.
	     * @returns {Array} Returns the new concatenated array.
	     * @example
	     *
	     * var array = [1];
	     * var other = _.concat(array, 2, [3], [[4]]);
	     *
	     * console.log(other);
	     * // => [1, 2, 3, [4]]
	     *
	     * console.log(array);
	     * // => [1]
	     */
	    function concat() {
	      var length = arguments.length,
	          array = castArray(arguments[0]);
	
	      if (length < 2) {
	        return length ? copyArray(array) : [];
	      }
	      var args = Array(length - 1);
	      while (length--) {
	        args[length - 1] = arguments[length];
	      }
	      return arrayConcat(array, baseFlatten(args, 1));
	    }
	
	    /**
	     * Creates an array of unique `array` values not included in the other given
	     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons. The order of result values is determined by the
	     * order they occur in the first array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.difference([3, 2, 1], [4, 2]);
	     * // => [3, 1]
	     */
	    var difference = rest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, true))
	        : [];
	    });
	
	    /**
	     * This method is like `_.difference` except that it accepts `iteratee` which
	     * is invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. Result values are chosen from the first array.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);
	     * // => [3.1, 1.3]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var differenceBy = rest(function(array, values) {
	      var iteratee = last(values);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, true), getIteratee(iteratee))
	        : [];
	    });
	
	    /**
	     * This method is like `_.difference` except that it accepts `comparator`
	     * which is invoked to compare elements of `array` to `values`. Result values
	     * are chosen from the first array. The comparator is invoked with two arguments:
	     * (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     *
	     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }]
	     */
	    var differenceWith = rest(function(array, values) {
	      var comparator = last(values);
	      if (isArrayLikeObject(comparator)) {
	        comparator = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, true), undefined, comparator)
	        : [];
	    });
	
	    /**
	     * Creates a slice of `array` with `n` elements dropped from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.drop([1, 2, 3]);
	     * // => [2, 3]
	     *
	     * _.drop([1, 2, 3], 2);
	     * // => [3]
	     *
	     * _.drop([1, 2, 3], 5);
	     * // => []
	     *
	     * _.drop([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function drop(array, n, guard) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }
	
	    /**
	     * Creates a slice of `array` with `n` elements dropped from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.dropRight([1, 2, 3]);
	     * // => [1, 2]
	     *
	     * _.dropRight([1, 2, 3], 2);
	     * // => [1]
	     *
	     * _.dropRight([1, 2, 3], 5);
	     * // => []
	     *
	     * _.dropRight([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function dropRight(array, n, guard) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }
	
	    /**
	     * Creates a slice of `array` excluding elements dropped from the end.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.dropRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropRightWhile(users, ['active', false]);
	     * // => objects for ['barney']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropRightWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true, true)
	        : [];
	    }
	
	    /**
	     * Creates a slice of `array` excluding elements dropped from the beginning.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.dropWhile(users, function(o) { return !o.active; });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropWhile(users, ['active', false]);
	     * // => objects for ['pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true)
	        : [];
	    }
	
	    /**
	     * Fills elements of `array` with `value` from `start` up to, but not
	     * including, `end`.
	     *
	     * **Note:** This method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Array
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.fill(array, 'a');
	     * console.log(array);
	     * // => ['a', 'a', 'a']
	     *
	     * _.fill(Array(3), 2);
	     * // => [2, 2, 2]
	     *
	     * _.fill([4, 6, 8, 10], '*', 1, 3);
	     * // => [4, '*', '*', 10]
	     */
	    function fill(array, value, start, end) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
	        start = 0;
	        end = length;
	      }
	      return baseFill(array, value, start, end);
	    }
	
	    /**
	     * This method is like `_.find` except that it returns the index of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.findIndex(users, function(o) { return o.user == 'barney'; });
	     * // => 0
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findIndex(users, { 'user': 'fred', 'active': false });
	     * // => 1
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findIndex(users, ['active', false]);
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findIndex(users, 'active');
	     * // => 2
	     */
	    function findIndex(array, predicate) {
	      return (array && array.length)
	        ? baseFindIndex(array, getIteratee(predicate, 3))
	        : -1;
	    }
	
	    /**
	     * This method is like `_.findIndex` except that it iterates over elements
	     * of `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
	     * // => 2
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
	     * // => 0
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastIndex(users, ['active', false]);
	     * // => 2
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastIndex(users, 'active');
	     * // => 0
	     */
	    function findLastIndex(array, predicate) {
	      return (array && array.length)
	        ? baseFindIndex(array, getIteratee(predicate, 3), true)
	        : -1;
	    }
	
	    /**
	     * Flattens `array` a single level deep.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flatten([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, [3, [4]], 5]
	     */
	    function flatten(array) {
	      var length = array ? array.length : 0;
	      return length ? baseFlatten(array, 1) : [];
	    }
	
	    /**
	     * Recursively flattens `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flattenDeep([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, 3, 4, 5]
	     */
	    function flattenDeep(array) {
	      var length = array ? array.length : 0;
	      return length ? baseFlatten(array, INFINITY) : [];
	    }
	
	    /**
	     * Recursively flatten `array` up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * var array = [1, [2, [3, [4]], 5]];
	     *
	     * _.flattenDepth(array, 1);
	     * // => [1, 2, [3, [4]], 5]
	     *
	     * _.flattenDepth(array, 2);
	     * // => [1, 2, 3, [4], 5]
	     */
	    function flattenDepth(array, depth) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(array, depth);
	    }
	
	    /**
	     * The inverse of `_.toPairs`; this method returns an object composed
	     * from key-value `pairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} pairs The key-value pairs.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.fromPairs([['fred', 30], ['barney', 40]]);
	     * // => { 'fred': 30, 'barney': 40 }
	     */
	    function fromPairs(pairs) {
	      var index = -1,
	          length = pairs ? pairs.length : 0,
	          result = {};
	
	      while (++index < length) {
	        var pair = pairs[index];
	        result[pair[0]] = pair[1];
	      }
	      return result;
	    }
	
	    /**
	     * Gets the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias first
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the first element of `array`.
	     * @example
	     *
	     * _.head([1, 2, 3]);
	     * // => 1
	     *
	     * _.head([]);
	     * // => undefined
	     */
	    function head(array) {
	      return array ? array[0] : undefined;
	    }
	
	    /**
	     * Gets the index at which the first occurrence of `value` is found in `array`
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons. If `fromIndex` is negative, it's used as the offset
	     * from the end of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.indexOf([1, 2, 1, 2], 2);
	     * // => 1
	     *
	     * // Search from the `fromIndex`.
	     * _.indexOf([1, 2, 1, 2], 2, 2);
	     * // => 3
	     */
	    function indexOf(array, value, fromIndex) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return -1;
	      }
	      fromIndex = toInteger(fromIndex);
	      if (fromIndex < 0) {
	        fromIndex = nativeMax(length + fromIndex, 0);
	      }
	      return baseIndexOf(array, value, fromIndex);
	    }
	
	    /**
	     * Gets all but the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.initial([1, 2, 3]);
	     * // => [1, 2]
	     */
	    function initial(array) {
	      return dropRight(array, 1);
	    }
	
	    /**
	     * Creates an array of unique values that are included in all given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons. The order of result values is determined by the
	     * order they occur in the first array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersection([2, 1], [4, 2], [1, 2]);
	     * // => [2]
	     */
	    var intersection = rest(function(arrays) {
	      var mapped = arrayMap(arrays, baseCastArrayLikeObject);
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped)
	        : [];
	    });
	
	    /**
	     * This method is like `_.intersection` except that it accepts `iteratee`
	     * which is invoked for each element of each `arrays` to generate the criterion
	     * by which they're compared. Result values are chosen from the first array.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersectionBy([2.1, 1.2], [4.3, 2.4], Math.floor);
	     * // => [2.1]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }]
	     */
	    var intersectionBy = rest(function(arrays) {
	      var iteratee = last(arrays),
	          mapped = arrayMap(arrays, baseCastArrayLikeObject);
	
	      if (iteratee === last(mapped)) {
	        iteratee = undefined;
	      } else {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, getIteratee(iteratee))
	        : [];
	    });
	
	    /**
	     * This method is like `_.intersection` except that it accepts `comparator`
	     * which is invoked to compare elements of `arrays`. Result values are chosen
	     * from the first array. The comparator is invoked with two arguments:
	     * (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.intersectionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }]
	     */
	    var intersectionWith = rest(function(arrays) {
	      var comparator = last(arrays),
	          mapped = arrayMap(arrays, baseCastArrayLikeObject);
	
	      if (comparator === last(mapped)) {
	        comparator = undefined;
	      } else {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, undefined, comparator)
	        : [];
	    });
	
	    /**
	     * Converts all elements in `array` into a string separated by `separator`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to convert.
	     * @param {string} [separator=','] The element separator.
	     * @returns {string} Returns the joined string.
	     * @example
	     *
	     * _.join(['a', 'b', 'c'], '~');
	     * // => 'a~b~c'
	     */
	    function join(array, separator) {
	      return array ? nativeJoin.call(array, separator) : '';
	    }
	
	    /**
	     * Gets the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the last element of `array`.
	     * @example
	     *
	     * _.last([1, 2, 3]);
	     * // => 3
	     */
	    function last(array) {
	      var length = array ? array.length : 0;
	      return length ? array[length - 1] : undefined;
	    }
	
	    /**
	     * This method is like `_.indexOf` except that it iterates over elements of
	     * `array` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.lastIndexOf([1, 2, 1, 2], 2);
	     * // => 3
	     *
	     * // Search from the `fromIndex`.
	     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
	     * // => 1
	     */
	    function lastIndexOf(array, value, fromIndex) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return -1;
	      }
	      var index = length;
	      if (fromIndex !== undefined) {
	        index = toInteger(fromIndex);
	        index = (
	          index < 0
	            ? nativeMax(length + index, 0)
	            : nativeMin(index, length - 1)
	        ) + 1;
	      }
	      if (value !== value) {
	        return indexOfNaN(array, index, true);
	      }
	      while (index--) {
	        if (array[index] === value) {
	          return index;
	        }
	      }
	      return -1;
	    }
	
	    /**
	     * Removes all given values from `array` using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
	     * to remove elements from an array by predicate.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...*} [values] The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3, 1, 2, 3];
	     *
	     * _.pull(array, 2, 3);
	     * console.log(array);
	     * // => [1, 1]
	     */
	    var pull = rest(pullAll);
	
	    /**
	     * This method is like `_.pull` except that it accepts an array of values to remove.
	     *
	     * **Note:** Unlike `_.difference`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3, 1, 2, 3];
	     *
	     * _.pullAll(array, [2, 3]);
	     * console.log(array);
	     * // => [1, 1]
	     */
	    function pullAll(array, values) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values)
	        : array;
	    }
	
	    /**
	     * This method is like `_.pullAll` except that it accepts `iteratee` which is
	     * invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The iteratee is invoked with one argument: (value).
	     *
	     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
	     *
	     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
	     * console.log(array);
	     * // => [{ 'x': 2 }]
	     */
	    function pullAllBy(array, values, iteratee) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, getIteratee(iteratee))
	        : array;
	    }
	
	    /**
	     * This method is like `_.pullAll` except that it accepts `comparator` which
	     * is invoked to compare elements of `array` to `values`. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
	     *
	     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
	     * console.log(array);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
	     */
	    function pullAllWith(array, values, comparator) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, undefined, comparator)
	        : array;
	    }
	
	    /**
	     * Removes elements from `array` corresponding to `indexes` and returns an
	     * array of removed elements.
	     *
	     * **Note:** Unlike `_.at`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...(number|number[])} [indexes] The indexes of elements to remove,
	     *  specified individually or in arrays.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [5, 10, 15, 20];
	     * var evens = _.pullAt(array, 1, 3);
	     *
	     * console.log(array);
	     * // => [5, 15]
	     *
	     * console.log(evens);
	     * // => [10, 20]
	     */
	    var pullAt = rest(function(array, indexes) {
	      indexes = arrayMap(baseFlatten(indexes, 1), String);
	
	      var result = baseAt(array, indexes);
	      basePullAt(array, indexes.sort(compareAscending));
	      return result;
	    });
	
	    /**
	     * Removes all elements from `array` that `predicate` returns truthy for
	     * and returns an array of the removed elements. The predicate is invoked
	     * with three arguments: (value, index, array).
	     *
	     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
	     * to pull elements from an array by value.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [1, 2, 3, 4];
	     * var evens = _.remove(array, function(n) {
	     *   return n % 2 == 0;
	     * });
	     *
	     * console.log(array);
	     * // => [1, 3]
	     *
	     * console.log(evens);
	     * // => [2, 4]
	     */
	    function remove(array, predicate) {
	      var result = [];
	      if (!(array && array.length)) {
	        return result;
	      }
	      var index = -1,
	          indexes = [],
	          length = array.length;
	
	      predicate = getIteratee(predicate, 3);
	      while (++index < length) {
	        var value = array[index];
	        if (predicate(value, index, array)) {
	          result.push(value);
	          indexes.push(index);
	        }
	      }
	      basePullAt(array, indexes);
	      return result;
	    }
	
	    /**
	     * Reverses `array` so that the first element becomes the last, the second
	     * element becomes the second to last, and so on.
	     *
	     * **Note:** This method mutates `array` and is based on
	     * [`Array#reverse`](https://mdn.io/Array/reverse).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.reverse(array);
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function reverse(array) {
	      return array ? nativeReverse.call(array) : array;
	    }
	
	    /**
	     * Creates a slice of `array` from `start` up to, but not including, `end`.
	     *
	     * **Note:** This method is used instead of
	     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
	     * returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function slice(array, start, end) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
	        start = 0;
	        end = length;
	      }
	      else {
	        start = start == null ? 0 : toInteger(start);
	        end = end === undefined ? length : toInteger(end);
	      }
	      return baseSlice(array, start, end);
	    }
	
	    /**
	     * Uses a binary search to determine the lowest index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedIndex([30, 50], 40);
	     * // => 1
	     *
	     * _.sortedIndex([4, 5], 4);
	     * // => 0
	     */
	    function sortedIndex(array, value) {
	      return baseSortedIndex(array, value);
	    }
	
	    /**
	     * This method is like `_.sortedIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var dict = { 'thirty': 30, 'forty': 40, 'fifty': 50 };
	     *
	     * _.sortedIndexBy(['thirty', 'fifty'], 'forty', _.propertyOf(dict));
	     * // => 1
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');
	     * // => 0
	     */
	    function sortedIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee));
	    }
	
	    /**
	     * This method is like `_.indexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedIndexOf([1, 1, 2, 2], 2);
	     * // => 2
	     */
	    function sortedIndexOf(array, value) {
	      var length = array ? array.length : 0;
	      if (length) {
	        var index = baseSortedIndex(array, value);
	        if (index < length && eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }
	
	    /**
	     * This method is like `_.sortedIndex` except that it returns the highest
	     * index at which `value` should be inserted into `array` in order to
	     * maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedLastIndex([4, 5], 4);
	     * // => 1
	     */
	    function sortedLastIndex(array, value) {
	      return baseSortedIndex(array, value, true);
	    }
	
	    /**
	     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedLastIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');
	     * // => 1
	     */
	    function sortedLastIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);
	    }
	
	    /**
	     * This method is like `_.lastIndexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedLastIndexOf([1, 1, 2, 2], 2);
	     * // => 3
	     */
	    function sortedLastIndexOf(array, value) {
	      var length = array ? array.length : 0;
	      if (length) {
	        var index = baseSortedIndex(array, value, true) - 1;
	        if (eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }
	
	    /**
	     * This method is like `_.uniq` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniq([1, 1, 2]);
	     * // => [1, 2]
	     */
	    function sortedUniq(array) {
	      return (array && array.length)
	        ? baseSortedUniq(array)
	        : [];
	    }
	
	    /**
	     * This method is like `_.uniqBy` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
	     * // => [1.1, 2.3]
	     */
	    function sortedUniqBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSortedUniqBy(array, getIteratee(iteratee))
	        : [];
	    }
	
	    /**
	     * Gets all but the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.tail([1, 2, 3]);
	     * // => [2, 3]
	     */
	    function tail(array) {
	      return drop(array, 1);
	    }
	
	    /**
	     * Creates a slice of `array` with `n` elements taken from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.take([1, 2, 3]);
	     * // => [1]
	     *
	     * _.take([1, 2, 3], 2);
	     * // => [1, 2]
	     *
	     * _.take([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.take([1, 2, 3], 0);
	     * // => []
	     */
	    function take(array, n, guard) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }
	
	    /**
	     * Creates a slice of `array` with `n` elements taken from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.takeRight([1, 2, 3]);
	     * // => [3]
	     *
	     * _.takeRight([1, 2, 3], 2);
	     * // => [2, 3]
	     *
	     * _.takeRight([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.takeRight([1, 2, 3], 0);
	     * // => []
	     */
	    function takeRight(array, n, guard) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }
	
	    /**
	     * Creates a slice of `array` with elements taken from the end. Elements are
	     * taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.takeRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeRightWhile(users, ['active', false]);
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeRightWhile(users, 'active');
	     * // => []
	     */
	    function takeRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), false, true)
	        : [];
	    }
	
	    /**
	     * Creates a slice of `array` with elements taken from the beginning. Elements
	     * are taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false},
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.takeWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeWhile(users, ['active', false]);
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeWhile(users, 'active');
	     * // => []
	     */
	    function takeWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3))
	        : [];
	    }
	
	    /**
	     * Creates an array of unique values, in order, from all given arrays using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.union([2, 1], [4, 2], [1, 2]);
	     * // => [2, 1, 4]
	     */
	    var union = rest(function(arrays) {
	      return baseUniq(baseFlatten(arrays, 1, true));
	    });
	
	    /**
	     * This method is like `_.union` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which uniqueness is computed. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.unionBy([2.1, 1.2], [4.3, 2.4], Math.floor);
	     * // => [2.1, 1.2, 4.3]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    var unionBy = rest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseUniq(baseFlatten(arrays, 1, true), getIteratee(iteratee));
	    });
	
	    /**
	     * This method is like `_.union` except that it accepts `comparator` which
	     * is invoked to compare elements of `arrays`. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.unionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var unionWith = rest(function(arrays) {
	      var comparator = last(arrays);
	      if (isArrayLikeObject(comparator)) {
	        comparator = undefined;
	      }
	      return baseUniq(baseFlatten(arrays, 1, true), undefined, comparator);
	    });
	
	    /**
	     * Creates a duplicate-free version of an array, using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons, in which only the first occurrence of each
	     * element is kept.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniq([2, 1, 2]);
	     * // => [2, 1]
	     */
	    function uniq(array) {
	      return (array && array.length)
	        ? baseUniq(array)
	        : [];
	    }
	
	    /**
	     * This method is like `_.uniq` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * uniqueness is computed. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    function uniqBy(array, iteratee) {
	      return (array && array.length)
	        ? baseUniq(array, getIteratee(iteratee))
	        : [];
	    }
	
	    /**
	     * This method is like `_.uniq` except that it accepts `comparator` which
	     * is invoked to compare elements of `array`. The comparator is invoked with
	     * two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 },  { 'x': 1, 'y': 2 }];
	     *
	     * _.uniqWith(objects, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
	     */
	    function uniqWith(array, comparator) {
	      return (array && array.length)
	        ? baseUniq(array, undefined, comparator)
	        : [];
	    }
	
	    /**
	     * This method is like `_.zip` except that it accepts an array of grouped
	     * elements and creates an array regrouping the elements to their pre-zip
	     * configuration.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.2.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);
	     * // => [['fred', 30, true], ['barney', 40, false]]
	     *
	     * _.unzip(zipped);
	     * // => [['fred', 'barney'], [30, 40], [true, false]]
	     */
	    function unzip(array) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var length = 0;
	      array = arrayFilter(array, function(group) {
	        if (isArrayLikeObject(group)) {
	          length = nativeMax(group.length, length);
	          return true;
	        }
	      });
	      return baseTimes(length, function(index) {
	        return arrayMap(array, baseProperty(index));
	      });
	    }
	
	    /**
	     * This method is like `_.unzip` except that it accepts `iteratee` to specify
	     * how regrouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  regrouped values.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
	     * // => [[1, 10, 100], [2, 20, 200]]
	     *
	     * _.unzipWith(zipped, _.add);
	     * // => [3, 30, 300]
	     */
	    function unzipWith(array, iteratee) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var result = unzip(array);
	      if (iteratee == null) {
	        return result;
	      }
	      return arrayMap(result, function(group) {
	        return apply(iteratee, undefined, group);
	      });
	    }
	
	    /**
	     * Creates an array excluding all given values using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to filter.
	     * @param {...*} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.without([1, 2, 1, 3], 1, 2);
	     * // => [3]
	     */
	    var without = rest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, values)
	        : [];
	    });
	
	    /**
	     * Creates an array of unique values that is the
	     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
	     * of the given arrays. The order of result values is determined by the order
	     * they occur in the arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of values.
	     * @example
	     *
	     * _.xor([2, 1], [4, 2]);
	     * // => [1, 4]
	     */
	    var xor = rest(function(arrays) {
	      return baseXor(arrayFilter(arrays, isArrayLikeObject));
	    });
	
	    /**
	     * This method is like `_.xor` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which by which they're compared. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of values.
	     * @example
	     *
	     * _.xorBy([2.1, 1.2], [4.3, 2.4], Math.floor);
	     * // => [1.2, 4.3]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var xorBy = rest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));
	    });
	
	    /**
	     * This method is like `_.xor` except that it accepts `comparator` which is
	     * invoked to compare elements of `arrays`. The comparator is invoked with
	     * two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.xorWith(objects, others, _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var xorWith = rest(function(arrays) {
	      var comparator = last(arrays);
	      if (isArrayLikeObject(comparator)) {
	        comparator = undefined;
	      }
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
	    });
	
	    /**
	     * Creates an array of grouped elements, the first of which contains the
	     * first elements of the given arrays, the second of which contains the
	     * second elements of the given arrays, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zip(['fred', 'barney'], [30, 40], [true, false]);
	     * // => [['fred', 30, true], ['barney', 40, false]]
	     */
	    var zip = rest(unzip);
	
	    /**
	     * This method is like `_.fromPairs` except that it accepts two arrays,
	     * one of property identifiers and one of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.4.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObject(['a', 'b'], [1, 2]);
	     * // => { 'a': 1, 'b': 2 }
	     */
	    function zipObject(props, values) {
	      return baseZipObject(props || [], values || [], assignValue);
	    }
	
	    /**
	     * This method is like `_.zipObject` except that it supports property paths.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
	     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
	     */
	    function zipObjectDeep(props, values) {
	      return baseZipObject(props || [], values || [], baseSet);
	    }
	
	    /**
	     * This method is like `_.zip` except that it accepts `iteratee` to specify
	     * how grouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @param {Function} [iteratee=_.identity] The function to combine grouped values.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
	     *   return a + b + c;
	     * });
	     * // => [111, 222]
	     */
	    var zipWith = rest(function(arrays) {
	      var length = arrays.length,
	          iteratee = length > 1 ? arrays[length - 1] : undefined;
	
	      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
	      return unzipWith(arrays, iteratee);
	    });
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
	     * chain sequences enabled. The result of such sequences must be unwrapped
	     * with `_#value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Seq
	     * @param {*} value The value to wrap.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36 },
	     *   { 'user': 'fred',    'age': 40 },
	     *   { 'user': 'pebbles', 'age': 1 }
	     * ];
	     *
	     * var youngest = _
	     *   .chain(users)
	     *   .sortBy('age')
	     *   .map(function(o) {
	     *     return o.user + ' is ' + o.age;
	     *   })
	     *   .head()
	     *   .value();
	     * // => 'pebbles is 1'
	     */
	    function chain(value) {
	      var result = lodash(value);
	      result.__chain__ = true;
	      return result;
	    }
	
	    /**
	     * This method invokes `interceptor` and returns `value`. The interceptor
	     * is invoked with one argument; (value). The purpose of this method is to
	     * "tap into" a method chain sequence in order to modify intermediate results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * _([1, 2, 3])
	     *  .tap(function(array) {
	     *    // Mutate input array.
	     *    array.pop();
	     *  })
	     *  .reverse()
	     *  .value();
	     * // => [2, 1]
	     */
	    function tap(value, interceptor) {
	      interceptor(value);
	      return value;
	    }
	
	    /**
	     * This method is like `_.tap` except that it returns the result of `interceptor`.
	     * The purpose of this method is to "pass thru" values replacing intermediate
	     * results in a method chain sequence.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns the result of `interceptor`.
	     * @example
	     *
	     * _('  abc  ')
	     *  .chain()
	     *  .trim()
	     *  .thru(function(value) {
	     *    return [value];
	     *  })
	     *  .value();
	     * // => ['abc']
	     */
	    function thru(value, interceptor) {
	      return interceptor(value);
	    }
	
	    /**
	     * This method is the wrapper version of `_.at`.
	     *
	     * @name at
	     * @memberOf _
	     * @since 1.0.0
	     * @category Seq
	     * @param {...(string|string[])} [paths] The property paths of elements to pick,
	     *  specified individually or in arrays.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _(object).at(['a[0].b.c', 'a[1]']).value();
	     * // => [3, 4]
	     *
	     * _(['a', 'b', 'c']).at(0, 2).value();
	     * // => ['a', 'c']
	     */
	    var wrapperAt = rest(function(paths) {
	      paths = baseFlatten(paths, 1);
	      var length = paths.length,
	          start = length ? paths[0] : 0,
	          value = this.__wrapped__,
	          interceptor = function(object) { return baseAt(object, paths); };
	
	      if (length > 1 || this.__actions__.length ||
	          !(value instanceof LazyWrapper) || !isIndex(start)) {
	        return this.thru(interceptor);
	      }
	      value = value.slice(start, +start + (length ? 1 : 0));
	      value.__actions__.push({
	        'func': thru,
	        'args': [interceptor],
	        'thisArg': undefined
	      });
	      return new LodashWrapper(value, this.__chain__).thru(function(array) {
	        if (length && !array.length) {
	          array.push(undefined);
	        }
	        return array;
	      });
	    });
	
	    /**
	     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
	     *
	     * @name chain
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * // A sequence without explicit chaining.
	     * _(users).head();
	     * // => { 'user': 'barney', 'age': 36 }
	     *
	     * // A sequence with explicit chaining.
	     * _(users)
	     *   .chain()
	     *   .head()
	     *   .pick('user')
	     *   .value();
	     * // => { 'user': 'barney' }
	     */
	    function wrapperChain() {
	      return chain(this);
	    }
	
	    /**
	     * Executes the chain sequence and returns the wrapped result.
	     *
	     * @name commit
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2];
	     * var wrapped = _(array).push(3);
	     *
	     * console.log(array);
	     * // => [1, 2]
	     *
	     * wrapped = wrapped.commit();
	     * console.log(array);
	     * // => [1, 2, 3]
	     *
	     * wrapped.last();
	     * // => 3
	     *
	     * console.log(array);
	     * // => [1, 2, 3]
	     */
	    function wrapperCommit() {
	      return new LodashWrapper(this.value(), this.__chain__);
	    }
	
	    /**
	     * Gets the next value on a wrapped object following the
	     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
	     *
	     * @name next
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the next iterator value.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 1 }
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 2 }
	     *
	     * wrapped.next();
	     * // => { 'done': true, 'value': undefined }
	     */
	    function wrapperNext() {
	      if (this.__values__ === undefined) {
	        this.__values__ = toArray(this.value());
	      }
	      var done = this.__index__ >= this.__values__.length,
	          value = done ? undefined : this.__values__[this.__index__++];
	
	      return { 'done': done, 'value': value };
	    }
	
	    /**
	     * Enables the wrapper to be iterable.
	     *
	     * @name Symbol.iterator
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the wrapper object.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped[Symbol.iterator]() === wrapped;
	     * // => true
	     *
	     * Array.from(wrapped);
	     * // => [1, 2]
	     */
	    function wrapperToIterator() {
	      return this;
	    }
	
	    /**
	     * Creates a clone of the chain sequence planting `value` as the wrapped value.
	     *
	     * @name plant
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @param {*} value The value to plant.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2]).map(square);
	     * var other = wrapped.plant([3, 4]);
	     *
	     * other.value();
	     * // => [9, 16]
	     *
	     * wrapped.value();
	     * // => [1, 4]
	     */
	    function wrapperPlant(value) {
	      var result,
	          parent = this;
	
	      while (parent instanceof baseLodash) {
	        var clone = wrapperClone(parent);
	        clone.__index__ = 0;
	        clone.__values__ = undefined;
	        if (result) {
	          previous.__wrapped__ = clone;
	        } else {
	          result = clone;
	        }
	        var previous = clone;
	        parent = parent.__wrapped__;
	      }
	      previous.__wrapped__ = value;
	      return result;
	    }
	
	    /**
	     * This method is the wrapper version of `_.reverse`.
	     *
	     * **Note:** This method mutates the wrapped array.
	     *
	     * @name reverse
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _(array).reverse().value()
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function wrapperReverse() {
	      var value = this.__wrapped__;
	      if (value instanceof LazyWrapper) {
	        var wrapped = value;
	        if (this.__actions__.length) {
	          wrapped = new LazyWrapper(this);
	        }
	        wrapped = wrapped.reverse();
	        wrapped.__actions__.push({
	          'func': thru,
	          'args': [reverse],
	          'thisArg': undefined
	        });
	        return new LodashWrapper(wrapped, this.__chain__);
	      }
	      return this.thru(reverse);
	    }
	
	    /**
	     * Executes the chain sequence to resolve the unwrapped value.
	     *
	     * @name value
	     * @memberOf _
	     * @since 0.1.0
	     * @alias toJSON, valueOf
	     * @category Seq
	     * @returns {*} Returns the resolved unwrapped value.
	     * @example
	     *
	     * _([1, 2, 3]).value();
	     * // => [1, 2, 3]
	     */
	    function wrapperValue() {
	      return baseWrapperValue(this.__wrapped__, this.__actions__);
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` through `iteratee`. The corresponding value
	     * of each key is the number of times the key was returned by `iteratee`.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.countBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': 1, '6': 2 }
	     *
	     * _.countBy(['one', 'two', 'three'], 'length');
	     * // => { '3': 2, '5': 1 }
	     */
	    var countBy = createAggregator(function(result, value, key) {
	      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);
	    });
	
	    /**
	     * Checks if `predicate` returns truthy for **all** elements of `collection`.
	     * Iteration is stopped once `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.every([true, 1, null, 'yes'], Boolean);
	     * // => false
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.every(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.every(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.every(users, 'active');
	     * // => false
	     */
	    function every(collection, predicate, guard) {
	      var func = isArray(collection) ? arrayEvery : baseEvery;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }
	
	    /**
	     * Iterates over elements of `collection`, returning an array of all elements
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.filter(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, { 'age': 36, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.filter(users, 'active');
	     * // => objects for ['barney']
	     */
	    function filter(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      return func(collection, getIteratee(predicate, 3));
	    }
	
	    /**
	     * Iterates over elements of `collection`, returning the first element
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': true },
	     *   { 'user': 'fred',    'age': 40, 'active': false },
	     *   { 'user': 'pebbles', 'age': 1,  'active': true }
	     * ];
	     *
	     * _.find(users, function(o) { return o.age < 40; });
	     * // => object for 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.find(users, { 'age': 1, 'active': true });
	     * // => object for 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.find(users, ['active', false]);
	     * // => object for 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.find(users, 'active');
	     * // => object for 'barney'
	     */
	    function find(collection, predicate) {
	      predicate = getIteratee(predicate, 3);
	      if (isArray(collection)) {
	        var index = baseFindIndex(collection, predicate);
	        return index > -1 ? collection[index] : undefined;
	      }
	      return baseFind(collection, predicate, baseEach);
	    }
	
	    /**
	     * This method is like `_.find` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * _.findLast([1, 2, 3, 4], function(n) {
	     *   return n % 2 == 1;
	     * });
	     * // => 3
	     */
	    function findLast(collection, predicate) {
	      predicate = getIteratee(predicate, 3);
	      if (isArray(collection)) {
	        var index = baseFindIndex(collection, predicate, true);
	        return index > -1 ? collection[index] : undefined;
	      }
	      return baseFind(collection, predicate, baseEachRight);
	    }
	
	    /**
	     * Creates a flattened array of values by running each element in `collection`
	     * through `iteratee` and flattening the mapped results. The iteratee is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [n, n];
	     * }
	     *
	     * _.flatMap([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMap(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), 1);
	    }
	
	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDeep([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMapDeep(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), INFINITY);
	    }
	
	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDepth([1, 2], duplicate, 2);
	     * // => [[1, 1], [2, 2]]
	     */
	    function flatMapDepth(collection, iteratee, depth) {
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(map(collection, iteratee), depth);
	    }
	
	    /**
	     * Iterates over elements of `collection` invoking `iteratee` for each element.
	     * The iteratee is invoked with three arguments: (value, index|key, collection).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * **Note:** As with other "Collections" methods, objects with a "length"
	     * property are iterated like arrays. To avoid this behavior use `_.forIn`
	     * or `_.forOwn` for object iteration.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias each
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @example
	     *
	     * _([1, 2]).forEach(function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `1` then `2`.
	     *
	     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forEach(collection, iteratee) {
	      return (typeof iteratee == 'function' && isArray(collection))
	        ? arrayEach(collection, iteratee)
	        : baseEach(collection, getIteratee(iteratee));
	    }
	
	    /**
	     * This method is like `_.forEach` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @alias eachRight
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @example
	     *
	     * _.forEachRight([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `2` then `1`.
	     */
	    function forEachRight(collection, iteratee) {
	      return (typeof iteratee == 'function' && isArray(collection))
	        ? arrayEachRight(collection, iteratee)
	        : baseEachRight(collection, getIteratee(iteratee));
	    }
	
	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` through `iteratee`. The corresponding value
	     * of each key is an array of elements responsible for generating the key.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': [4.2], '6': [6.1, 6.3] }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.groupBy(['one', 'two', 'three'], 'length');
	     * // => { '3': ['one', 'two'], '5': ['three'] }
	     */
	    var groupBy = createAggregator(function(result, value, key) {
	      if (hasOwnProperty.call(result, key)) {
	        result[key].push(value);
	      } else {
	        result[key] = [value];
	      }
	    });
	
	    /**
	     * Checks if `value` is in `collection`. If `collection` is a string it's
	     * checked for a substring of `value`, otherwise
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * is used for equality comparisons. If `fromIndex` is negative, it's used as
	     * the offset from the end of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to search.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {boolean} Returns `true` if `value` is found, else `false`.
	     * @example
	     *
	     * _.includes([1, 2, 3], 1);
	     * // => true
	     *
	     * _.includes([1, 2, 3], 1, 2);
	     * // => false
	     *
	     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');
	     * // => true
	     *
	     * _.includes('pebbles', 'eb');
	     * // => true
	     */
	    function includes(collection, value, fromIndex, guard) {
	      collection = isArrayLike(collection) ? collection : values(collection);
	      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;
	
	      var length = collection.length;
	      if (fromIndex < 0) {
	        fromIndex = nativeMax(length + fromIndex, 0);
	      }
	      return isString(collection)
	        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
	        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
	    }
	
	    /**
	     * Invokes the method at `path` of each element in `collection`, returning
	     * an array of the results of each invoked method. Any additional arguments
	     * are provided to each invoked method. If `methodName` is a function it's
	     * invoked for, and `this` bound to, each element in `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|string} path The path of the method to invoke or
	     *  the function invoked per iteration.
	     * @param {...*} [args] The arguments to invoke each method with.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
	     * // => [[1, 5, 7], [1, 2, 3]]
	     *
	     * _.invokeMap([123, 456], String.prototype.split, '');
	     * // => [['1', '2', '3'], ['4', '5', '6']]
	     */
	    var invokeMap = rest(function(collection, path, args) {
	      var index = -1,
	          isFunc = typeof path == 'function',
	          isProp = isKey(path),
	          result = isArrayLike(collection) ? Array(collection.length) : [];
	
	      baseEach(collection, function(value) {
	        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);
	        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);
	      });
	      return result;
	    });
	
	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` through `iteratee`. The corresponding value
	     * of each key is the last element responsible for generating the key. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * var array = [
	     *   { 'dir': 'left', 'code': 97 },
	     *   { 'dir': 'right', 'code': 100 }
	     * ];
	     *
	     * _.keyBy(array, function(o) {
	     *   return String.fromCharCode(o.code);
	     * });
	     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	     *
	     * _.keyBy(array, 'dir');
	     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
	     */
	    var keyBy = createAggregator(function(result, value, key) {
	      result[key] = value;
	    });
	
	    /**
	     * Creates an array of values by running each element in `collection` through
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	     *
	     * The guarded methods are:
	     * `ary`, `curry`, `curryRight`, `drop`, `dropRight`, `every`, `fill`,
	     * `invert`, `parseInt`, `random`, `range`, `rangeRight`, `slice`, `some`,
	     * `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimEnd`, `trimStart`,
	     * and `words`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * _.map([4, 8], square);
	     * // => [16, 64]
	     *
	     * _.map({ 'a': 4, 'b': 8 }, square);
	     * // => [16, 64] (iteration order is not guaranteed)
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, 'user');
	     * // => ['barney', 'fred']
	     */
	    function map(collection, iteratee) {
	      var func = isArray(collection) ? arrayMap : baseMap;
	      return func(collection, getIteratee(iteratee, 3));
	    }
	
	    /**
	     * This method is like `_.sortBy` except that it allows specifying the sort
	     * orders of the iteratees to sort by. If `orders` is unspecified, all values
	     * are sorted in ascending order. Otherwise, specify an order of "desc" for
	     * descending or "asc" for ascending sort order of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @param {string[]} [orders] The sort orders of `iteratees`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 34 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 36 }
	     * ];
	     *
	     * // Sort by `user` in ascending order and by `age` in descending order.
	     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     */
	    function orderBy(collection, iteratees, orders, guard) {
	      if (collection == null) {
	        return [];
	      }
	      if (!isArray(iteratees)) {
	        iteratees = iteratees == null ? [] : [iteratees];
	      }
	      orders = guard ? undefined : orders;
	      if (!isArray(orders)) {
	        orders = orders == null ? [] : [orders];
	      }
	      return baseOrderBy(collection, iteratees, orders);
	    }
	
	    /**
	     * Creates an array of elements split into two groups, the first of which
	     * contains elements `predicate` returns truthy for, the second of which
	     * contains elements `predicate` returns falsey for. The predicate is
	     * invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the array of grouped elements.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': false },
	     *   { 'user': 'fred',    'age': 40, 'active': true },
	     *   { 'user': 'pebbles', 'age': 1,  'active': false }
	     * ];
	     *
	     * _.partition(users, function(o) { return o.active; });
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.partition(users, { 'age': 1, 'active': false });
	     * // => objects for [['pebbles'], ['barney', 'fred']]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.partition(users, ['active', false]);
	     * // => objects for [['barney', 'pebbles'], ['fred']]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.partition(users, 'active');
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     */
	    var partition = createAggregator(function(result, value, key) {
	      result[key ? 0 : 1].push(value);
	    }, function() { return [[], []]; });
	
	    /**
	     * Reduces `collection` to a value which is the accumulated result of running
	     * each element in `collection` through `iteratee`, where each successive
	     * invocation is supplied the return value of the previous. If `accumulator`
	     * is not given the first element of `collection` is used as the initial
	     * value. The iteratee is invoked with four arguments:
	     * (accumulator, value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.reduce`, `_.reduceRight`, and `_.transform`.
	     *
	     * The guarded methods are:
	     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	     * and `sortBy`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * _.reduce([1, 2], function(sum, n) {
	     *   return sum + n;
	     * }, 0);
	     * // => 3
	     *
	     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     *   return result;
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	     */
	    function reduce(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduce : baseReduce,
	          initAccum = arguments.length < 3;
	
	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
	    }
	
	    /**
	     * This method is like `_.reduce` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * var array = [[0, 1], [2, 3], [4, 5]];
	     *
	     * _.reduceRight(array, function(flattened, other) {
	     *   return flattened.concat(other);
	     * }, []);
	     * // => [4, 5, 2, 3, 0, 1]
	     */
	    function reduceRight(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduceRight : baseReduce,
	          initAccum = arguments.length < 3;
	
	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
	    }
	
	    /**
	     * The opposite of `_.filter`; this method returns the elements of `collection`
	     * that `predicate` does **not** return truthy for.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': true }
	     * ];
	     *
	     * _.reject(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.reject(users, { 'age': 40, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.reject(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.reject(users, 'active');
	     * // => objects for ['barney']
	     */
	    function reject(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      predicate = getIteratee(predicate, 3);
	      return func(collection, function(value, index, collection) {
	        return !predicate(value, index, collection);
	      });
	    }
	
	    /**
	     * Gets a random element from `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     * @example
	     *
	     * _.sample([1, 2, 3, 4]);
	     * // => 2
	     */
	    function sample(collection) {
	      var array = isArrayLike(collection) ? collection : values(collection),
	          length = array.length;
	
	      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;
	    }
	
	    /**
	     * Gets `n` random elements at unique keys from `collection` up to the
	     * size of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} [n=0] The number of elements to sample.
	     * @returns {Array} Returns the random elements.
	     * @example
	     *
	     * _.sampleSize([1, 2, 3], 2);
	     * // => [3, 1]
	     *
	     * _.sampleSize([1, 2, 3], 4);
	     * // => [2, 3, 1]
	     */
	    function sampleSize(collection, n) {
	      var index = -1,
	          result = toArray(collection),
	          length = result.length,
	          lastIndex = length - 1;
	
	      n = baseClamp(toInteger(n), 0, length);
	      while (++index < n) {
	        var rand = baseRandom(index, lastIndex),
	            value = result[rand];
	
	        result[rand] = result[index];
	        result[index] = value;
	      }
	      result.length = n;
	      return result;
	    }
	
	    /**
	     * Creates an array of shuffled values, using a version of the
	     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     * @example
	     *
	     * _.shuffle([1, 2, 3, 4]);
	     * // => [4, 1, 3, 2]
	     */
	    function shuffle(collection) {
	      return sampleSize(collection, MAX_ARRAY_LENGTH);
	    }
	
	    /**
	     * Gets the size of `collection` by returning its length for array-like
	     * values or the number of own enumerable string keyed properties for objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @returns {number} Returns the collection size.
	     * @example
	     *
	     * _.size([1, 2, 3]);
	     * // => 3
	     *
	     * _.size({ 'a': 1, 'b': 2 });
	     * // => 2
	     *
	     * _.size('pebbles');
	     * // => 7
	     */
	    function size(collection) {
	      if (collection == null) {
	        return 0;
	      }
	      if (isArrayLike(collection)) {
	        var result = collection.length;
	        return (result && isString(collection)) ? stringSize(collection) : result;
	      }
	      if (isObjectLike(collection)) {
	        var tag = getTag(collection);
	        if (tag == mapTag || tag == setTag) {
	          return collection.size;
	        }
	      }
	      return keys(collection).length;
	    }
	
	    /**
	     * Checks if `predicate` returns truthy for **any** element of `collection`.
	     * Iteration is stopped once `predicate` returns truthy. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.some([null, 0, 'yes', false], Boolean);
	     * // => true
	     *
	     * var users = [
	     *   { 'user': 'barney', 'active': true },
	     *   { 'user': 'fred',   'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.some(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.some(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.some(users, 'active');
	     * // => true
	     */
	    function some(collection, predicate, guard) {
	      var func = isArray(collection) ? arraySome : baseSome;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }
	
	    /**
	     * Creates an array of elements, sorted in ascending order by the results of
	     * running each element in a collection through each iteratee. This method
	     * performs a stable sort, that is, it preserves the original sort order of
	     * equal elements. The iteratees are invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
	     *  [iteratees=[_.identity]] The iteratees to sort by, specified individually
	     *  or in arrays.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 34 }
	     * ];
	     *
	     * _.sortBy(users, function(o) { return o.user; });
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     *
	     * _.sortBy(users, ['user', 'age']);
	     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
	     *
	     * _.sortBy(users, 'user', function(o) {
	     *   return Math.floor(o.age / 10);
	     * });
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     */
	    var sortBy = rest(function(collection, iteratees) {
	      if (collection == null) {
	        return [];
	      }
	      var length = iteratees.length;
	      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
	        iteratees = [];
	      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
	        iteratees.length = 1;
	      }
	      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
	    });
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Gets the timestamp of the number of milliseconds that have elapsed since
	     * the Unix epoch (1 January 1970 00:00:00 UTC).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @type {Function}
	     * @category Date
	     * @returns {number} Returns the timestamp.
	     * @example
	     *
	     * _.defer(function(stamp) {
	     *   console.log(_.now() - stamp);
	     * }, _.now());
	     * // => Logs the number of milliseconds it took for the deferred function to be invoked.
	     */
	    var now = Date.now;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * The opposite of `_.before`; this method creates a function that invokes
	     * `func` once it's called `n` or more times.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {number} n The number of calls before `func` is invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var saves = ['profile', 'settings'];
	     *
	     * var done = _.after(saves.length, function() {
	     *   console.log('done saving!');
	     * });
	     *
	     * _.forEach(saves, function(type) {
	     *   asyncSave({ 'type': type, 'complete': done });
	     * });
	     * // => Logs 'done saving!' after the two async saves have completed.
	     */
	    function after(n, func) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n < 1) {
	          return func.apply(this, arguments);
	        }
	      };
	    }
	
	    /**
	     * Creates a function that accepts up to `n` arguments, ignoring any
	     * additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @param {number} [n=func.length] The arity cap.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
	     * // => [6, 8, 10]
	     */
	    function ary(func, n, guard) {
	      n = guard ? undefined : n;
	      n = (func && n == null) ? func.length : n;
	      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);
	    }
	
	    /**
	     * Creates a function that invokes `func`, with the `this` binding and arguments
	     * of the created function, while it's called less than `n` times. Subsequent
	     * calls to the created function return the result of the last `func` invocation.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {number} n The number of calls at which `func` is no longer invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * jQuery(element).on('click', _.before(5, addContactToList));
	     * // => allows adding up to 4 contacts to the list
	     */
	    function before(n, func) {
	      var result;
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n > 0) {
	          result = func.apply(this, arguments);
	        }
	        if (n <= 1) {
	          func = undefined;
	        }
	        return result;
	      };
	    }
	
	    /**
	     * Creates a function that invokes `func` with the `this` binding of `thisArg`
	     * and prepends any additional `_.bind` arguments to those provided to the
	     * bound function.
	     *
	     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** Unlike native `Function#bind` this method doesn't set the "length"
	     * property of bound functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to bind.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var greet = function(greeting, punctuation) {
	     *   return greeting + ' ' + this.user + punctuation;
	     * };
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * var bound = _.bind(greet, object, 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bind(greet, object, _, '!');
	     * bound('hi');
	     * // => 'hi fred!'
	     */
	    var bind = rest(function(func, thisArg, partials) {
	      var bitmask = BIND_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getPlaceholder(bind));
	        bitmask |= PARTIAL_FLAG;
	      }
	      return createWrapper(func, bitmask, thisArg, partials, holders);
	    });
	
	    /**
	     * Creates a function that invokes the method at `object[key]` and prepends
	     * any additional `_.bindKey` arguments to those provided to the bound function.
	     *
	     * This method differs from `_.bind` by allowing bound functions to reference
	     * methods that may be redefined or don't yet exist. See
	     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
	     * for more details.
	     *
	     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Function
	     * @param {Object} object The object to invoke the method on.
	     * @param {string} key The key of the method.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var object = {
	     *   'user': 'fred',
	     *   'greet': function(greeting, punctuation) {
	     *     return greeting + ' ' + this.user + punctuation;
	     *   }
	     * };
	     *
	     * var bound = _.bindKey(object, 'greet', 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * object.greet = function(greeting, punctuation) {
	     *   return greeting + 'ya ' + this.user + punctuation;
	     * };
	     *
	     * bound('!');
	     * // => 'hiya fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bindKey(object, 'greet', _, '!');
	     * bound('hi');
	     * // => 'hiya fred!'
	     */
	    var bindKey = rest(function(object, key, partials) {
	      var bitmask = BIND_FLAG | BIND_KEY_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getPlaceholder(bindKey));
	        bitmask |= PARTIAL_FLAG;
	      }
	      return createWrapper(key, bitmask, object, partials, holders);
	    });
	
	    /**
	     * Creates a function that accepts arguments of `func` and either invokes
	     * `func` returning its result, if at least `arity` number of arguments have
	     * been provided, or returns a function that accepts the remaining `func`
	     * arguments, and so on. The arity of `func` may be specified if `func.length`
	     * is not sufficient.
	     *
	     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curry(abc);
	     *
	     * curried(1)(2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(1)(_, 3)(2);
	     * // => [1, 2, 3]
	     */
	    function curry(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curry.placeholder;
	      return result;
	    }
	
	    /**
	     * This method is like `_.curry` except that arguments are applied to `func`
	     * in the manner of `_.partialRight` instead of `_.partial`.
	     *
	     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curryRight(abc);
	     *
	     * curried(3)(2)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(2, 3)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(3)(1, _)(2);
	     * // => [1, 2, 3]
	     */
	    function curryRight(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curryRight.placeholder;
	      return result;
	    }
	
	    /**
	     * Creates a debounced function that delays invoking `func` until after `wait`
	     * milliseconds have elapsed since the last time the debounced function was
	     * invoked. The debounced function comes with a `cancel` method to cancel
	     * delayed `func` invocations and a `flush` method to immediately invoke them.
	     * Provide an options object to indicate whether `func` should be invoked on
	     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	     * with the last arguments provided to the debounced function. Subsequent calls
	     * to the debounced function return the result of the last `func` invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
	     * on the trailing edge of the timeout only if the debounced function is
	     * invoked more than once during the `wait` timeout.
	     *
	     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)
	     * for details over the differences between `_.debounce` and `_.throttle`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to debounce.
	     * @param {number} [wait=0] The number of milliseconds to delay.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=false]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {number} [options.maxWait]
	     *  The maximum time `func` is allowed to be delayed before it's invoked.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new debounced function.
	     * @example
	     *
	     * // Avoid costly calculations while the window size is in flux.
	     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	     *
	     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	     * jQuery(element).on('click', _.debounce(sendMail, 300, {
	     *   'leading': true,
	     *   'trailing': false
	     * }));
	     *
	     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	     * var source = new EventSource('/stream');
	     * jQuery(source).on('message', debounced);
	     *
	     * // Cancel the trailing debounced invocation.
	     * jQuery(window).on('popstate', debounced.cancel);
	     */
	    function debounce(func, wait, options) {
	      var lastArgs,
	          lastThis,
	          result,
	          timerId,
	          lastCallTime = 0,
	          lastInvokeTime = 0,
	          leading = false,
	          maxWait = false,
	          trailing = true;
	
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      wait = toNumber(wait) || 0;
	      if (isObject(options)) {
	        leading = !!options.leading;
	        maxWait = 'maxWait' in options && nativeMax(toNumber(options.maxWait) || 0, wait);
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }
	
	      function invokeFunc(time) {
	        var args = lastArgs,
	            thisArg = lastThis;
	
	        lastArgs = lastThis = undefined;
	        lastInvokeTime = time;
	        result = func.apply(thisArg, args);
	        return result;
	      }
	
	      function leadingEdge(time) {
	        // Reset any `maxWait` timer.
	        lastInvokeTime = time;
	        // Start the timer for the trailing edge.
	        timerId = setTimeout(timerExpired, wait);
	        // Invoke the leading edge.
	        return leading ? invokeFunc(time) : result;
	      }
	
	      function remainingWait(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime,
	            result = wait - timeSinceLastCall;
	
	        return maxWait === false ? result : nativeMin(result, maxWait - timeSinceLastInvoke);
	      }
	
	      function shouldInvoke(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime;
	
	        // Either this is the first call, activity has stopped and we're at the
	        // trailing edge, the system time has gone backwards and we're treating
	        // it as the trailing edge, or we've hit the `maxWait` limit.
	        return (!lastCallTime || (timeSinceLastCall >= wait) ||
	          (timeSinceLastCall < 0) || (maxWait !== false && timeSinceLastInvoke >= maxWait));
	      }
	
	      function timerExpired() {
	        var time = now();
	        if (shouldInvoke(time)) {
	          return trailingEdge(time);
	        }
	        // Restart the timer.
	        timerId = setTimeout(timerExpired, remainingWait(time));
	      }
	
	      function trailingEdge(time) {
	        clearTimeout(timerId);
	        timerId = undefined;
	
	        // Only invoke if we have `lastArgs` which means `func` has been
	        // debounced at least once.
	        if (trailing && lastArgs) {
	          return invokeFunc(time);
	        }
	        lastArgs = lastThis = undefined;
	        return result;
	      }
	
	      function cancel() {
	        if (timerId !== undefined) {
	          clearTimeout(timerId);
	        }
	        lastCallTime = lastInvokeTime = 0;
	        lastArgs = lastThis = timerId = undefined;
	      }
	
	      function flush() {
	        return timerId === undefined ? result : trailingEdge(now());
	      }
	
	      function debounced() {
	        var time = now(),
	            isInvoking = shouldInvoke(time);
	
	        lastArgs = arguments;
	        lastThis = this;
	        lastCallTime = time;
	
	        if (isInvoking) {
	          if (timerId === undefined) {
	            return leadingEdge(lastCallTime);
	          }
	          // Handle invocations in a tight loop.
	          clearTimeout(timerId);
	          timerId = setTimeout(timerExpired, wait);
	          return invokeFunc(lastCallTime);
	        }
	        return result;
	      }
	      debounced.cancel = cancel;
	      debounced.flush = flush;
	      return debounced;
	    }
	
	    /**
	     * Defers invoking the `func` until the current call stack has cleared. Any
	     * additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to defer.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.defer(function(text) {
	     *   console.log(text);
	     * }, 'deferred');
	     * // => Logs 'deferred' after one or more milliseconds.
	     */
	    var defer = rest(function(func, args) {
	      return baseDelay(func, 1, args);
	    });
	
	    /**
	     * Invokes `func` after `wait` milliseconds. Any additional arguments are
	     * provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.delay(function(text) {
	     *   console.log(text);
	     * }, 1000, 'later');
	     * // => Logs 'later' after one second.
	     */
	    var delay = rest(function(func, wait, args) {
	      return baseDelay(func, toNumber(wait) || 0, args);
	    });
	
	    /**
	     * Creates a function that invokes `func` with arguments reversed.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to flip arguments for.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var flipped = _.flip(function() {
	     *   return _.toArray(arguments);
	     * });
	     *
	     * flipped('a', 'b', 'c', 'd');
	     * // => ['d', 'c', 'b', 'a']
	     */
	    function flip(func) {
	      return createWrapper(func, FLIP_FLAG);
	    }
	
	    /**
	     * Creates a function that memoizes the result of `func`. If `resolver` is
	     * provided it determines the cache key for storing the result based on the
	     * arguments provided to the memoized function. By default, the first argument
	     * provided to the memoized function is used as the map cache key. The `func`
	     * is invoked with the `this` binding of the memoized function.
	     *
	     * **Note:** The cache is exposed as the `cache` property on the memoized
	     * function. Its creation may be customized by replacing the `_.memoize.Cache`
	     * constructor with one whose instances implement the
	     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)
	     * method interface of `delete`, `get`, `has`, and `set`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to have its output memoized.
	     * @param {Function} [resolver] The function to resolve the cache key.
	     * @returns {Function} Returns the new memoizing function.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     * var other = { 'c': 3, 'd': 4 };
	     *
	     * var values = _.memoize(_.values);
	     * values(object);
	     * // => [1, 2]
	     *
	     * values(other);
	     * // => [3, 4]
	     *
	     * object.a = 2;
	     * values(object);
	     * // => [1, 2]
	     *
	     * // Modify the result cache.
	     * values.cache.set(object, ['a', 'b']);
	     * values(object);
	     * // => ['a', 'b']
	     *
	     * // Replace `_.memoize.Cache`.
	     * _.memoize.Cache = WeakMap;
	     */
	    function memoize(func, resolver) {
	      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var memoized = function() {
	        var args = arguments,
	            key = resolver ? resolver.apply(this, args) : args[0],
	            cache = memoized.cache;
	
	        if (cache.has(key)) {
	          return cache.get(key);
	        }
	        var result = func.apply(this, args);
	        memoized.cache = cache.set(key, result);
	        return result;
	      };
	      memoized.cache = new (memoize.Cache || MapCache);
	      return memoized;
	    }
	
	    // Assign cache to `_.memoize`.
	    memoize.Cache = MapCache;
	
	    /**
	     * Creates a function that negates the result of the predicate `func`. The
	     * `func` predicate is invoked with the `this` binding and arguments of the
	     * created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} predicate The predicate to negate.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function isEven(n) {
	     *   return n % 2 == 0;
	     * }
	     *
	     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
	     * // => [1, 3, 5]
	     */
	    function negate(predicate) {
	      if (typeof predicate != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return function() {
	        return !predicate.apply(this, arguments);
	      };
	    }
	
	    /**
	     * Creates a function that is restricted to invoking `func` once. Repeat calls
	     * to the function return the value of the first invocation. The `func` is
	     * invoked with the `this` binding and arguments of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var initialize = _.once(createApplication);
	     * initialize();
	     * initialize();
	     * // `initialize` invokes `createApplication` once
	     */
	    function once(func) {
	      return before(2, func);
	    }
	
	    /**
	     * Creates a function that invokes `func` with arguments transformed by
	     * corresponding `transforms`.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to wrap.
	     * @param {...(Function|Function[])} [transforms] The functions to transform
	     * arguments, specified individually or in arrays.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function doubled(n) {
	     *   return n * 2;
	     * }
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var func = _.overArgs(function(x, y) {
	     *   return [x, y];
	     * }, square, doubled);
	     *
	     * func(9, 3);
	     * // => [81, 6]
	     *
	     * func(10, 5);
	     * // => [100, 10]
	     */
	    var overArgs = rest(function(func, transforms) {
	      transforms = arrayMap(baseFlatten(transforms, 1), getIteratee());
	
	      var funcsLength = transforms.length;
	      return rest(function(args) {
	        var index = -1,
	            length = nativeMin(args.length, funcsLength);
	
	        while (++index < length) {
	          args[index] = transforms[index].call(this, args[index]);
	        }
	        return apply(func, this, args);
	      });
	    });
	
	    /**
	     * Creates a function that invokes `func` with `partial` arguments prepended
	     * to those provided to the new function. This method is like `_.bind` except
	     * it does **not** alter the `this` binding.
	     *
	     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.2.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * var greet = function(greeting, name) {
	     *   return greeting + ' ' + name;
	     * };
	     *
	     * var sayHelloTo = _.partial(greet, 'hello');
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     *
	     * // Partially applied with placeholders.
	     * var greetFred = _.partial(greet, _, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     */
	    var partial = rest(function(func, partials) {
	      var holders = replaceHolders(partials, getPlaceholder(partial));
	      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);
	    });
	
	    /**
	     * This method is like `_.partial` except that partially applied arguments
	     * are appended to those provided to the new function.
	     *
	     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * var greet = function(greeting, name) {
	     *   return greeting + ' ' + name;
	     * };
	     *
	     * var greetFred = _.partialRight(greet, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     *
	     * // Partially applied with placeholders.
	     * var sayHelloTo = _.partialRight(greet, 'hello', _);
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     */
	    var partialRight = rest(function(func, partials) {
	      var holders = replaceHolders(partials, getPlaceholder(partialRight));
	      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);
	    });
	
	    /**
	     * Creates a function that invokes `func` with arguments arranged according
	     * to the specified indexes where the argument value at the first index is
	     * provided as the first argument, the argument value at the second index is
	     * provided as the second argument, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to rearrange arguments for.
	     * @param {...(number|number[])} indexes The arranged argument indexes,
	     *  specified individually or in arrays.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var rearged = _.rearg(function(a, b, c) {
	     *   return [a, b, c];
	     * }, 2, 0, 1);
	     *
	     * rearged('b', 'c', 'a')
	     * // => ['a', 'b', 'c']
	     */
	    var rearg = rest(function(func, indexes) {
	      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));
	    });
	
	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * created function and arguments from `start` and beyond provided as
	     * an array.
	     *
	     * **Note:** This method is based on the
	     * [rest parameter](https://mdn.io/rest_parameters).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.rest(function(what, names) {
	     *   return what + ' ' + _.initial(names).join(', ') +
	     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	     * });
	     *
	     * say('hello', 'fred', 'barney', 'pebbles');
	     * // => 'hello fred, barney, & pebbles'
	     */
	    function rest(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);
	      return function() {
	        var args = arguments,
	            index = -1,
	            length = nativeMax(args.length - start, 0),
	            array = Array(length);
	
	        while (++index < length) {
	          array[index] = args[start + index];
	        }
	        switch (start) {
	          case 0: return func.call(this, array);
	          case 1: return func.call(this, args[0], array);
	          case 2: return func.call(this, args[0], args[1], array);
	        }
	        var otherArgs = Array(start + 1);
	        index = -1;
	        while (++index < start) {
	          otherArgs[index] = args[index];
	        }
	        otherArgs[start] = array;
	        return apply(func, this, otherArgs);
	      };
	    }
	
	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * create function and an array of arguments much like
	     * [`Function#apply`](https://es5.github.io/#x15.3.4.3).
	     *
	     * **Note:** This method is based on the
	     * [spread operator](https://mdn.io/spread_operator).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Function
	     * @param {Function} func The function to spread arguments over.
	     * @param {number} [start=0] The start position of the spread.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.spread(function(who, what) {
	     *   return who + ' says ' + what;
	     * });
	     *
	     * say(['fred', 'hello']);
	     * // => 'fred says hello'
	     *
	     * var numbers = Promise.all([
	     *   Promise.resolve(40),
	     *   Promise.resolve(36)
	     * ]);
	     *
	     * numbers.then(_.spread(function(x, y) {
	     *   return x + y;
	     * }));
	     * // => a Promise of 76
	     */
	    function spread(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);
	      return rest(function(args) {
	        var array = args[start],
	            otherArgs = args.slice(0, start);
	
	        if (array) {
	          arrayPush(otherArgs, array);
	        }
	        return apply(func, this, otherArgs);
	      });
	    }
	
	    /**
	     * Creates a throttled function that only invokes `func` at most once per
	     * every `wait` milliseconds. The throttled function comes with a `cancel`
	     * method to cancel delayed `func` invocations and a `flush` method to
	     * immediately invoke them. Provide an options object to indicate whether
	     * `func` should be invoked on the leading and/or trailing edge of the `wait`
	     * timeout. The `func` is invoked with the last arguments provided to the
	     * throttled function. Subsequent calls to the throttled function return the
	     * result of the last `func` invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the throttled function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)
	     * for details over the differences between `_.throttle` and `_.debounce`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to throttle.
	     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=true]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new throttled function.
	     * @example
	     *
	     * // Avoid excessively updating the position while scrolling.
	     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	     *
	     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	     * jQuery(element).on('click', throttled);
	     *
	     * // Cancel the trailing throttled invocation.
	     * jQuery(window).on('popstate', throttled.cancel);
	     */
	    function throttle(func, wait, options) {
	      var leading = true,
	          trailing = true;
	
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      if (isObject(options)) {
	        leading = 'leading' in options ? !!options.leading : leading;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }
	      return debounce(func, wait, {
	        'leading': leading,
	        'maxWait': wait,
	        'trailing': trailing
	      });
	    }
	
	    /**
	     * Creates a function that accepts up to one argument, ignoring any
	     * additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.unary(parseInt));
	     * // => [6, 8, 10]
	     */
	    function unary(func) {
	      return ary(func, 1);
	    }
	
	    /**
	     * Creates a function that provides `value` to the wrapper function as its
	     * first argument. Any additional arguments provided to the function are
	     * appended to those provided to the wrapper function. The wrapper is invoked
	     * with the `this` binding of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {*} value The value to wrap.
	     * @param {Function} [wrapper=identity] The wrapper function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var p = _.wrap(_.escape, function(func, text) {
	     *   return '<p>' + func(text) + '</p>';
	     * });
	     *
	     * p('fred, barney, & pebbles');
	     * // => '<p>fred, barney, &amp; pebbles</p>'
	     */
	    function wrap(value, wrapper) {
	      wrapper = wrapper == null ? identity : wrapper;
	      return partial(wrapper, value);
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Casts `value` as an array if it's not one.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Lang
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast array.
	     * @example
	     *
	     * _.castArray(1);
	     * // => [1]
	     *
	     * _.castArray({ 'a': 1 });
	     * // => [{ 'a': 1 }]
	     *
	     * _.castArray('abc');
	     * // => ['abc']
	     *
	     * _.castArray(null);
	     * // => [null]
	     *
	     * _.castArray(undefined);
	     * // => [undefined]
	     *
	     * _.castArray();
	     * // => []
	     *
	     * var array = [1, 2, 3];
	     * console.log(_.castArray(array) === array);
	     * // => true
	     */
	    function castArray() {
	      if (!arguments.length) {
	        return [];
	      }
	      var value = arguments[0];
	      return isArray(value) ? value : [value];
	    }
	
	    /**
	     * Creates a shallow clone of `value`.
	     *
	     * **Note:** This method is loosely based on the
	     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
	     * and supports cloning arrays, array buffers, booleans, date objects, maps,
	     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
	     * arrays. The own enumerable properties of `arguments` objects are cloned
	     * as plain objects. An empty object is returned for uncloneable values such
	     * as error objects, functions, DOM nodes, and WeakMaps.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @returns {*} Returns the cloned value.
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var shallow = _.clone(objects);
	     * console.log(shallow[0] === objects[0]);
	     * // => true
	     */
	    function clone(value) {
	      return baseClone(value, false, true);
	    }
	
	    /**
	     * This method is like `_.clone` except that it accepts `customizer` which
	     * is invoked to produce the cloned value. If `customizer` returns `undefined`
	     * cloning is handled by the method instead. The `customizer` is invoked with
	     * up to four arguments; (value [, index|key, object, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the cloned value.
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(false);
	     *   }
	     * }
	     *
	     * var el = _.cloneWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 0
	     */
	    function cloneWith(value, customizer) {
	      return baseClone(value, false, true, customizer);
	    }
	
	    /**
	     * This method is like `_.clone` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @returns {*} Returns the deep cloned value.
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var deep = _.cloneDeep(objects);
	     * console.log(deep[0] === objects[0]);
	     * // => false
	     */
	    function cloneDeep(value) {
	      return baseClone(value, true, true);
	    }
	
	    /**
	     * This method is like `_.cloneWith` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the deep cloned value.
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(true);
	     *   }
	     * }
	     *
	     * var el = _.cloneDeepWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 20
	     */
	    function cloneDeepWith(value, customizer) {
	      return baseClone(value, true, true, customizer);
	    }
	
	    /**
	     * Performs a
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * comparison between two values to determine if they are equivalent.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     * var other = { 'user': 'fred' };
	     *
	     * _.eq(object, object);
	     * // => true
	     *
	     * _.eq(object, other);
	     * // => false
	     *
	     * _.eq('a', 'a');
	     * // => true
	     *
	     * _.eq('a', Object('a'));
	     * // => false
	     *
	     * _.eq(NaN, NaN);
	     * // => true
	     */
	    function eq(value, other) {
	      return value === other || (value !== value && other !== other);
	    }
	
	    /**
	     * Checks if `value` is greater than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     * @example
	     *
	     * _.gt(3, 1);
	     * // => true
	     *
	     * _.gt(3, 3);
	     * // => false
	     *
	     * _.gt(1, 3);
	     * // => false
	     */
	    function gt(value, other) {
	      return value > other;
	    }
	
	    /**
	     * Checks if `value` is greater than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than or equal to
	     *  `other`, else `false`.
	     * @example
	     *
	     * _.gte(3, 1);
	     * // => true
	     *
	     * _.gte(3, 3);
	     * // => true
	     *
	     * _.gte(1, 3);
	     * // => false
	     */
	    function gte(value, other) {
	      return value >= other;
	    }
	
	    /**
	     * Checks if `value` is likely an `arguments` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isArguments(function() { return arguments; }());
	     * // => true
	     *
	     * _.isArguments([1, 2, 3]);
	     * // => false
	     */
	    function isArguments(value) {
	      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
	      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	    }
	
	    /**
	     * Checks if `value` is classified as an `Array` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @type {Function}
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isArray([1, 2, 3]);
	     * // => true
	     *
	     * _.isArray(document.body.children);
	     * // => false
	     *
	     * _.isArray('abc');
	     * // => false
	     *
	     * _.isArray(_.noop);
	     * // => false
	     */
	    var isArray = Array.isArray;
	
	    /**
	     * Checks if `value` is classified as an `ArrayBuffer` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isArrayBuffer(new ArrayBuffer(2));
	     * // => true
	     *
	     * _.isArrayBuffer(new Array(2));
	     * // => false
	     */
	    function isArrayBuffer(value) {
	      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;
	    }
	
	    /**
	     * Checks if `value` is array-like. A value is considered array-like if it's
	     * not a function and has a `value.length` that's an integer greater than or
	     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	     * @example
	     *
	     * _.isArrayLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLike(document.body.children);
	     * // => true
	     *
	     * _.isArrayLike('abc');
	     * // => true
	     *
	     * _.isArrayLike(_.noop);
	     * // => false
	     */
	    function isArrayLike(value) {
	      return value != null && isLength(getLength(value)) && !isFunction(value);
	    }
	
	    /**
	     * This method is like `_.isArrayLike` except that it also checks if `value`
	     * is an object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array-like object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArrayLikeObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLikeObject(document.body.children);
	     * // => true
	     *
	     * _.isArrayLikeObject('abc');
	     * // => false
	     *
	     * _.isArrayLikeObject(_.noop);
	     * // => false
	     */
	    function isArrayLikeObject(value) {
	      return isObjectLike(value) && isArrayLike(value);
	    }
	
	    /**
	     * Checks if `value` is classified as a boolean primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isBoolean(false);
	     * // => true
	     *
	     * _.isBoolean(null);
	     * // => false
	     */
	    function isBoolean(value) {
	      return value === true || value === false ||
	        (isObjectLike(value) && objectToString.call(value) == boolTag);
	    }
	
	    /**
	     * Checks if `value` is a buffer.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	     * @example
	     *
	     * _.isBuffer(new Buffer(2));
	     * // => true
	     *
	     * _.isBuffer(new Uint8Array(2));
	     * // => false
	     */
	    var isBuffer = !Buffer ? constant(false) : function(value) {
	      return value instanceof Buffer;
	    };
	
	    /**
	     * Checks if `value` is classified as a `Date` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isDate(new Date);
	     * // => true
	     *
	     * _.isDate('Mon April 23 2012');
	     * // => false
	     */
	    function isDate(value) {
	      return isObjectLike(value) && objectToString.call(value) == dateTag;
	    }
	
	    /**
	     * Checks if `value` is likely a DOM element.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a DOM element,
	     *  else `false`.
	     * @example
	     *
	     * _.isElement(document.body);
	     * // => true
	     *
	     * _.isElement('<body>');
	     * // => false
	     */
	    function isElement(value) {
	      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);
	    }
	
	    /**
	     * Checks if `value` is an empty object, collection, map, or set.
	     *
	     * Objects are considered empty if they have no own enumerable string keyed
	     * properties.
	     *
	     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	     * jQuery-like collections are considered empty if they have a `length` of `0`.
	     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	     * @example
	     *
	     * _.isEmpty(null);
	     * // => true
	     *
	     * _.isEmpty(true);
	     * // => true
	     *
	     * _.isEmpty(1);
	     * // => true
	     *
	     * _.isEmpty([1, 2, 3]);
	     * // => false
	     *
	     * _.isEmpty({ 'a': 1 });
	     * // => false
	     */
	    function isEmpty(value) {
	      if (isArrayLike(value) &&
	          (isArray(value) || isString(value) || isFunction(value.splice) ||
	            isArguments(value) || isBuffer(value))) {
	        return !value.length;
	      }
	      if (isObjectLike(value)) {
	        var tag = getTag(value);
	        if (tag == mapTag || tag == setTag) {
	          return !value.size;
	        }
	      }
	      for (var key in value) {
	        if (hasOwnProperty.call(value, key)) {
	          return false;
	        }
	      }
	      return !(nonEnumShadows && keys(value).length);
	    }
	
	    /**
	     * Performs a deep comparison between two values to determine if they are
	     * equivalent.
	     *
	     * **Note:** This method supports comparing arrays, array buffers, booleans,
	     * date objects, error objects, maps, numbers, `Object` objects, regexes,
	     * sets, strings, symbols, and typed arrays. `Object` objects are compared
	     * by their own, not inherited, enumerable properties. Functions and DOM
	     * nodes are **not** supported.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent,
	     *  else `false`.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     * var other = { 'user': 'fred' };
	     *
	     * _.isEqual(object, other);
	     * // => true
	     *
	     * object === other;
	     * // => false
	     */
	    function isEqual(value, other) {
	      return baseIsEqual(value, other);
	    }
	
	    /**
	     * This method is like `_.isEqual` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined` comparisons
	     * are handled by the method instead. The `customizer` is invoked with up to
	     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if the values are equivalent,
	     *  else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, othValue) {
	     *   if (isGreeting(objValue) && isGreeting(othValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var array = ['hello', 'goodbye'];
	     * var other = ['hi', 'goodbye'];
	     *
	     * _.isEqualWith(array, other, customizer);
	     * // => true
	     */
	    function isEqualWith(value, other, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      var result = customizer ? customizer(value, other) : undefined;
	      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;
	    }
	
	    /**
	     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
	     * `SyntaxError`, `TypeError`, or `URIError` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an error object,
	     *  else `false`.
	     * @example
	     *
	     * _.isError(new Error);
	     * // => true
	     *
	     * _.isError(Error);
	     * // => false
	     */
	    function isError(value) {
	      if (!isObjectLike(value)) {
	        return false;
	      }
	      return (objectToString.call(value) == errorTag) ||
	        (typeof value.message == 'string' && typeof value.name == 'string');
	    }
	
	    /**
	     * Checks if `value` is a finite primitive number.
	     *
	     * **Note:** This method is based on
	     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a finite number,
	     *  else `false`.
	     * @example
	     *
	     * _.isFinite(3);
	     * // => true
	     *
	     * _.isFinite(Number.MAX_VALUE);
	     * // => true
	     *
	     * _.isFinite(3.14);
	     * // => true
	     *
	     * _.isFinite(Infinity);
	     * // => false
	     */
	    function isFinite(value) {
	      return typeof value == 'number' && nativeIsFinite(value);
	    }
	
	    /**
	     * Checks if `value` is classified as a `Function` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isFunction(_);
	     * // => true
	     *
	     * _.isFunction(/abc/);
	     * // => false
	     */
	    function isFunction(value) {
	      // The use of `Object#toString` avoids issues with the `typeof` operator
	      // in Safari 8 which returns 'object' for typed array and weak map constructors,
	      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
	      var tag = isObject(value) ? objectToString.call(value) : '';
	      return tag == funcTag || tag == genTag;
	    }
	
	    /**
	     * Checks if `value` is an integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
	     * @example
	     *
	     * _.isInteger(3);
	     * // => true
	     *
	     * _.isInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isInteger(Infinity);
	     * // => false
	     *
	     * _.isInteger('3');
	     * // => false
	     */
	    function isInteger(value) {
	      return typeof value == 'number' && value == toInteger(value);
	    }
	
	    /**
	     * Checks if `value` is a valid array-like length.
	     *
	     * **Note:** This function is loosely based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a valid length,
	     *  else `false`.
	     * @example
	     *
	     * _.isLength(3);
	     * // => true
	     *
	     * _.isLength(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isLength(Infinity);
	     * // => false
	     *
	     * _.isLength('3');
	     * // => false
	     */
	    function isLength(value) {
	      return typeof value == 'number' &&
	        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	    }
	
	    /**
	     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
	     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	     * @example
	     *
	     * _.isObject({});
	     * // => true
	     *
	     * _.isObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isObject(_.noop);
	     * // => true
	     *
	     * _.isObject(null);
	     * // => false
	     */
	    function isObject(value) {
	      var type = typeof value;
	      return !!value && (type == 'object' || type == 'function');
	    }
	
	    /**
	     * Checks if `value` is object-like. A value is object-like if it's not `null`
	     * and has a `typeof` result of "object".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	     * @example
	     *
	     * _.isObjectLike({});
	     * // => true
	     *
	     * _.isObjectLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isObjectLike(_.noop);
	     * // => false
	     *
	     * _.isObjectLike(null);
	     * // => false
	     */
	    function isObjectLike(value) {
	      return !!value && typeof value == 'object';
	    }
	
	    /**
	     * Checks if `value` is classified as a `Map` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isMap(new Map);
	     * // => true
	     *
	     * _.isMap(new WeakMap);
	     * // => false
	     */
	    function isMap(value) {
	      return isObjectLike(value) && getTag(value) == mapTag;
	    }
	
	    /**
	     * Performs a partial deep comparison between `object` and `source` to
	     * determine if `object` contains equivalent property values. This method is
	     * equivalent to a `_.matches` function when `source` is partially applied.
	     *
	     * **Note:** This method supports comparing the same values as `_.isEqual`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * var object = { 'user': 'fred', 'age': 40 };
	     *
	     * _.isMatch(object, { 'age': 40 });
	     * // => true
	     *
	     * _.isMatch(object, { 'age': 36 });
	     * // => false
	     */
	    function isMatch(object, source) {
	      return object === source || baseIsMatch(object, source, getMatchData(source));
	    }
	
	    /**
	     * This method is like `_.isMatch` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined` comparisons
	     * are handled by the method instead. The `customizer` is invoked with five
	     * arguments: (objValue, srcValue, index|key, object, source).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var object = { 'greeting': 'hello' };
	     * var source = { 'greeting': 'hi' };
	     *
	     * _.isMatchWith(object, source, customizer);
	     * // => true
	     */
	    function isMatchWith(object, source, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseIsMatch(object, source, getMatchData(source), customizer);
	    }
	
	    /**
	     * Checks if `value` is `NaN`.
	     *
	     * **Note:** This method is not the same as
	     * [`isNaN`](https://es5.github.io/#x15.1.2.4) which returns `true` for
	     * `undefined` and other non-numeric values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	     * @example
	     *
	     * _.isNaN(NaN);
	     * // => true
	     *
	     * _.isNaN(new Number(NaN));
	     * // => true
	     *
	     * isNaN(undefined);
	     * // => true
	     *
	     * _.isNaN(undefined);
	     * // => false
	     */
	    function isNaN(value) {
	      // An `NaN` primitive is the only value that is not equal to itself.
	      // Perform the `toStringTag` check first to avoid errors with some
	      // ActiveX objects in IE.
	      return isNumber(value) && value != +value;
	    }
	
	    /**
	     * Checks if `value` is a native function.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     * @example
	     *
	     * _.isNative(Array.prototype.push);
	     * // => true
	     *
	     * _.isNative(_);
	     * // => false
	     */
	    function isNative(value) {
	      if (value == null) {
	        return false;
	      }
	      if (isFunction(value)) {
	        return reIsNative.test(funcToString.call(value));
	      }
	      return isObjectLike(value) &&
	        (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);
	    }
	
	    /**
	     * Checks if `value` is `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
	     * @example
	     *
	     * _.isNull(null);
	     * // => true
	     *
	     * _.isNull(void 0);
	     * // => false
	     */
	    function isNull(value) {
	      return value === null;
	    }
	
	    /**
	     * Checks if `value` is `null` or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
	     * @example
	     *
	     * _.isNil(null);
	     * // => true
	     *
	     * _.isNil(void 0);
	     * // => true
	     *
	     * _.isNil(NaN);
	     * // => false
	     */
	    function isNil(value) {
	      return value == null;
	    }
	
	    /**
	     * Checks if `value` is classified as a `Number` primitive or object.
	     *
	     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	     * classified as numbers, use the `_.isFinite` method.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isNumber(3);
	     * // => true
	     *
	     * _.isNumber(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isNumber(Infinity);
	     * // => true
	     *
	     * _.isNumber('3');
	     * // => false
	     */
	    function isNumber(value) {
	      return typeof value == 'number' ||
	        (isObjectLike(value) && objectToString.call(value) == numberTag);
	    }
	
	    /**
	     * Checks if `value` is a plain object, that is, an object created by the
	     * `Object` constructor or one with a `[[Prototype]]` of `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.8.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a plain object,
	     *  else `false`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * _.isPlainObject(new Foo);
	     * // => false
	     *
	     * _.isPlainObject([1, 2, 3]);
	     * // => false
	     *
	     * _.isPlainObject({ 'x': 0, 'y': 0 });
	     * // => true
	     *
	     * _.isPlainObject(Object.create(null));
	     * // => true
	     */
	    function isPlainObject(value) {
	      if (!isObjectLike(value) ||
	          objectToString.call(value) != objectTag || isHostObject(value)) {
	        return false;
	      }
	      var proto = getPrototype(value);
	      if (proto === null) {
	        return true;
	      }
	      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	      return (typeof Ctor == 'function' &&
	        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
	    }
	
	    /**
	     * Checks if `value` is classified as a `RegExp` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isRegExp(/abc/);
	     * // => true
	     *
	     * _.isRegExp('/abc/');
	     * // => false
	     */
	    function isRegExp(value) {
	      return isObject(value) && objectToString.call(value) == regexpTag;
	    }
	
	    /**
	     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
	     * double precision number which isn't the result of a rounded unsafe integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a safe integer,
	     *  else `false`.
	     * @example
	     *
	     * _.isSafeInteger(3);
	     * // => true
	     *
	     * _.isSafeInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isSafeInteger(Infinity);
	     * // => false
	     *
	     * _.isSafeInteger('3');
	     * // => false
	     */
	    function isSafeInteger(value) {
	      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
	    }
	
	    /**
	     * Checks if `value` is classified as a `Set` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isSet(new Set);
	     * // => true
	     *
	     * _.isSet(new WeakSet);
	     * // => false
	     */
	    function isSet(value) {
	      return isObjectLike(value) && getTag(value) == setTag;
	    }
	
	    /**
	     * Checks if `value` is classified as a `String` primitive or object.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isString('abc');
	     * // => true
	     *
	     * _.isString(1);
	     * // => false
	     */
	    function isString(value) {
	      return typeof value == 'string' ||
	        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
	    }
	
	    /**
	     * Checks if `value` is classified as a `Symbol` primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isSymbol(Symbol.iterator);
	     * // => true
	     *
	     * _.isSymbol('abc');
	     * // => false
	     */
	    function isSymbol(value) {
	      return typeof value == 'symbol' ||
	        (isObjectLike(value) && objectToString.call(value) == symbolTag);
	    }
	
	    /**
	     * Checks if `value` is classified as a typed array.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isTypedArray(new Uint8Array);
	     * // => true
	     *
	     * _.isTypedArray([]);
	     * // => false
	     */
	    function isTypedArray(value) {
	      return isObjectLike(value) &&
	        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
	    }
	
	    /**
	     * Checks if `value` is `undefined`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	     * @example
	     *
	     * _.isUndefined(void 0);
	     * // => true
	     *
	     * _.isUndefined(null);
	     * // => false
	     */
	    function isUndefined(value) {
	      return value === undefined;
	    }
	
	    /**
	     * Checks if `value` is classified as a `WeakMap` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isWeakMap(new WeakMap);
	     * // => true
	     *
	     * _.isWeakMap(new Map);
	     * // => false
	     */
	    function isWeakMap(value) {
	      return isObjectLike(value) && getTag(value) == weakMapTag;
	    }
	
	    /**
	     * Checks if `value` is classified as a `WeakSet` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isWeakSet(new WeakSet);
	     * // => true
	     *
	     * _.isWeakSet(new Set);
	     * // => false
	     */
	    function isWeakSet(value) {
	      return isObjectLike(value) && objectToString.call(value) == weakSetTag;
	    }
	
	    /**
	     * Checks if `value` is less than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     * @example
	     *
	     * _.lt(1, 3);
	     * // => true
	     *
	     * _.lt(3, 3);
	     * // => false
	     *
	     * _.lt(3, 1);
	     * // => false
	     */
	    function lt(value, other) {
	      return value < other;
	    }
	
	    /**
	     * Checks if `value` is less than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than or equal to
	     *  `other`, else `false`.
	     * @example
	     *
	     * _.lte(1, 3);
	     * // => true
	     *
	     * _.lte(3, 3);
	     * // => true
	     *
	     * _.lte(3, 1);
	     * // => false
	     */
	    function lte(value, other) {
	      return value <= other;
	    }
	
	    /**
	     * Converts `value` to an array.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the converted array.
	     * @example
	     *
	     * _.toArray({ 'a': 1, 'b': 2 });
	     * // => [1, 2]
	     *
	     * _.toArray('abc');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toArray(1);
	     * // => []
	     *
	     * _.toArray(null);
	     * // => []
	     */
	    function toArray(value) {
	      if (!value) {
	        return [];
	      }
	      if (isArrayLike(value)) {
	        return isString(value) ? stringToArray(value) : copyArray(value);
	      }
	      if (iteratorSymbol && value[iteratorSymbol]) {
	        return iteratorToArray(value[iteratorSymbol]());
	      }
	      var tag = getTag(value),
	          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);
	
	      return func(value);
	    }
	
	    /**
	     * Converts `value` to an integer.
	     *
	     * **Note:** This function is loosely based on
	     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toInteger(3);
	     * // => 3
	     *
	     * _.toInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toInteger(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toInteger('3');
	     * // => 3
	     */
	    function toInteger(value) {
	      if (!value) {
	        return value === 0 ? value : 0;
	      }
	      value = toNumber(value);
	      if (value === INFINITY || value === -INFINITY) {
	        var sign = (value < 0 ? -1 : 1);
	        return sign * MAX_INTEGER;
	      }
	      var remainder = value % 1;
	      return value === value ? (remainder ? value - remainder : value) : 0;
	    }
	
	    /**
	     * Converts `value` to an integer suitable for use as the length of an
	     * array-like object.
	     *
	     * **Note:** This method is based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toLength(3);
	     * // => 3
	     *
	     * _.toLength(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toLength(Infinity);
	     * // => 4294967295
	     *
	     * _.toLength('3');
	     * // => 3
	     */
	    function toLength(value) {
	      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
	    }
	
	    /**
	     * Converts `value` to a number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     * @example
	     *
	     * _.toNumber(3);
	     * // => 3
	     *
	     * _.toNumber(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toNumber(Infinity);
	     * // => Infinity
	     *
	     * _.toNumber('3');
	     * // => 3
	     */
	    function toNumber(value) {
	      if (typeof value == 'number') {
	        return value;
	      }
	      if (isSymbol(value)) {
	        return NAN;
	      }
	      if (isObject(value)) {
	        var other = isFunction(value.valueOf) ? value.valueOf() : value;
	        value = isObject(other) ? (other + '') : other;
	      }
	      if (typeof value != 'string') {
	        return value === 0 ?  value : +value;
	      }
	      value = value.replace(reTrim, '');
	      var isBinary = reIsBinary.test(value);
	      return (isBinary || reIsOctal.test(value))
	        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	        : (reIsBadHex.test(value) ? NAN : +value);
	    }
	
	    /**
	     * Converts `value` to a plain object flattening inherited enumerable string
	     * keyed properties of `value` to own properties of the plain object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Object} Returns the converted plain object.
	     * @example
	     *
	     * function Foo() {
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.assign({ 'a': 1 }, new Foo);
	     * // => { 'a': 1, 'b': 2 }
	     *
	     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	     * // => { 'a': 1, 'b': 2, 'c': 3 }
	     */
	    function toPlainObject(value) {
	      return copyObject(value, keysIn(value));
	    }
	
	    /**
	     * Converts `value` to a safe integer. A safe integer can be compared and
	     * represented correctly.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toSafeInteger(3);
	     * // => 3
	     *
	     * _.toSafeInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toSafeInteger(Infinity);
	     * // => 9007199254740991
	     *
	     * _.toSafeInteger('3');
	     * // => 3
	     */
	    function toSafeInteger(value) {
	      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);
	    }
	
	    /**
	     * Converts `value` to a string if it's not one. An empty string is returned
	     * for `null` and `undefined` values. The sign of `-0` is preserved.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {string} Returns the string.
	     * @example
	     *
	     * _.toString(null);
	     * // => ''
	     *
	     * _.toString(-0);
	     * // => '-0'
	     *
	     * _.toString([1, 2, 3]);
	     * // => '1,2,3'
	     */
	    function toString(value) {
	      // Exit early for strings to avoid a performance hit in some environments.
	      if (typeof value == 'string') {
	        return value;
	      }
	      if (value == null) {
	        return '';
	      }
	      if (isSymbol(value)) {
	        return symbolToString ? symbolToString.call(value) : '';
	      }
	      var result = (value + '');
	      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Assigns own enumerable string keyed properties of source objects to the
	     * destination object. Source objects are applied from left to right.
	     * Subsequent sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object` and is loosely based on
	     * [`Object.assign`](https://mdn.io/Object/assign).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.c = 3;
	     * }
	     *
	     * function Bar() {
	     *   this.e = 5;
	     * }
	     *
	     * Foo.prototype.d = 4;
	     * Bar.prototype.f = 6;
	     *
	     * _.assign({ 'a': 1 }, new Foo, new Bar);
	     * // => { 'a': 1, 'c': 3, 'e': 5 }
	     */
	    var assign = createAssigner(function(object, source) {
	      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
	        copyObject(source, keys(source), object);
	        return;
	      }
	      for (var key in source) {
	        if (hasOwnProperty.call(source, key)) {
	          assignValue(object, key, source[key]);
	        }
	      }
	    });
	
	    /**
	     * This method is like `_.assign` except that it iterates over own and
	     * inherited source properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extend
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.b = 2;
	     * }
	     *
	     * function Bar() {
	     *   this.d = 4;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     * Bar.prototype.e = 5;
	     *
	     * _.assignIn({ 'a': 1 }, new Foo, new Bar);
	     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }
	     */
	    var assignIn = createAssigner(function(object, source) {
	      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
	        copyObject(source, keysIn(source), object);
	        return;
	      }
	      for (var key in source) {
	        assignValue(object, key, source[key]);
	      }
	    });
	
	    /**
	     * This method is like `_.assignIn` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined` assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extendWith
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignInWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObjectWith(source, keysIn(source), object, customizer);
	    });
	
	    /**
	     * This method is like `_.assign` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined` assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObjectWith(source, keys(source), object, customizer);
	    });
	
	    /**
	     * Creates an array of values corresponding to `paths` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {...(string|string[])} [paths] The property paths of elements to pick,
	     *  specified individually or in arrays.
	     * @returns {Array} Returns the new array of picked elements.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _.at(object, ['a[0].b.c', 'a[1]']);
	     * // => [3, 4]
	     *
	     * _.at(['a', 'b', 'c'], 0, 2);
	     * // => ['a', 'c']
	     */
	    var at = rest(function(object, paths) {
	      return baseAt(object, baseFlatten(paths, 1));
	    });
	
	    /**
	     * Creates an object that inherits from the `prototype` object. If a
	     * `properties` object is given its own enumerable string keyed properties
	     * are assigned to the created object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Object
	     * @param {Object} prototype The object to inherit from.
	     * @param {Object} [properties] The properties to assign to the object.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * function Shape() {
	     *   this.x = 0;
	     *   this.y = 0;
	     * }
	     *
	     * function Circle() {
	     *   Shape.call(this);
	     * }
	     *
	     * Circle.prototype = _.create(Shape.prototype, {
	     *   'constructor': Circle
	     * });
	     *
	     * var circle = new Circle;
	     * circle instanceof Circle;
	     * // => true
	     *
	     * circle instanceof Shape;
	     * // => true
	     */
	    function create(prototype, properties) {
	      var result = baseCreate(prototype);
	      return properties ? baseAssign(result, properties) : result;
	    }
	
	    /**
	     * Assigns own and inherited enumerable string keyed properties of source
	     * objects to the destination object for all destination properties that
	     * resolve to `undefined`. Source objects are applied from left to right.
	     * Once a property is set, additional values of the same property are ignored.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });
	     * // => { 'user': 'barney', 'age': 36 }
	     */
	    var defaults = rest(function(args) {
	      args.push(undefined, assignInDefaults);
	      return apply(assignInWith, undefined, args);
	    });
	
	    /**
	     * This method is like `_.defaults` except that it recursively assigns
	     * default properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });
	     * // => { 'user': { 'name': 'barney', 'age': 36 } }
	     *
	     */
	    var defaultsDeep = rest(function(args) {
	      args.push(undefined, mergeDefaults);
	      return apply(mergeWith, undefined, args);
	    });
	
	    /**
	     * This method is like `_.find` except that it returns the key of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Object
	     * @param {Object} object The object to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findKey(users, function(o) { return o.age < 40; });
	     * // => 'barney' (iteration order is not guaranteed)
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findKey(users, { 'age': 1, 'active': true });
	     * // => 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findKey(users, 'active');
	     * // => 'barney'
	     */
	    function findKey(object, predicate) {
	      return baseFind(object, getIteratee(predicate, 3), baseForOwn, true);
	    }
	
	    /**
	     * This method is like `_.findKey` except that it iterates over elements of
	     * a collection in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findLastKey(users, function(o) { return o.age < 40; });
	     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastKey(users, { 'age': 36, 'active': true });
	     * // => 'barney'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastKey(users, 'active');
	     * // => 'pebbles'
	     */
	    function findLastKey(object, predicate) {
	      return baseFind(object, getIteratee(predicate, 3), baseForOwnRight, true);
	    }
	
	    /**
	     * Iterates over own and inherited enumerable string keyed properties of an
	     * object invoking `iteratee` for each property. The iteratee is invoked with
	     * three arguments: (value, key, object). Iteratee functions may exit iteration
	     * early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forIn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
	     */
	    function forIn(object, iteratee) {
	      return object == null
	        ? object
	        : baseFor(object, getIteratee(iteratee), keysIn);
	    }
	
	    /**
	     * This method is like `_.forIn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forInRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
	     */
	    function forInRight(object, iteratee) {
	      return object == null
	        ? object
	        : baseForRight(object, getIteratee(iteratee), keysIn);
	    }
	
	    /**
	     * Iterates over own enumerable string keyed properties of an object invoking
	     * `iteratee` for each property. The iteratee is invoked with three arguments:
	     * (value, key, object). Iteratee functions may exit iteration early by
	     * explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forOwn(object, iteratee) {
	      return object && baseForOwn(object, getIteratee(iteratee));
	    }
	
	    /**
	     * This method is like `_.forOwn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwnRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
	     */
	    function forOwnRight(object, iteratee) {
	      return object && baseForOwnRight(object, getIteratee(iteratee));
	    }
	
	    /**
	     * Creates an array of function property names from own enumerable properties
	     * of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the new array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functions(new Foo);
	     * // => ['a', 'b']
	     */
	    function functions(object) {
	      return object == null ? [] : baseFunctions(object, keys(object));
	    }
	
	    /**
	     * Creates an array of function property names from own and inherited
	     * enumerable properties of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the new array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functionsIn(new Foo);
	     * // => ['a', 'b', 'c']
	     */
	    function functionsIn(object) {
	      return object == null ? [] : baseFunctions(object, keysIn(object));
	    }
	
	    /**
	     * Gets the value at `path` of `object`. If the resolved value is
	     * `undefined` the `defaultValue` is used in its place.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.get(object, 'a[0].b.c');
	     * // => 3
	     *
	     * _.get(object, ['a', '0', 'b', 'c']);
	     * // => 3
	     *
	     * _.get(object, 'a.b.c', 'default');
	     * // => 'default'
	     */
	    function get(object, path, defaultValue) {
	      var result = object == null ? undefined : baseGet(object, path);
	      return result === undefined ? defaultValue : result;
	    }
	
	    /**
	     * Checks if `path` is a direct property of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = { 'a': { 'b': { 'c': 3 } } };
	     * var other = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });
	     *
	     * _.has(object, 'a');
	     * // => true
	     *
	     * _.has(object, 'a.b.c');
	     * // => true
	     *
	     * _.has(object, ['a', 'b', 'c']);
	     * // => true
	     *
	     * _.has(other, 'a');
	     * // => false
	     */
	    function has(object, path) {
	      return hasPath(object, path, baseHas);
	    }
	
	    /**
	     * Checks if `path` is a direct or inherited property of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });
	     *
	     * _.hasIn(object, 'a');
	     * // => true
	     *
	     * _.hasIn(object, 'a.b.c');
	     * // => true
	     *
	     * _.hasIn(object, ['a', 'b', 'c']);
	     * // => true
	     *
	     * _.hasIn(object, 'b');
	     * // => false
	     */
	    function hasIn(object, path) {
	      return hasPath(object, path, baseHasIn);
	    }
	
	    /**
	     * Creates an object composed of the inverted keys and values of `object`.
	     * If `object` contains duplicate values, subsequent values overwrite
	     * property assignments of previous values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invert(object);
	     * // => { '1': 'c', '2': 'b' }
	     */
	    var invert = createInverter(function(result, value, key) {
	      result[value] = key;
	    }, constant(identity));
	
	    /**
	     * This method is like `_.invert` except that the inverted object is generated
	     * from the results of running each element of `object` through `iteratee`.
	     * The corresponding inverted value of each inverted key is an array of keys
	     * responsible for generating the inverted value. The iteratee is invoked
	     * with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invertBy(object);
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     *
	     * _.invertBy(object, function(value) {
	     *   return 'group' + value;
	     * });
	     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
	     */
	    var invertBy = createInverter(function(result, value, key) {
	      if (hasOwnProperty.call(result, value)) {
	        result[value].push(key);
	      } else {
	        result[value] = [key];
	      }
	    }, getIteratee);
	
	    /**
	     * Invokes the method at `path` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
	     *
	     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
	     * // => [2, 3]
	     */
	    var invoke = rest(baseInvoke);
	
	    /**
	     * Creates an array of the own enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects. See the
	     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	     * for more details.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keys(new Foo);
	     * // => ['a', 'b'] (iteration order is not guaranteed)
	     *
	     * _.keys('hi');
	     * // => ['0', '1']
	     */
	    function keys(object) {
	      var isProto = isPrototype(object);
	      if (!(isProto || isArrayLike(object))) {
	        return baseKeys(object);
	      }
	      var indexes = indexKeys(object),
	          skipIndexes = !!indexes,
	          result = indexes || [],
	          length = result.length;
	
	      for (var key in object) {
	        if (baseHas(object, key) &&
	            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	            !(isProto && key == 'constructor')) {
	          result.push(key);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * Creates an array of the own and inherited enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keysIn(new Foo);
	     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	     */
	    function keysIn(object) {
	      var index = -1,
	          isProto = isPrototype(object),
	          props = baseKeysIn(object),
	          propsLength = props.length,
	          indexes = indexKeys(object),
	          skipIndexes = !!indexes,
	          result = indexes || [],
	          length = result.length;
	
	      while (++index < propsLength) {
	        var key = props[index];
	        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	          result.push(key);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The opposite of `_.mapValues`; this method creates an object with the
	     * same values as `object` and keys generated by running each own enumerable
	     * string keyed property of `object` through `iteratee`. The iteratee is
	     * invoked with three arguments: (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @example
	     *
	     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   return key + value;
	     * });
	     * // => { 'a1': 1, 'b2': 2 }
	     */
	    function mapKeys(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);
	
	      baseForOwn(object, function(value, key, object) {
	        result[iteratee(value, key, object)] = value;
	      });
	      return result;
	    }
	
	    /**
	     * Creates an object with the same keys as `object` and values generated by
	     * running each own enumerable string keyed property of `object` through
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @example
	     *
	     * var users = {
	     *   'fred':    { 'user': 'fred',    'age': 40 },
	     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	     * };
	     *
	     * _.mapValues(users, function(o) { return o.age; });
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.mapValues(users, 'age');
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     */
	    function mapValues(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);
	
	      baseForOwn(object, function(value, key, object) {
	        result[key] = iteratee(value, key, object);
	      });
	      return result;
	    }
	
	    /**
	     * This method is like `_.assign` except that it recursively merges own and
	     * inherited enumerable string keyed properties of source objects into the
	     * destination object. Source properties that resolve to `undefined` are
	     * skipped if a destination value exists. Array and plain object properties
	     * are merged recursively.Other objects and value types are overridden by
	     * assignment. Source objects are applied from left to right. Subsequent
	     * sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var users = {
	     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]
	     * };
	     *
	     * var ages = {
	     *   'data': [{ 'age': 36 }, { 'age': 40 }]
	     * };
	     *
	     * _.merge(users, ages);
	     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }
	     */
	    var merge = createAssigner(function(object, source, srcIndex) {
	      baseMerge(object, source, srcIndex);
	    });
	
	    /**
	     * This method is like `_.merge` except that it accepts `customizer` which
	     * is invoked to produce the merged values of the destination and source
	     * properties. If `customizer` returns `undefined` merging is handled by the
	     * method instead. The `customizer` is invoked with seven arguments:
	     * (objValue, srcValue, key, object, source, stack).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} customizer The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (_.isArray(objValue)) {
	     *     return objValue.concat(srcValue);
	     *   }
	     * }
	     *
	     * var object = {
	     *   'fruits': ['apple'],
	     *   'vegetables': ['beet']
	     * };
	     *
	     * var other = {
	     *   'fruits': ['banana'],
	     *   'vegetables': ['carrot']
	     * };
	     *
	     * _.mergeWith(object, other, customizer);
	     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }
	     */
	    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
	      baseMerge(object, source, srcIndex, customizer);
	    });
	
	    /**
	     * The opposite of `_.pick`; this method creates an object composed of the
	     * own and inherited enumerable string keyed properties of `object` that are
	     * not omitted.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [props] The property identifiers to omit,
	     *  specified individually or in arrays.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omit(object, ['a', 'c']);
	     * // => { 'b': '2' }
	     */
	    var omit = rest(function(object, props) {
	      if (object == null) {
	        return {};
	      }
	      props = arrayMap(baseFlatten(props, 1), baseCastKey);
	      return basePick(object, baseDifference(getAllKeysIn(object), props));
	    });
	
	    /**
	     * The opposite of `_.pickBy`; this method creates an object composed of
	     * the own and inherited enumerable string keyed properties of `object` that
	     * `predicate` doesn't return truthy for. The predicate is invoked with two
	     * arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omitBy(object, _.isNumber);
	     * // => { 'b': '2' }
	     */
	    function omitBy(object, predicate) {
	      predicate = getIteratee(predicate);
	      return basePickBy(object, function(value, key) {
	        return !predicate(value, key);
	      });
	    }
	
	    /**
	     * Creates an object composed of the picked `object` properties.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [props] The property identifiers to pick,
	     *  specified individually or in arrays.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pick(object, ['a', 'c']);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    var pick = rest(function(object, props) {
	      return object == null ? {} : basePick(object, baseFlatten(props, 1));
	    });
	
	    /**
	     * Creates an object composed of the `object` properties `predicate` returns
	     * truthy for. The predicate is invoked with two arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pickBy(object, _.isNumber);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    function pickBy(object, predicate) {
	      return object == null ? {} : basePickBy(object, getIteratee(predicate));
	    }
	
	    /**
	     * This method is like `_.get` except that if the resolved value is a
	     * function it's invoked with the `this` binding of its parent object and
	     * its result is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to resolve.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
	     *
	     * _.result(object, 'a[0].b.c1');
	     * // => 3
	     *
	     * _.result(object, 'a[0].b.c2');
	     * // => 4
	     *
	     * _.result(object, 'a[0].b.c3', 'default');
	     * // => 'default'
	     *
	     * _.result(object, 'a[0].b.c3', _.constant('default'));
	     * // => 'default'
	     */
	    function result(object, path, defaultValue) {
	      path = isKey(path, object) ? [path] : baseCastPath(path);
	
	      var index = -1,
	          length = path.length;
	
	      // Ensure the loop is entered when path is empty.
	      if (!length) {
	        object = undefined;
	        length = 1;
	      }
	      while (++index < length) {
	        var value = object == null ? undefined : object[path[index]];
	        if (value === undefined) {
	          index = length;
	          value = defaultValue;
	        }
	        object = isFunction(value) ? value.call(object) : value;
	      }
	      return object;
	    }
	
	    /**
	     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist
	     * it's created. Arrays are created for missing index properties while objects
	     * are created for all other missing properties. Use `_.setWith` to customize
	     * `path` creation.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.set(object, 'a[0].b.c', 4);
	     * console.log(object.a[0].b.c);
	     * // => 4
	     *
	     * _.set(object, 'x[0].y.z', 5);
	     * console.log(object.x[0].y.z);
	     * // => 5
	     */
	    function set(object, path, value) {
	      return object == null ? object : baseSet(object, path, value);
	    }
	
	    /**
	     * This method is like `_.set` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.setWith(object, '[0][1]', 'a', Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function setWith(object, path, value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseSet(object, path, value, customizer);
	    }
	
	    /**
	     * Creates an array of own enumerable string keyed-value pairs for `object`
	     * which can be consumed by `_.fromPairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entries
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the new array of key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairs(new Foo);
	     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
	     */
	    function toPairs(object) {
	      return baseToPairs(object, keys(object));
	    }
	
	    /**
	     * Creates an array of own and inherited enumerable string keyed-value pairs
	     * for `object` which can be consumed by `_.fromPairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entriesIn
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the new array of key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairsIn(new Foo);
	     * // => [['a', 1], ['b', 2], ['c', 1]] (iteration order is not guaranteed)
	     */
	    function toPairsIn(object) {
	      return baseToPairs(object, keysIn(object));
	    }
	
	    /**
	     * An alternative to `_.reduce`; this method transforms `object` to a new
	     * `accumulator` object which is the result of running each of its own enumerable
	     * string keyed properties through `iteratee`, with each invocation potentially
	     * mutating the `accumulator` object. The iteratee is invoked with four arguments:
	     * (accumulator, value, key, object). Iteratee functions may exit iteration
	     * early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Object
	     * @param {Array|Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The custom accumulator value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * _.transform([2, 3, 4], function(result, n) {
	     *   result.push(n *= n);
	     *   return n % 2 == 0;
	     * }, []);
	     * // => [4, 9]
	     *
	     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     */
	    function transform(object, iteratee, accumulator) {
	      var isArr = isArray(object) || isTypedArray(object);
	      iteratee = getIteratee(iteratee, 4);
	
	      if (accumulator == null) {
	        if (isArr || isObject(object)) {
	          var Ctor = object.constructor;
	          if (isArr) {
	            accumulator = isArray(object) ? new Ctor : [];
	          } else {
	            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
	          }
	        } else {
	          accumulator = {};
	        }
	      }
	      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {
	        return iteratee(accumulator, value, index, object);
	      });
	      return accumulator;
	    }
	
	    /**
	     * Removes the property at `path` of `object`.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
	     * _.unset(object, 'a[0].b.c');
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     *
	     * _.unset(object, 'a[0].b.c');
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     */
	    function unset(object, path) {
	      return object == null ? true : baseUnset(object, path);
	    }
	
	    /**
	     * This method is like `_.set` except that accepts `updater` to produce the
	     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
	     * is invoked with one argument: (value).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
	     * console.log(object.a[0].b.c);
	     * // => 9
	     *
	     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
	     * console.log(object.x[0].y.z);
	     * // => 0
	     */
	    function update(object, path, updater) {
	      return object == null ? object : baseUpdate(object, path, baseCastFunction(updater));
	    }
	
	    /**
	     * This method is like `_.update` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function updateWith(object, path, updater, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseUpdate(object, path, baseCastFunction(updater), customizer);
	    }
	
	    /**
	     * Creates an array of the own enumerable string keyed property values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.values(new Foo);
	     * // => [1, 2] (iteration order is not guaranteed)
	     *
	     * _.values('hi');
	     * // => ['h', 'i']
	     */
	    function values(object) {
	      return object ? baseValues(object, keys(object)) : [];
	    }
	
	    /**
	     * Creates an array of the own and inherited enumerable string keyed property
	     * values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.valuesIn(new Foo);
	     * // => [1, 2, 3] (iteration order is not guaranteed)
	     */
	    function valuesIn(object) {
	      return object == null ? [] : baseValues(object, keysIn(object));
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Clamps `number` within the inclusive `lower` and `upper` bounds.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Number
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     * @example
	     *
	     * _.clamp(-10, -5, 5);
	     * // => -5
	     *
	     * _.clamp(10, -5, 5);
	     * // => 5
	     */
	    function clamp(number, lower, upper) {
	      if (upper === undefined) {
	        upper = lower;
	        lower = undefined;
	      }
	      if (upper !== undefined) {
	        upper = toNumber(upper);
	        upper = upper === upper ? upper : 0;
	      }
	      if (lower !== undefined) {
	        lower = toNumber(lower);
	        lower = lower === lower ? lower : 0;
	      }
	      return baseClamp(toNumber(number), lower, upper);
	    }
	
	    /**
	     * Checks if `n` is between `start` and up to but not including, `end`. If
	     * `end` is not specified it's set to `start` with `start` then set to `0`.
	     * If `start` is greater than `end` the params are swapped to support
	     * negative ranges.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.3.0
	     * @category Number
	     * @param {number} number The number to check.
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     * @example
	     *
	     * _.inRange(3, 2, 4);
	     * // => true
	     *
	     * _.inRange(4, 8);
	     * // => true
	     *
	     * _.inRange(4, 2);
	     * // => false
	     *
	     * _.inRange(2, 2);
	     * // => false
	     *
	     * _.inRange(1.2, 2);
	     * // => true
	     *
	     * _.inRange(5.2, 4);
	     * // => false
	     *
	     * _.inRange(-3, -2, -6);
	     * // => true
	     */
	    function inRange(number, start, end) {
	      start = toNumber(start) || 0;
	      if (end === undefined) {
	        end = start;
	        start = 0;
	      } else {
	        end = toNumber(end) || 0;
	      }
	      number = toNumber(number);
	      return baseInRange(number, start, end);
	    }
	
	    /**
	     * Produces a random number between the inclusive `lower` and `upper` bounds.
	     * If only one argument is provided a number between `0` and the given number
	     * is returned. If `floating` is `true`, or either `lower` or `upper` are
	     * floats, a floating-point number is returned instead of an integer.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Number
	     * @param {number} [lower=0] The lower bound.
	     * @param {number} [upper=1] The upper bound.
	     * @param {boolean} [floating] Specify returning a floating-point number.
	     * @returns {number} Returns the random number.
	     * @example
	     *
	     * _.random(0, 5);
	     * // => an integer between 0 and 5
	     *
	     * _.random(5);
	     * // => also an integer between 0 and 5
	     *
	     * _.random(5, true);
	     * // => a floating-point number between 0 and 5
	     *
	     * _.random(1.2, 5.2);
	     * // => a floating-point number between 1.2 and 5.2
	     */
	    function random(lower, upper, floating) {
	      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
	        upper = floating = undefined;
	      }
	      if (floating === undefined) {
	        if (typeof upper == 'boolean') {
	          floating = upper;
	          upper = undefined;
	        }
	        else if (typeof lower == 'boolean') {
	          floating = lower;
	          lower = undefined;
	        }
	      }
	      if (lower === undefined && upper === undefined) {
	        lower = 0;
	        upper = 1;
	      }
	      else {
	        lower = toNumber(lower) || 0;
	        if (upper === undefined) {
	          upper = lower;
	          lower = 0;
	        } else {
	          upper = toNumber(upper) || 0;
	        }
	      }
	      if (lower > upper) {
	        var temp = lower;
	        lower = upper;
	        upper = temp;
	      }
	      if (floating || lower % 1 || upper % 1) {
	        var rand = nativeRandom();
	        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
	      }
	      return baseRandom(lower, upper);
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the camel cased string.
	     * @example
	     *
	     * _.camelCase('Foo Bar');
	     * // => 'fooBar'
	     *
	     * _.camelCase('--foo-bar--');
	     * // => 'fooBar'
	     *
	     * _.camelCase('__FOO_BAR__');
	     * // => 'fooBar'
	     */
	    var camelCase = createCompounder(function(result, word, index) {
	      word = word.toLowerCase();
	      return result + (index ? capitalize(word) : word);
	    });
	
	    /**
	     * Converts the first character of `string` to upper case and the remaining
	     * to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to capitalize.
	     * @returns {string} Returns the capitalized string.
	     * @example
	     *
	     * _.capitalize('FRED');
	     * // => 'Fred'
	     */
	    function capitalize(string) {
	      return upperFirst(toString(string).toLowerCase());
	    }
	
	    /**
	     * Deburrs `string` by converting
	     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	     * to basic latin letters and removing
	     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to deburr.
	     * @returns {string} Returns the deburred string.
	     * @example
	     *
	     * _.deburr('déjà vu');
	     * // => 'deja vu'
	     */
	    function deburr(string) {
	      string = toString(string);
	      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');
	    }
	
	    /**
	     * Checks if `string` ends with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to search.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=string.length] The position to search from.
	     * @returns {boolean} Returns `true` if `string` ends with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.endsWith('abc', 'c');
	     * // => true
	     *
	     * _.endsWith('abc', 'b');
	     * // => false
	     *
	     * _.endsWith('abc', 'b', 2);
	     * // => true
	     */
	    function endsWith(string, target, position) {
	      string = toString(string);
	      target = typeof target == 'string' ? target : (target + '');
	
	      var length = string.length;
	      position = position === undefined
	        ? length
	        : baseClamp(toInteger(position), 0, length);
	
	      position -= target.length;
	      return position >= 0 && string.indexOf(target, position) == position;
	    }
	
	    /**
	     * Converts the characters "&", "<", ">", '"', "'", and "\`" in `string` to
	     * their corresponding HTML entities.
	     *
	     * **Note:** No other characters are escaped. To escape additional
	     * characters use a third-party library like [_he_](https://mths.be/he).
	     *
	     * Though the ">" character is escaped for symmetry, characters like
	     * ">" and "/" don't need escaping in HTML and have no special meaning
	     * unless they're part of a tag or unquoted attribute value. See
	     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
	     * (under "semi-related fun fact") for more details.
	     *
	     * Backticks are escaped because in IE < 9, they can break out of
	     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),
	     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and
	     * [#133](https://html5sec.org/#133) of the
	     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.
	     *
	     * When working with HTML you should always
	     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
	     * XSS vectors.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escape('fred, barney, & pebbles');
	     * // => 'fred, barney, &amp; pebbles'
	     */
	    function escape(string) {
	      string = toString(string);
	      return (string && reHasUnescapedHtml.test(string))
	        ? string.replace(reUnescapedHtml, escapeHtmlChar)
	        : string;
	    }
	
	    /**
	     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
	     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escapeRegExp('[lodash](https://lodash.com/)');
	     * // => '\[lodash\]\(https://lodash\.com/\)'
	     */
	    function escapeRegExp(string) {
	      string = toString(string);
	      return (string && reHasRegExpChar.test(string))
	        ? string.replace(reRegExpChar, '\\$&')
	        : string;
	    }
	
	    /**
	     * Converts `string` to
	     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the kebab cased string.
	     * @example
	     *
	     * _.kebabCase('Foo Bar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('fooBar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('__FOO_BAR__');
	     * // => 'foo-bar'
	     */
	    var kebabCase = createCompounder(function(result, word, index) {
	      return result + (index ? '-' : '') + word.toLowerCase();
	    });
	
	    /**
	     * Converts `string`, as space separated words, to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.lowerCase('--Foo-Bar--');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('fooBar');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('__FOO_BAR__');
	     * // => 'foo bar'
	     */
	    var lowerCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toLowerCase();
	    });
	
	    /**
	     * Converts the first character of `string` to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.lowerFirst('Fred');
	     * // => 'fred'
	     *
	     * _.lowerFirst('FRED');
	     * // => 'fRED'
	     */
	    var lowerFirst = createCaseFirst('toLowerCase');
	
	    /**
	     * Pads `string` on the left and right sides if it's shorter than `length`.
	     * Padding characters are truncated if they can't be evenly divided by `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.pad('abc', 8);
	     * // => '  abc   '
	     *
	     * _.pad('abc', 8, '_-');
	     * // => '_-abc_-_'
	     *
	     * _.pad('abc', 3);
	     * // => 'abc'
	     */
	    function pad(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);
	
	      var strLength = length ? stringSize(string) : 0;
	      if (!length || strLength >= length) {
	        return string;
	      }
	      var mid = (length - strLength) / 2;
	      return (
	        createPadding(nativeFloor(mid), chars) +
	        string +
	        createPadding(nativeCeil(mid), chars)
	      );
	    }
	
	    /**
	     * Pads `string` on the right side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padEnd('abc', 6);
	     * // => 'abc   '
	     *
	     * _.padEnd('abc', 6, '_-');
	     * // => 'abc_-_'
	     *
	     * _.padEnd('abc', 3);
	     * // => 'abc'
	     */
	    function padEnd(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);
	
	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (string + createPadding(length - strLength, chars))
	        : string;
	    }
	
	    /**
	     * Pads `string` on the left side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padStart('abc', 6);
	     * // => '   abc'
	     *
	     * _.padStart('abc', 6, '_-');
	     * // => '_-_abc'
	     *
	     * _.padStart('abc', 3);
	     * // => 'abc'
	     */
	    function padStart(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);
	
	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (createPadding(length - strLength, chars) + string)
	        : string;
	    }
	
	    /**
	     * Converts `string` to an integer of the specified radix. If `radix` is
	     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
	     * hexadecimal, in which case a `radix` of `16` is used.
	     *
	     * **Note:** This method aligns with the
	     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category String
	     * @param {string} string The string to convert.
	     * @param {number} [radix=10] The radix to interpret `value` by.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.parseInt('08');
	     * // => 8
	     *
	     * _.map(['6', '08', '10'], _.parseInt);
	     * // => [6, 8, 10]
	     */
	    function parseInt(string, radix, guard) {
	      // Chrome fails to trim leading <BOM> whitespace characters.
	      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.
	      if (guard || radix == null) {
	        radix = 0;
	      } else if (radix) {
	        radix = +radix;
	      }
	      string = toString(string).replace(reTrim, '');
	      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));
	    }
	
	    /**
	     * Repeats the given string `n` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to repeat.
	     * @param {number} [n=0] The number of times to repeat the string.
	     * @returns {string} Returns the repeated string.
	     * @example
	     *
	     * _.repeat('*', 3);
	     * // => '***'
	     *
	     * _.repeat('abc', 2);
	     * // => 'abcabc'
	     *
	     * _.repeat('abc', 0);
	     * // => ''
	     */
	    function repeat(string, n) {
	      return baseRepeat(toString(string), toInteger(n));
	    }
	
	    /**
	     * Replaces matches for `pattern` in `string` with `replacement`.
	     *
	     * **Note:** This method is based on
	     * [`String#replace`](https://mdn.io/String/replace).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to modify.
	     * @param {RegExp|string} pattern The pattern to replace.
	     * @param {Function|string} replacement The match replacement.
	     * @returns {string} Returns the modified string.
	     * @example
	     *
	     * _.replace('Hi Fred', 'Fred', 'Barney');
	     * // => 'Hi Barney'
	     */
	    function replace() {
	      var args = arguments,
	          string = toString(args[0]);
	
	      return args.length < 3 ? string : string.replace(args[1], args[2]);
	    }
	
	    /**
	     * Converts `string` to
	     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the snake cased string.
	     * @example
	     *
	     * _.snakeCase('Foo Bar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('fooBar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('--FOO-BAR--');
	     * // => 'foo_bar'
	     */
	    var snakeCase = createCompounder(function(result, word, index) {
	      return result + (index ? '_' : '') + word.toLowerCase();
	    });
	
	    /**
	     * Splits `string` by `separator`.
	     *
	     * **Note:** This method is based on
	     * [`String#split`](https://mdn.io/String/split).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to split.
	     * @param {RegExp|string} separator The separator pattern to split by.
	     * @param {number} [limit] The length to truncate results to.
	     * @returns {Array} Returns the new array of string segments.
	     * @example
	     *
	     * _.split('a-b-c', '-', 2);
	     * // => ['a', 'b']
	     */
	    function split(string, separator, limit) {
	      return toString(string).split(separator, limit);
	    }
	
	    /**
	     * Converts `string` to
	     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.1.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the start cased string.
	     * @example
	     *
	     * _.startCase('--foo-bar--');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('fooBar');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('__FOO_BAR__');
	     * // => 'FOO BAR'
	     */
	    var startCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + upperFirst(word);
	    });
	
	    /**
	     * Checks if `string` starts with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to search.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=0] The position to search from.
	     * @returns {boolean} Returns `true` if `string` starts with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.startsWith('abc', 'a');
	     * // => true
	     *
	     * _.startsWith('abc', 'b');
	     * // => false
	     *
	     * _.startsWith('abc', 'b', 1);
	     * // => true
	     */
	    function startsWith(string, target, position) {
	      string = toString(string);
	      position = baseClamp(toInteger(position), 0, string.length);
	      return string.lastIndexOf(target, position) == position;
	    }
	
	    /**
	     * Creates a compiled template function that can interpolate data properties
	     * in "interpolate" delimiters, HTML-escape interpolated data properties in
	     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
	     * properties may be accessed as free variables in the template. If a setting
	     * object is given it takes precedence over `_.templateSettings` values.
	     *
	     * **Note:** In the development build `_.template` utilizes
	     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
	     * for easier debugging.
	     *
	     * For more information on precompiling templates see
	     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
	     *
	     * For more information on Chrome extension sandboxes see
	     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The template string.
	     * @param {Object} [options={}] The options object.
	     * @param {RegExp} [options.escape=_.templateSettings.escape]
	     *  The HTML "escape" delimiter.
	     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
	     *  The "evaluate" delimiter.
	     * @param {Object} [options.imports=_.templateSettings.imports]
	     *  An object to import into the template as free variables.
	     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
	     *  The "interpolate" delimiter.
	     * @param {string} [options.sourceURL='lodash.templateSources[n]']
	     *  The sourceURL of the compiled template.
	     * @param {string} [options.variable='obj']
	     *  The data object variable name.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the compiled template function.
	     * @example
	     *
	     * // Use the "interpolate" delimiter to create a compiled template.
	     * var compiled = _.template('hello <%= user %>!');
	     * compiled({ 'user': 'fred' });
	     * // => 'hello fred!'
	     *
	     * // Use the HTML "escape" delimiter to escape data property values.
	     * var compiled = _.template('<b><%- value %></b>');
	     * compiled({ 'value': '<script>' });
	     * // => '<b>&lt;script&gt;</b>'
	     *
	     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
	     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the internal `print` function in "evaluate" delimiters.
	     * var compiled = _.template('<% print("hello " + user); %>!');
	     * compiled({ 'user': 'barney' });
	     * // => 'hello barney!'
	     *
	     * // Use the ES delimiter as an alternative to the default "interpolate" delimiter.
	     * var compiled = _.template('hello ${ user }!');
	     * compiled({ 'user': 'pebbles' });
	     * // => 'hello pebbles!'
	     *
	     * // Use custom template delimiters.
	     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
	     * var compiled = _.template('hello {{ user }}!');
	     * compiled({ 'user': 'mustache' });
	     * // => 'hello mustache!'
	     *
	     * // Use backslashes to treat delimiters as plain text.
	     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
	     * compiled({ 'value': 'ignored' });
	     * // => '<%- value %>'
	     *
	     * // Use the `imports` option to import `jQuery` as `jq`.
	     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
	     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
	     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
	     * compiled(data);
	     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
	     *
	     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
	     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
	     * compiled.source;
	     * // => function(data) {
	     * //   var __t, __p = '';
	     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
	     * //   return __p;
	     * // }
	     *
	     * // Use the `source` property to inline compiled templates for meaningful
	     * // line numbers in error messages and stack traces.
	     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\
	     *   var JST = {\
	     *     "main": ' + _.template(mainText).source + '\
	     *   };\
	     * ');
	     */
	    function template(string, options, guard) {
	      // Based on John Resig's `tmpl` implementation
	      // (http://ejohn.org/blog/javascript-micro-templating/)
	      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
	      var settings = lodash.templateSettings;
	
	      if (guard && isIterateeCall(string, options, guard)) {
	        options = undefined;
	      }
	      string = toString(string);
	      options = assignInWith({}, options, settings, assignInDefaults);
	
	      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),
	          importsKeys = keys(imports),
	          importsValues = baseValues(imports, importsKeys);
	
	      var isEscaping,
	          isEvaluating,
	          index = 0,
	          interpolate = options.interpolate || reNoMatch,
	          source = "__p += '";
	
	      // Compile the regexp to match each delimiter.
	      var reDelimiters = RegExp(
	        (options.escape || reNoMatch).source + '|' +
	        interpolate.source + '|' +
	        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
	        (options.evaluate || reNoMatch).source + '|$'
	      , 'g');
	
	      // Use a sourceURL for easier debugging.
	      var sourceURL = '//# sourceURL=' +
	        ('sourceURL' in options
	          ? options.sourceURL
	          : ('lodash.templateSources[' + (++templateCounter) + ']')
	        ) + '\n';
	
	      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
	        interpolateValue || (interpolateValue = esTemplateValue);
	
	        // Escape characters that can't be included in string literals.
	        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
	
	        // Replace delimiters with snippets.
	        if (escapeValue) {
	          isEscaping = true;
	          source += "' +\n__e(" + escapeValue + ") +\n'";
	        }
	        if (evaluateValue) {
	          isEvaluating = true;
	          source += "';\n" + evaluateValue + ";\n__p += '";
	        }
	        if (interpolateValue) {
	          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
	        }
	        index = offset + match.length;
	
	        // The JS engine embedded in Adobe products needs `match` returned in
	        // order to produce the correct `offset` value.
	        return match;
	      });
	
	      source += "';\n";
	
	      // If `variable` is not specified wrap a with-statement around the generated
	      // code to add the data object to the top of the scope chain.
	      var variable = options.variable;
	      if (!variable) {
	        source = 'with (obj) {\n' + source + '\n}\n';
	      }
	      // Cleanup code by stripping empty strings.
	      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
	        .replace(reEmptyStringMiddle, '$1')
	        .replace(reEmptyStringTrailing, '$1;');
	
	      // Frame code as the function body.
	      source = 'function(' + (variable || 'obj') + ') {\n' +
	        (variable
	          ? ''
	          : 'obj || (obj = {});\n'
	        ) +
	        "var __t, __p = ''" +
	        (isEscaping
	           ? ', __e = _.escape'
	           : ''
	        ) +
	        (isEvaluating
	          ? ', __j = Array.prototype.join;\n' +
	            "function print() { __p += __j.call(arguments, '') }\n"
	          : ';\n'
	        ) +
	        source +
	        'return __p\n}';
	
	      var result = attempt(function() {
	        return Function(importsKeys, sourceURL + 'return ' + source)
	          .apply(undefined, importsValues);
	      });
	
	      // Provide the compiled function's source by its `toString` method or
	      // the `source` property as a convenience for inlining compiled templates.
	      result.source = source;
	      if (isError(result)) {
	        throw result;
	      }
	      return result;
	    }
	
	    /**
	     * Converts `string`, as a whole, to lower case just like
	     * [String#toLowerCase](https://mdn.io/toLowerCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.toLower('--Foo-Bar--');
	     * // => '--foo-bar--'
	     *
	     * _.toLower('fooBar');
	     * // => 'foobar'
	     *
	     * _.toLower('__FOO_BAR__');
	     * // => '__foo_bar__'
	     */
	    function toLower(value) {
	      return toString(value).toLowerCase();
	    }
	
	    /**
	     * Converts `string`, as a whole, to upper case just like
	     * [String#toUpperCase](https://mdn.io/toUpperCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.toUpper('--foo-bar--');
	     * // => '--FOO-BAR--'
	     *
	     * _.toUpper('fooBar');
	     * // => 'FOOBAR'
	     *
	     * _.toUpper('__foo_bar__');
	     * // => '__FOO_BAR__'
	     */
	    function toUpper(value) {
	      return toString(value).toUpperCase();
	    }
	
	    /**
	     * Removes leading and trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trim('  abc  ');
	     * // => 'abc'
	     *
	     * _.trim('-_-abc-_-', '_-');
	     * // => 'abc'
	     *
	     * _.map(['  foo  ', '  bar  '], _.trim);
	     * // => ['foo', 'bar']
	     */
	    function trim(string, chars, guard) {
	      string = toString(string);
	      if (!string) {
	        return string;
	      }
	      if (guard || chars === undefined) {
	        return string.replace(reTrim, '');
	      }
	      chars = (chars + '');
	      if (!chars) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          chrSymbols = stringToArray(chars);
	
	      return strSymbols
	        .slice(charsStartIndex(strSymbols, chrSymbols), charsEndIndex(strSymbols, chrSymbols) + 1)
	        .join('');
	    }
	
	    /**
	     * Removes trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimEnd('  abc  ');
	     * // => '  abc'
	     *
	     * _.trimEnd('-_-abc-_-', '_-');
	     * // => '-_-abc'
	     */
	    function trimEnd(string, chars, guard) {
	      string = toString(string);
	      if (!string) {
	        return string;
	      }
	      if (guard || chars === undefined) {
	        return string.replace(reTrimEnd, '');
	      }
	      chars = (chars + '');
	      if (!chars) {
	        return string;
	      }
	      var strSymbols = stringToArray(string);
	      return strSymbols
	        .slice(0, charsEndIndex(strSymbols, stringToArray(chars)) + 1)
	        .join('');
	    }
	
	    /**
	     * Removes leading whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimStart('  abc  ');
	     * // => 'abc  '
	     *
	     * _.trimStart('-_-abc-_-', '_-');
	     * // => 'abc-_-'
	     */
	    function trimStart(string, chars, guard) {
	      string = toString(string);
	      if (!string) {
	        return string;
	      }
	      if (guard || chars === undefined) {
	        return string.replace(reTrimStart, '');
	      }
	      chars = (chars + '');
	      if (!chars) {
	        return string;
	      }
	      var strSymbols = stringToArray(string);
	      return strSymbols
	        .slice(charsStartIndex(strSymbols, stringToArray(chars)))
	        .join('');
	    }
	
	    /**
	     * Truncates `string` if it's longer than the given maximum string length.
	     * The last characters of the truncated string are replaced with the omission
	     * string which defaults to "...".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to truncate.
	     * @param {Object} [options={}] The options object.
	     * @param {number} [options.length=30] The maximum string length.
	     * @param {string} [options.omission='...'] The string to indicate text is omitted.
	     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
	     * @returns {string} Returns the truncated string.
	     * @example
	     *
	     * _.truncate('hi-diddly-ho there, neighborino');
	     * // => 'hi-diddly-ho there, neighbo...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': ' '
	     * });
	     * // => 'hi-diddly-ho there,...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': /,? +/
	     * });
	     * // => 'hi-diddly-ho there...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'omission': ' [...]'
	     * });
	     * // => 'hi-diddly-ho there, neig [...]'
	     */
	    function truncate(string, options) {
	      var length = DEFAULT_TRUNC_LENGTH,
	          omission = DEFAULT_TRUNC_OMISSION;
	
	      if (isObject(options)) {
	        var separator = 'separator' in options ? options.separator : separator;
	        length = 'length' in options ? toInteger(options.length) : length;
	        omission = 'omission' in options ? toString(options.omission) : omission;
	      }
	      string = toString(string);
	
	      var strLength = string.length;
	      if (reHasComplexSymbol.test(string)) {
	        var strSymbols = stringToArray(string);
	        strLength = strSymbols.length;
	      }
	      if (length >= strLength) {
	        return string;
	      }
	      var end = length - stringSize(omission);
	      if (end < 1) {
	        return omission;
	      }
	      var result = strSymbols
	        ? strSymbols.slice(0, end).join('')
	        : string.slice(0, end);
	
	      if (separator === undefined) {
	        return result + omission;
	      }
	      if (strSymbols) {
	        end += (result.length - end);
	      }
	      if (isRegExp(separator)) {
	        if (string.slice(end).search(separator)) {
	          var match,
	              substring = result;
	
	          if (!separator.global) {
	            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
	          }
	          separator.lastIndex = 0;
	          while ((match = separator.exec(substring))) {
	            var newEnd = match.index;
	          }
	          result = result.slice(0, newEnd === undefined ? end : newEnd);
	        }
	      } else if (string.indexOf(separator, end) != end) {
	        var index = result.lastIndexOf(separator);
	        if (index > -1) {
	          result = result.slice(0, index);
	        }
	      }
	      return result + omission;
	    }
	
	    /**
	     * The inverse of `_.escape`; this method converts the HTML entities
	     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to
	     * their corresponding characters.
	     *
	     * **Note:** No other HTML entities are unescaped. To unescape additional
	     * HTML entities use a third-party library like [_he_](https://mths.be/he).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.6.0
	     * @category String
	     * @param {string} [string=''] The string to unescape.
	     * @returns {string} Returns the unescaped string.
	     * @example
	     *
	     * _.unescape('fred, barney, &amp; pebbles');
	     * // => 'fred, barney, & pebbles'
	     */
	    function unescape(string) {
	      string = toString(string);
	      return (string && reHasEscapedHtml.test(string))
	        ? string.replace(reEscapedHtml, unescapeHtmlChar)
	        : string;
	    }
	
	    /**
	     * Converts `string`, as space separated words, to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.upperCase('--foo-bar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('fooBar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('__foo_bar__');
	     * // => 'FOO BAR'
	     */
	    var upperCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toUpperCase();
	    });
	
	    /**
	     * Converts the first character of `string` to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.upperFirst('fred');
	     * // => 'Fred'
	     *
	     * _.upperFirst('FRED');
	     * // => 'FRED'
	     */
	    var upperFirst = createCaseFirst('toUpperCase');
	
	    /**
	     * Splits `string` into an array of its words.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {RegExp|string} [pattern] The pattern to match words.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the words of `string`.
	     * @example
	     *
	     * _.words('fred, barney, & pebbles');
	     * // => ['fred', 'barney', 'pebbles']
	     *
	     * _.words('fred, barney, & pebbles', /[^, ]+/g);
	     * // => ['fred', 'barney', '&', 'pebbles']
	     */
	    function words(string, pattern, guard) {
	      string = toString(string);
	      pattern = guard ? undefined : pattern;
	
	      if (pattern === undefined) {
	        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;
	      }
	      return string.match(pattern) || [];
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Attempts to invoke `func`, returning either the result or the caught error
	     * object. Any additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Function} func The function to attempt.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {*} Returns the `func` result or error object.
	     * @example
	     *
	     * // Avoid throwing errors for invalid selectors.
	     * var elements = _.attempt(function(selector) {
	     *   return document.querySelectorAll(selector);
	     * }, '>_>');
	     *
	     * if (_.isError(elements)) {
	     *   elements = [];
	     * }
	     */
	    var attempt = rest(function(func, args) {
	      try {
	        return apply(func, undefined, args);
	      } catch (e) {
	        return isError(e) ? e : new Error(e);
	      }
	    });
	
	    /**
	     * Binds methods of an object to the object itself, overwriting the existing
	     * method.
	     *
	     * **Note:** This method doesn't set the "length" property of bound functions.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Object} object The object to bind and assign the bound methods to.
	     * @param {...(string|string[])} methodNames The object method names to bind,
	     *  specified individually or in arrays.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var view = {
	     *   'label': 'docs',
	     *   'onClick': function() {
	     *     console.log('clicked ' + this.label);
	     *   }
	     * };
	     *
	     * _.bindAll(view, 'onClick');
	     * jQuery(element).on('click', view.onClick);
	     * // => Logs 'clicked docs' when clicked.
	     */
	    var bindAll = rest(function(object, methodNames) {
	      arrayEach(baseFlatten(methodNames, 1), function(key) {
	        object[key] = bind(object[key], object);
	      });
	      return object;
	    });
	
	    /**
	     * Creates a function that iterates over `pairs` invoking the corresponding
	     * function of the first predicate to return truthy. The predicate-function
	     * pairs are invoked with the `this` binding and arguments of the created
	     * function.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Array} pairs The predicate-function pairs.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.cond([
	     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
	     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
	     *   [_.constant(true),                _.constant('no match')]
	     * ]);
	     *
	     * func({ 'a': 1, 'b': 2 });
	     * // => 'matches A'
	     *
	     * func({ 'a': 0, 'b': 1 });
	     * // => 'matches B'
	     *
	     * func({ 'a': '1', 'b': '2' });
	     * // => 'no match'
	     */
	    function cond(pairs) {
	      var length = pairs ? pairs.length : 0,
	          toIteratee = getIteratee();
	
	      pairs = !length ? [] : arrayMap(pairs, function(pair) {
	        if (typeof pair[1] != 'function') {
	          throw new TypeError(FUNC_ERROR_TEXT);
	        }
	        return [toIteratee(pair[0]), pair[1]];
	      });
	
	      return rest(function(args) {
	        var index = -1;
	        while (++index < length) {
	          var pair = pairs[index];
	          if (apply(pair[0], this, args)) {
	            return apply(pair[1], this, args);
	          }
	        }
	      });
	    }
	
	    /**
	     * Creates a function that invokes the predicate properties of `source` with
	     * the corresponding property values of a given object, returning `true` if
	     * all predicates return truthy, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * _.filter(users, _.conforms({ 'age': _.partial(_.gt, _, 38) }));
	     * // => [{ 'user': 'fred', 'age': 40 }]
	     */
	    function conforms(source) {
	      return baseConforms(baseClone(source, true));
	    }
	
	    /**
	     * Creates a function that returns `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {*} value The value to return from the new function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     * var getter = _.constant(object);
	     *
	     * getter() === object;
	     * // => true
	     */
	    function constant(value) {
	      return function() {
	        return value;
	      };
	    }
	
	    /**
	     * Creates a function that returns the result of invoking the given functions
	     * with the `this` binding of the created function, where each successive
	     * invocation is supplied the return value of the previous.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] Functions to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flow(_.add, square);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flow = createFlow();
	
	    /**
	     * This method is like `_.flow` except that it creates a function that
	     * invokes the given functions from right to left.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] Functions to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flowRight(square, _.add);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flowRight = createFlow(true);
	
	    /**
	     * This method returns the first argument given to it.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {*} value Any value.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * _.identity(object) === object;
	     * // => true
	     */
	    function identity(value) {
	      return value;
	    }
	
	    /**
	     * Creates a function that invokes `func` with the arguments of the created
	     * function. If `func` is a property name the created function returns the
	     * property value for a given element. If `func` is an array or object the
	     * created function returns `true` for elements that contain the equivalent
	     * source properties, otherwise it returns `false`.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Util
	     * @param {*} [func=_.identity] The value to convert to a callback.
	     * @returns {Function} Returns the callback.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
	     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, _.iteratee(['user', 'fred']));
	     * // => [{ 'user': 'fred', 'age': 40 }]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, _.iteratee('user'));
	     * // => ['barney', 'fred']
	     *
	     * // Create custom iteratee shorthands.
	     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
	     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
	     *     return func.test(string);
	     *   };
	     * });
	     *
	     * _.filter(['abc', 'def'], /ef/);
	     * // => ['def']
	     */
	    function iteratee(func) {
	      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));
	    }
	
	    /**
	     * Creates a function that performs a partial deep comparison between a given
	     * object and `source`, returning `true` if the given object has equivalent
	     * property values, else `false`. The created function is equivalent to
	     * `_.isMatch` with a `source` partially applied.
	     *
	     * **Note:** This method supports comparing the same values as `_.isEqual`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.filter(users, _.matches({ 'age': 40, 'active': false }));
	     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]
	     */
	    function matches(source) {
	      return baseMatches(baseClone(source, true));
	    }
	
	    /**
	     * Creates a function that performs a partial deep comparison between the
	     * value at `path` of a given object to `srcValue`, returning `true` if the
	     * object value is equivalent, else `false`.
	     *
	     * **Note:** This method supports comparing the same values as `_.isEqual`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * _.find(users, _.matchesProperty('user', 'fred'));
	     * // => { 'user': 'fred' }
	     */
	    function matchesProperty(path, srcValue) {
	      return baseMatchesProperty(path, baseClone(srcValue, true));
	    }
	
	    /**
	     * Creates a function that invokes the method at `path` of a given object.
	     * Any additional arguments are provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': { 'c': _.constant(2) } } },
	     *   { 'a': { 'b': { 'c': _.constant(1) } } }
	     * ];
	     *
	     * _.map(objects, _.method('a.b.c'));
	     * // => [2, 1]
	     *
	     * _.map(objects, _.method(['a', 'b', 'c']));
	     * // => [2, 1]
	     */
	    var method = rest(function(path, args) {
	      return function(object) {
	        return baseInvoke(object, path, args);
	      };
	    });
	
	    /**
	     * The opposite of `_.method`; this method creates a function that invokes
	     * the method at a given path of `object`. Any additional arguments are
	     * provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var array = _.times(3, _.constant),
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
	     * // => [2, 0]
	     */
	    var methodOf = rest(function(object, args) {
	      return function(path) {
	        return baseInvoke(object, path, args);
	      };
	    });
	
	    /**
	     * Adds all own enumerable string keyed function properties of a source
	     * object to the destination object. If `object` is a function then methods
	     * are added to its prototype as well.
	     *
	     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
	     * avoid conflicts caused by modifying the original.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Function|Object} [object=lodash] The destination object.
	     * @param {Object} source The object of functions to add.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
	     * @returns {Function|Object} Returns `object`.
	     * @example
	     *
	     * function vowels(string) {
	     *   return _.filter(string, function(v) {
	     *     return /[aeiou]/i.test(v);
	     *   });
	     * }
	     *
	     * _.mixin({ 'vowels': vowels });
	     * _.vowels('fred');
	     * // => ['e']
	     *
	     * _('fred').vowels().value();
	     * // => ['e']
	     *
	     * _.mixin({ 'vowels': vowels }, { 'chain': false });
	     * _('fred').vowels();
	     * // => ['e']
	     */
	    function mixin(object, source, options) {
	      var props = keys(source),
	          methodNames = baseFunctions(source, props);
	
	      if (options == null &&
	          !(isObject(source) && (methodNames.length || !props.length))) {
	        options = source;
	        source = object;
	        object = this;
	        methodNames = baseFunctions(source, keys(source));
	      }
	      var chain = (isObject(options) && 'chain' in options) ? options.chain : true,
	          isFunc = isFunction(object);
	
	      arrayEach(methodNames, function(methodName) {
	        var func = source[methodName];
	        object[methodName] = func;
	        if (isFunc) {
	          object.prototype[methodName] = function() {
	            var chainAll = this.__chain__;
	            if (chain || chainAll) {
	              var result = object(this.__wrapped__),
	                  actions = result.__actions__ = copyArray(this.__actions__);
	
	              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
	              result.__chain__ = chainAll;
	              return result;
	            }
	            return func.apply(object, arrayPush([this.value()], arguments));
	          };
	        }
	      });
	
	      return object;
	    }
	
	    /**
	     * Reverts the `_` variable to its previous value and returns a reference to
	     * the `lodash` function.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @returns {Function} Returns the `lodash` function.
	     * @example
	     *
	     * var lodash = _.noConflict();
	     */
	    function noConflict() {
	      if (root._ === this) {
	        root._ = oldDash;
	      }
	      return this;
	    }
	
	    /**
	     * A no-operation function that returns `undefined` regardless of the
	     * arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Util
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * _.noop(object) === undefined;
	     * // => true
	     */
	    function noop() {
	      // No operation performed.
	    }
	
	    /**
	     * Creates a function that returns its nth argument.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [n=0] The index of the argument to return.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.nthArg(1);
	     *
	     * func('a', 'b', 'c');
	     * // => 'b'
	     */
	    function nthArg(n) {
	      n = toInteger(n);
	      return function() {
	        return arguments[n];
	      };
	    }
	
	    /**
	     * Creates a function that invokes `iteratees` with the arguments provided
	     * to the created function and returns their results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} iteratees The iteratees to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.over(Math.max, Math.min);
	     *
	     * func(1, 2, 3, 4);
	     * // => [4, 1]
	     */
	    var over = createOver(arrayMap);
	
	    /**
	     * Creates a function that checks if **all** of the `predicates` return
	     * truthy when invoked with the arguments provided to the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} predicates The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overEvery(Boolean, isFinite);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => false
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overEvery = createOver(arrayEvery);
	
	    /**
	     * Creates a function that checks if **any** of the `predicates` return
	     * truthy when invoked with the arguments provided to the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} predicates The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overSome(Boolean, isFinite);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => true
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overSome = createOver(arraySome);
	
	    /**
	     * Creates a function that returns the value at `path` of a given object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': { 'c': 2 } } },
	     *   { 'a': { 'b': { 'c': 1 } } }
	     * ];
	     *
	     * _.map(objects, _.property('a.b.c'));
	     * // => [2, 1]
	     *
	     * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');
	     * // => [1, 2]
	     */
	    function property(path) {
	      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);
	    }
	
	    /**
	     * The opposite of `_.property`; this method creates a function that returns
	     * the value at a given path of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var array = [0, 1, 2],
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
	     * // => [2, 0]
	     */
	    function propertyOf(object) {
	      return function(path) {
	        return object == null ? undefined : baseGet(object, path);
	      };
	    }
	
	    /**
	     * Creates an array of numbers (positive and/or negative) progressing from
	     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	     * `start` is specified without an `end` or `step`. If `end` is not specified
	     * it's set to `start` with `start` then set to `0`.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the new array of numbers.
	     * @example
	     *
	     * _.range(4);
	     * // => [0, 1, 2, 3]
	     *
	     * _.range(-4);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 5);
	     * // => [1, 2, 3, 4]
	     *
	     * _.range(0, 20, 5);
	     * // => [0, 5, 10, 15]
	     *
	     * _.range(0, -4, -1);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.range(0);
	     * // => []
	     */
	    var range = createRange();
	
	    /**
	     * This method is like `_.range` except that it populates values in
	     * descending order.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the new array of numbers.
	     * @example
	     *
	     * _.rangeRight(4);
	     * // => [3, 2, 1, 0]
	     *
	     * _.rangeRight(-4);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 5);
	     * // => [4, 3, 2, 1]
	     *
	     * _.rangeRight(0, 20, 5);
	     * // => [15, 10, 5, 0]
	     *
	     * _.rangeRight(0, -4, -1);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.rangeRight(0);
	     * // => []
	     */
	    var rangeRight = createRange(true);
	
	    /**
	     * Invokes the iteratee `n` times, returning an array of the results of
	     * each invocation. The iteratee is invoked with one argument; (index).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} n The number of times to invoke `iteratee`.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.times(3, String);
	     * // => ['0', '1', '2']
	     *
	     *  _.times(4, _.constant(true));
	     * // => [true, true, true, true]
	     */
	    function times(n, iteratee) {
	      n = toInteger(n);
	      if (n < 1 || n > MAX_SAFE_INTEGER) {
	        return [];
	      }
	      var index = MAX_ARRAY_LENGTH,
	          length = nativeMin(n, MAX_ARRAY_LENGTH);
	
	      iteratee = getIteratee(iteratee);
	      n -= MAX_ARRAY_LENGTH;
	
	      var result = baseTimes(length, iteratee);
	      while (++index < n) {
	        iteratee(index);
	      }
	      return result;
	    }
	
	    /**
	     * Converts `value` to a property path array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the new property path array.
	     * @example
	     *
	     * _.toPath('a.b.c');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toPath('a[0].b.c');
	     * // => ['a', '0', 'b', 'c']
	     *
	     * var path = ['a', 'b', 'c'],
	     *     newPath = _.toPath(path);
	     *
	     * console.log(newPath);
	     * // => ['a', 'b', 'c']
	     *
	     * console.log(path === newPath);
	     * // => false
	     */
	    function toPath(value) {
	      if (isArray(value)) {
	        return arrayMap(value, baseCastKey);
	      }
	      return isSymbol(value) ? [value] : copyArray(stringToPath(value));
	    }
	
	    /**
	     * Generates a unique ID. If `prefix` is given the ID is appended to it.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {string} [prefix=''] The value to prefix the ID with.
	     * @returns {string} Returns the unique ID.
	     * @example
	     *
	     * _.uniqueId('contact_');
	     * // => 'contact_104'
	     *
	     * _.uniqueId();
	     * // => '105'
	     */
	    function uniqueId(prefix) {
	      var id = ++idCounter;
	      return toString(prefix) + id;
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Adds two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {number} augend The first number in an addition.
	     * @param {number} addend The second number in an addition.
	     * @returns {number} Returns the total.
	     * @example
	     *
	     * _.add(6, 4);
	     * // => 10
	     */
	    var add = createMathOperation(function(augend, addend) {
	      return augend + addend;
	    });
	
	    /**
	     * Computes `number` rounded up to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round up.
	     * @param {number} [precision=0] The precision to round up to.
	     * @returns {number} Returns the rounded up number.
	     * @example
	     *
	     * _.ceil(4.006);
	     * // => 5
	     *
	     * _.ceil(6.004, 2);
	     * // => 6.01
	     *
	     * _.ceil(6040, -2);
	     * // => 6100
	     */
	    var ceil = createRound('ceil');
	
	    /**
	     * Divide two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} dividend The first number in a division.
	     * @param {number} divisor The second number in a division.
	     * @returns {number} Returns the quotient.
	     * @example
	     *
	     * _.divide(6, 4);
	     * // => 1.5
	     */
	    var divide = createMathOperation(function(dividend, divisor) {
	      return dividend / divisor;
	    });
	
	    /**
	     * Computes `number` rounded down to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round down.
	     * @param {number} [precision=0] The precision to round down to.
	     * @returns {number} Returns the rounded down number.
	     * @example
	     *
	     * _.floor(4.006);
	     * // => 4
	     *
	     * _.floor(0.046, 2);
	     * // => 0.04
	     *
	     * _.floor(4060, -2);
	     * // => 4000
	     */
	    var floor = createRound('floor');
	
	    /**
	     * Computes the maximum value of `array`. If `array` is empty or falsey
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * _.max([4, 2, 8, 6]);
	     * // => 8
	     *
	     * _.max([]);
	     * // => undefined
	     */
	    function max(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, gt)
	        : undefined;
	    }
	
	    /**
	     * This method is like `_.max` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.maxBy(objects, function(o) { return o.n; });
	     * // => { 'n': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.maxBy(objects, 'n');
	     * // => { 'n': 2 }
	     */
	    function maxBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee), gt)
	        : undefined;
	    }
	
	    /**
	     * Computes the mean of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * _.mean([4, 2, 8, 6]);
	     * // => 5
	     */
	    function mean(array) {
	      return baseMean(array, identity);
	    }
	
	    /**
	     * This method is like `_.mean` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be averaged.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.meanBy(objects, function(o) { return o.n; });
	     * // => 5
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.meanBy(objects, 'n');
	     * // => 5
	     */
	    function meanBy(array, iteratee) {
	      return baseMean(array, getIteratee(iteratee));
	    }
	
	    /**
	     * Computes the minimum value of `array`. If `array` is empty or falsey
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * _.min([4, 2, 8, 6]);
	     * // => 2
	     *
	     * _.min([]);
	     * // => undefined
	     */
	    function min(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, lt)
	        : undefined;
	    }
	
	    /**
	     * This method is like `_.min` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.minBy(objects, function(o) { return o.n; });
	     * // => { 'n': 1 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.minBy(objects, 'n');
	     * // => { 'n': 1 }
	     */
	    function minBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee), lt)
	        : undefined;
	    }
	
	    /**
	     * Multiply two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} multiplier The first number in a multiplication.
	     * @param {number} multiplicand The second number in a multiplication.
	     * @returns {number} Returns the product.
	     * @example
	     *
	     * _.multiply(6, 4);
	     * // => 24
	     */
	    var multiply = createMathOperation(function(multiplier, multiplicand) {
	      return multiplier * multiplicand;
	    });
	
	    /**
	     * Computes `number` rounded to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round.
	     * @param {number} [precision=0] The precision to round to.
	     * @returns {number} Returns the rounded number.
	     * @example
	     *
	     * _.round(4.006);
	     * // => 4
	     *
	     * _.round(4.006, 2);
	     * // => 4.01
	     *
	     * _.round(4060, -2);
	     * // => 4100
	     */
	    var round = createRound('round');
	
	    /**
	     * Subtract two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {number} minuend The first number in a subtraction.
	     * @param {number} subtrahend The second number in a subtraction.
	     * @returns {number} Returns the difference.
	     * @example
	     *
	     * _.subtract(6, 4);
	     * // => 2
	     */
	    var subtract = createMathOperation(function(minuend, subtrahend) {
	      return minuend - subtrahend;
	    });
	
	    /**
	     * Computes the sum of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * _.sum([4, 2, 8, 6]);
	     * // => 20
	     */
	    function sum(array) {
	      return (array && array.length)
	        ? baseSum(array, identity)
	        : 0;
	    }
	
	    /**
	     * This method is like `_.sum` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be summed.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.sumBy(objects, function(o) { return o.n; });
	     * // => 20
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sumBy(objects, 'n');
	     * // => 20
	     */
	    function sumBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSum(array, getIteratee(iteratee))
	        : 0;
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    // Add methods that return wrapped values in chain sequences.
	    lodash.after = after;
	    lodash.ary = ary;
	    lodash.assign = assign;
	    lodash.assignIn = assignIn;
	    lodash.assignInWith = assignInWith;
	    lodash.assignWith = assignWith;
	    lodash.at = at;
	    lodash.before = before;
	    lodash.bind = bind;
	    lodash.bindAll = bindAll;
	    lodash.bindKey = bindKey;
	    lodash.castArray = castArray;
	    lodash.chain = chain;
	    lodash.chunk = chunk;
	    lodash.compact = compact;
	    lodash.concat = concat;
	    lodash.cond = cond;
	    lodash.conforms = conforms;
	    lodash.constant = constant;
	    lodash.countBy = countBy;
	    lodash.create = create;
	    lodash.curry = curry;
	    lodash.curryRight = curryRight;
	    lodash.debounce = debounce;
	    lodash.defaults = defaults;
	    lodash.defaultsDeep = defaultsDeep;
	    lodash.defer = defer;
	    lodash.delay = delay;
	    lodash.difference = difference;
	    lodash.differenceBy = differenceBy;
	    lodash.differenceWith = differenceWith;
	    lodash.drop = drop;
	    lodash.dropRight = dropRight;
	    lodash.dropRightWhile = dropRightWhile;
	    lodash.dropWhile = dropWhile;
	    lodash.fill = fill;
	    lodash.filter = filter;
	    lodash.flatMap = flatMap;
	    lodash.flatMapDeep = flatMapDeep;
	    lodash.flatMapDepth = flatMapDepth;
	    lodash.flatten = flatten;
	    lodash.flattenDeep = flattenDeep;
	    lodash.flattenDepth = flattenDepth;
	    lodash.flip = flip;
	    lodash.flow = flow;
	    lodash.flowRight = flowRight;
	    lodash.fromPairs = fromPairs;
	    lodash.functions = functions;
	    lodash.functionsIn = functionsIn;
	    lodash.groupBy = groupBy;
	    lodash.initial = initial;
	    lodash.intersection = intersection;
	    lodash.intersectionBy = intersectionBy;
	    lodash.intersectionWith = intersectionWith;
	    lodash.invert = invert;
	    lodash.invertBy = invertBy;
	    lodash.invokeMap = invokeMap;
	    lodash.iteratee = iteratee;
	    lodash.keyBy = keyBy;
	    lodash.keys = keys;
	    lodash.keysIn = keysIn;
	    lodash.map = map;
	    lodash.mapKeys = mapKeys;
	    lodash.mapValues = mapValues;
	    lodash.matches = matches;
	    lodash.matchesProperty = matchesProperty;
	    lodash.memoize = memoize;
	    lodash.merge = merge;
	    lodash.mergeWith = mergeWith;
	    lodash.method = method;
	    lodash.methodOf = methodOf;
	    lodash.mixin = mixin;
	    lodash.negate = negate;
	    lodash.nthArg = nthArg;
	    lodash.omit = omit;
	    lodash.omitBy = omitBy;
	    lodash.once = once;
	    lodash.orderBy = orderBy;
	    lodash.over = over;
	    lodash.overArgs = overArgs;
	    lodash.overEvery = overEvery;
	    lodash.overSome = overSome;
	    lodash.partial = partial;
	    lodash.partialRight = partialRight;
	    lodash.partition = partition;
	    lodash.pick = pick;
	    lodash.pickBy = pickBy;
	    lodash.property = property;
	    lodash.propertyOf = propertyOf;
	    lodash.pull = pull;
	    lodash.pullAll = pullAll;
	    lodash.pullAllBy = pullAllBy;
	    lodash.pullAllWith = pullAllWith;
	    lodash.pullAt = pullAt;
	    lodash.range = range;
	    lodash.rangeRight = rangeRight;
	    lodash.rearg = rearg;
	    lodash.reject = reject;
	    lodash.remove = remove;
	    lodash.rest = rest;
	    lodash.reverse = reverse;
	    lodash.sampleSize = sampleSize;
	    lodash.set = set;
	    lodash.setWith = setWith;
	    lodash.shuffle = shuffle;
	    lodash.slice = slice;
	    lodash.sortBy = sortBy;
	    lodash.sortedUniq = sortedUniq;
	    lodash.sortedUniqBy = sortedUniqBy;
	    lodash.split = split;
	    lodash.spread = spread;
	    lodash.tail = tail;
	    lodash.take = take;
	    lodash.takeRight = takeRight;
	    lodash.takeRightWhile = takeRightWhile;
	    lodash.takeWhile = takeWhile;
	    lodash.tap = tap;
	    lodash.throttle = throttle;
	    lodash.thru = thru;
	    lodash.toArray = toArray;
	    lodash.toPairs = toPairs;
	    lodash.toPairsIn = toPairsIn;
	    lodash.toPath = toPath;
	    lodash.toPlainObject = toPlainObject;
	    lodash.transform = transform;
	    lodash.unary = unary;
	    lodash.union = union;
	    lodash.unionBy = unionBy;
	    lodash.unionWith = unionWith;
	    lodash.uniq = uniq;
	    lodash.uniqBy = uniqBy;
	    lodash.uniqWith = uniqWith;
	    lodash.unset = unset;
	    lodash.unzip = unzip;
	    lodash.unzipWith = unzipWith;
	    lodash.update = update;
	    lodash.updateWith = updateWith;
	    lodash.values = values;
	    lodash.valuesIn = valuesIn;
	    lodash.without = without;
	    lodash.words = words;
	    lodash.wrap = wrap;
	    lodash.xor = xor;
	    lodash.xorBy = xorBy;
	    lodash.xorWith = xorWith;
	    lodash.zip = zip;
	    lodash.zipObject = zipObject;
	    lodash.zipObjectDeep = zipObjectDeep;
	    lodash.zipWith = zipWith;
	
	    // Add aliases.
	    lodash.entries = toPairs;
	    lodash.entriesIn = toPairsIn;
	    lodash.extend = assignIn;
	    lodash.extendWith = assignInWith;
	
	    // Add methods to `lodash.prototype`.
	    mixin(lodash, lodash);
	
	    /*------------------------------------------------------------------------*/
	
	    // Add methods that return unwrapped values in chain sequences.
	    lodash.add = add;
	    lodash.attempt = attempt;
	    lodash.camelCase = camelCase;
	    lodash.capitalize = capitalize;
	    lodash.ceil = ceil;
	    lodash.clamp = clamp;
	    lodash.clone = clone;
	    lodash.cloneDeep = cloneDeep;
	    lodash.cloneDeepWith = cloneDeepWith;
	    lodash.cloneWith = cloneWith;
	    lodash.deburr = deburr;
	    lodash.divide = divide;
	    lodash.endsWith = endsWith;
	    lodash.eq = eq;
	    lodash.escape = escape;
	    lodash.escapeRegExp = escapeRegExp;
	    lodash.every = every;
	    lodash.find = find;
	    lodash.findIndex = findIndex;
	    lodash.findKey = findKey;
	    lodash.findLast = findLast;
	    lodash.findLastIndex = findLastIndex;
	    lodash.findLastKey = findLastKey;
	    lodash.floor = floor;
	    lodash.forEach = forEach;
	    lodash.forEachRight = forEachRight;
	    lodash.forIn = forIn;
	    lodash.forInRight = forInRight;
	    lodash.forOwn = forOwn;
	    lodash.forOwnRight = forOwnRight;
	    lodash.get = get;
	    lodash.gt = gt;
	    lodash.gte = gte;
	    lodash.has = has;
	    lodash.hasIn = hasIn;
	    lodash.head = head;
	    lodash.identity = identity;
	    lodash.includes = includes;
	    lodash.indexOf = indexOf;
	    lodash.inRange = inRange;
	    lodash.invoke = invoke;
	    lodash.isArguments = isArguments;
	    lodash.isArray = isArray;
	    lodash.isArrayBuffer = isArrayBuffer;
	    lodash.isArrayLike = isArrayLike;
	    lodash.isArrayLikeObject = isArrayLikeObject;
	    lodash.isBoolean = isBoolean;
	    lodash.isBuffer = isBuffer;
	    lodash.isDate = isDate;
	    lodash.isElement = isElement;
	    lodash.isEmpty = isEmpty;
	    lodash.isEqual = isEqual;
	    lodash.isEqualWith = isEqualWith;
	    lodash.isError = isError;
	    lodash.isFinite = isFinite;
	    lodash.isFunction = isFunction;
	    lodash.isInteger = isInteger;
	    lodash.isLength = isLength;
	    lodash.isMap = isMap;
	    lodash.isMatch = isMatch;
	    lodash.isMatchWith = isMatchWith;
	    lodash.isNaN = isNaN;
	    lodash.isNative = isNative;
	    lodash.isNil = isNil;
	    lodash.isNull = isNull;
	    lodash.isNumber = isNumber;
	    lodash.isObject = isObject;
	    lodash.isObjectLike = isObjectLike;
	    lodash.isPlainObject = isPlainObject;
	    lodash.isRegExp = isRegExp;
	    lodash.isSafeInteger = isSafeInteger;
	    lodash.isSet = isSet;
	    lodash.isString = isString;
	    lodash.isSymbol = isSymbol;
	    lodash.isTypedArray = isTypedArray;
	    lodash.isUndefined = isUndefined;
	    lodash.isWeakMap = isWeakMap;
	    lodash.isWeakSet = isWeakSet;
	    lodash.join = join;
	    lodash.kebabCase = kebabCase;
	    lodash.last = last;
	    lodash.lastIndexOf = lastIndexOf;
	    lodash.lowerCase = lowerCase;
	    lodash.lowerFirst = lowerFirst;
	    lodash.lt = lt;
	    lodash.lte = lte;
	    lodash.max = max;
	    lodash.maxBy = maxBy;
	    lodash.mean = mean;
	    lodash.meanBy = meanBy;
	    lodash.min = min;
	    lodash.minBy = minBy;
	    lodash.multiply = multiply;
	    lodash.noConflict = noConflict;
	    lodash.noop = noop;
	    lodash.now = now;
	    lodash.pad = pad;
	    lodash.padEnd = padEnd;
	    lodash.padStart = padStart;
	    lodash.parseInt = parseInt;
	    lodash.random = random;
	    lodash.reduce = reduce;
	    lodash.reduceRight = reduceRight;
	    lodash.repeat = repeat;
	    lodash.replace = replace;
	    lodash.result = result;
	    lodash.round = round;
	    lodash.runInContext = runInContext;
	    lodash.sample = sample;
	    lodash.size = size;
	    lodash.snakeCase = snakeCase;
	    lodash.some = some;
	    lodash.sortedIndex = sortedIndex;
	    lodash.sortedIndexBy = sortedIndexBy;
	    lodash.sortedIndexOf = sortedIndexOf;
	    lodash.sortedLastIndex = sortedLastIndex;
	    lodash.sortedLastIndexBy = sortedLastIndexBy;
	    lodash.sortedLastIndexOf = sortedLastIndexOf;
	    lodash.startCase = startCase;
	    lodash.startsWith = startsWith;
	    lodash.subtract = subtract;
	    lodash.sum = sum;
	    lodash.sumBy = sumBy;
	    lodash.template = template;
	    lodash.times = times;
	    lodash.toInteger = toInteger;
	    lodash.toLength = toLength;
	    lodash.toLower = toLower;
	    lodash.toNumber = toNumber;
	    lodash.toSafeInteger = toSafeInteger;
	    lodash.toString = toString;
	    lodash.toUpper = toUpper;
	    lodash.trim = trim;
	    lodash.trimEnd = trimEnd;
	    lodash.trimStart = trimStart;
	    lodash.truncate = truncate;
	    lodash.unescape = unescape;
	    lodash.uniqueId = uniqueId;
	    lodash.upperCase = upperCase;
	    lodash.upperFirst = upperFirst;
	
	    // Add aliases.
	    lodash.each = forEach;
	    lodash.eachRight = forEachRight;
	    lodash.first = head;
	
	    mixin(lodash, (function() {
	      var source = {};
	      baseForOwn(lodash, function(func, methodName) {
	        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
	          source[methodName] = func;
	        }
	      });
	      return source;
	    }()), { 'chain': false });
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * The semantic version number.
	     *
	     * @static
	     * @memberOf _
	     * @type {string}
	     */
	    lodash.VERSION = VERSION;
	
	    // Assign default placeholders.
	    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
	      lodash[methodName].placeholder = lodash;
	    });
	
	    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
	    arrayEach(['drop', 'take'], function(methodName, index) {
	      LazyWrapper.prototype[methodName] = function(n) {
	        var filtered = this.__filtered__;
	        if (filtered && !index) {
	          return new LazyWrapper(this);
	        }
	        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);
	
	        var result = this.clone();
	        if (filtered) {
	          result.__takeCount__ = nativeMin(n, result.__takeCount__);
	        } else {
	          result.__views__.push({
	            'size': nativeMin(n, MAX_ARRAY_LENGTH),
	            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
	          });
	        }
	        return result;
	      };
	
	      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
	        return this.reverse()[methodName](n).reverse();
	      };
	    });
	
	    // Add `LazyWrapper` methods that accept an `iteratee` value.
	    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
	      var type = index + 1,
	          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
	
	      LazyWrapper.prototype[methodName] = function(iteratee) {
	        var result = this.clone();
	        result.__iteratees__.push({
	          'iteratee': getIteratee(iteratee, 3),
	          'type': type
	        });
	        result.__filtered__ = result.__filtered__ || isFilter;
	        return result;
	      };
	    });
	
	    // Add `LazyWrapper` methods for `_.head` and `_.last`.
	    arrayEach(['head', 'last'], function(methodName, index) {
	      var takeName = 'take' + (index ? 'Right' : '');
	
	      LazyWrapper.prototype[methodName] = function() {
	        return this[takeName](1).value()[0];
	      };
	    });
	
	    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
	    arrayEach(['initial', 'tail'], function(methodName, index) {
	      var dropName = 'drop' + (index ? '' : 'Right');
	
	      LazyWrapper.prototype[methodName] = function() {
	        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
	      };
	    });
	
	    LazyWrapper.prototype.compact = function() {
	      return this.filter(identity);
	    };
	
	    LazyWrapper.prototype.find = function(predicate) {
	      return this.filter(predicate).head();
	    };
	
	    LazyWrapper.prototype.findLast = function(predicate) {
	      return this.reverse().find(predicate);
	    };
	
	    LazyWrapper.prototype.invokeMap = rest(function(path, args) {
	      if (typeof path == 'function') {
	        return new LazyWrapper(this);
	      }
	      return this.map(function(value) {
	        return baseInvoke(value, path, args);
	      });
	    });
	
	    LazyWrapper.prototype.reject = function(predicate) {
	      predicate = getIteratee(predicate, 3);
	      return this.filter(function(value) {
	        return !predicate(value);
	      });
	    };
	
	    LazyWrapper.prototype.slice = function(start, end) {
	      start = toInteger(start);
	
	      var result = this;
	      if (result.__filtered__ && (start > 0 || end < 0)) {
	        return new LazyWrapper(result);
	      }
	      if (start < 0) {
	        result = result.takeRight(-start);
	      } else if (start) {
	        result = result.drop(start);
	      }
	      if (end !== undefined) {
	        end = toInteger(end);
	        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
	      }
	      return result;
	    };
	
	    LazyWrapper.prototype.takeRightWhile = function(predicate) {
	      return this.reverse().takeWhile(predicate).reverse();
	    };
	
	    LazyWrapper.prototype.toArray = function() {
	      return this.take(MAX_ARRAY_LENGTH);
	    };
	
	    // Add `LazyWrapper` methods to `lodash.prototype`.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
	          isTaker = /^(?:head|last)$/.test(methodName),
	          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
	          retUnwrapped = isTaker || /^find/.test(methodName);
	
	      if (!lodashFunc) {
	        return;
	      }
	      lodash.prototype[methodName] = function() {
	        var value = this.__wrapped__,
	            args = isTaker ? [1] : arguments,
	            isLazy = value instanceof LazyWrapper,
	            iteratee = args[0],
	            useLazy = isLazy || isArray(value);
	
	        var interceptor = function(value) {
	          var result = lodashFunc.apply(lodash, arrayPush([value], args));
	          return (isTaker && chainAll) ? result[0] : result;
	        };
	
	        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
	          // Avoid lazy use if the iteratee has a "length" value other than `1`.
	          isLazy = useLazy = false;
	        }
	        var chainAll = this.__chain__,
	            isHybrid = !!this.__actions__.length,
	            isUnwrapped = retUnwrapped && !chainAll,
	            onlyLazy = isLazy && !isHybrid;
	
	        if (!retUnwrapped && useLazy) {
	          value = onlyLazy ? value : new LazyWrapper(this);
	          var result = func.apply(value, args);
	          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
	          return new LodashWrapper(result, chainAll);
	        }
	        if (isUnwrapped && onlyLazy) {
	          return func.apply(this, args);
	        }
	        result = this.thru(interceptor);
	        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
	      };
	    });
	
	    // Add `Array` methods to `lodash.prototype`.
	    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
	      var func = arrayProto[methodName],
	          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
	          retUnwrapped = /^(?:pop|shift)$/.test(methodName);
	
	      lodash.prototype[methodName] = function() {
	        var args = arguments;
	        if (retUnwrapped && !this.__chain__) {
	          var value = this.value();
	          return func.apply(isArray(value) ? value : [], args);
	        }
	        return this[chainName](function(value) {
	          return func.apply(isArray(value) ? value : [], args);
	        });
	      };
	    });
	
	    // Map minified method names to their real names.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var lodashFunc = lodash[methodName];
	      if (lodashFunc) {
	        var key = (lodashFunc.name + ''),
	            names = realNames[key] || (realNames[key] = []);
	
	        names.push({ 'name': methodName, 'func': lodashFunc });
	      }
	    });
	
	    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{
	      'name': 'wrapper',
	      'func': undefined
	    }];
	
	    // Add methods to `LazyWrapper`.
	    LazyWrapper.prototype.clone = lazyClone;
	    LazyWrapper.prototype.reverse = lazyReverse;
	    LazyWrapper.prototype.value = lazyValue;
	
	    // Add chain sequence methods to the `lodash` wrapper.
	    lodash.prototype.at = wrapperAt;
	    lodash.prototype.chain = wrapperChain;
	    lodash.prototype.commit = wrapperCommit;
	    lodash.prototype.next = wrapperNext;
	    lodash.prototype.plant = wrapperPlant;
	    lodash.prototype.reverse = wrapperReverse;
	    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
	
	    if (iteratorSymbol) {
	      lodash.prototype[iteratorSymbol] = wrapperToIterator;
	    }
	    return lodash;
	  }
	
	  /*--------------------------------------------------------------------------*/
	
	  // Export lodash.
	  var _ = runInContext();
	
	  // Expose lodash on the free variable `window` or `self` when available. This
	  // prevents errors in cases where lodash is loaded by a script tag in the presence
	  // of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch for more details.
	  (freeWindow || freeSelf || {})._ = _;
	
	  // Some AMD build optimizers like r.js check for condition patterns like the following:
	  if (true) {
	    // Define as an anonymous module so, through path mapping, it can be
	    // referenced as the "underscore" module.
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
	      return _;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }
	  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.
	  else if (freeExports && freeModule) {
	    // Export for Node.js.
	    if (moduleExports) {
	      (freeModule.exports = _)._ = _;
	    }
	    // Export for CommonJS support.
	    freeExports._ = _;
	  }
	  else {
	    // Export to the global object.
	    root._ = _;
	  }
	}.call(this));
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(474)(module), (function() { return this; }())))

/***/ },
/* 474 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Kua = function (_Component) {
	  _inherits(Kua, _Component);
	
	  function Kua() {
	    _classCallCheck(this, Kua);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Kua).apply(this, arguments));
	  }
	
	  _createClass(Kua, [{
	    key: 'render',
	    value: function render() {
	      var kua = this.props.kua;
	
	      return _react2.default.createElement(
	        'li',
	        { className: kua.name },
	        kua.name
	      );
	    }
	  }]);
	
	  return Kua;
	}(_react.Component);
	
	Kua.propTypes = {
	  kua: _react.PropTypes.shape({
	    name: _react.PropTypes.string,
	    value: _react.PropTypes.array
	  })
	};
	exports.default = Kua;

/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(168);
	
	var _lodash = __webpack_require__(473);
	
	var _ = _interopRequireWildcard(_lodash);
	
	var _HexagramActions = __webpack_require__(298);
	
	var HexagramActions = _interopRequireWildcard(_HexagramActions);
	
	var _iching = __webpack_require__(477);
	
	var _iching2 = _interopRequireDefault(_iching);
	
	var _lookup = __webpack_require__(478);
	
	var _HexagramImage = __webpack_require__(480);
	
	var _materialUi = __webpack_require__(300);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var styles = {
	  popover: {
	    padding: 10,
	    font_size: '2.0em'
	  }
	};
	
	var HexagramInfoCard = function (_Component) {
	  _inherits(HexagramInfoCard, _Component);
	
	  function HexagramInfoCard(props) {
	    _classCallCheck(this, HexagramInfoCard);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(HexagramInfoCard).call(this, props));
	
	    _this.handleTouchTap = function (event) {
	      var trigram = (0, _lookup.getTrigramByName)(_this.props.hexagram.trigrams[event.currentTarget.className].title);
	      _this.setState({
	        popover_open: true,
	        anchorEl: event.currentTarget,
	        trigram: trigram
	      });
	    };
	
	    _this.handleRequestClose = function () {
	      _this.setState({
	        popover_open: false
	      });
	    };
	
	    _this.state = {
	      popover_open: false,
	      trigram: _this.props.hexagram.trigrams.above
	    };
	    return _this;
	  }
	
	  _createClass(HexagramInfoCard, [{
	    key: 'render',
	    value: function render() {
	      var _props$hexagram = this.props.hexagram;
	      var trigrams = _props$hexagram.trigrams;
	      var name = _props$hexagram.name;
	      var number = _props$hexagram.number;
	      var description = _props$hexagram.description;
	
	      var innerTrigrams = this.innerTrigrams(this.props.trigrams || false);
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'hexagram-card' },
	        _react2.default.createElement(_HexagramImage.HexagramImage, { below: trigrams.below, above: trigrams.above }),
	        _react2.default.createElement(
	          'div',
	          { className: 'title' },
	          _react2.default.createElement(
	            'h3',
	            null,
	            number,
	            ': ',
	            name
	          ),
	          _react2.default.createElement(
	            'h2',
	            null,
	            description
	          )
	        ),
	        innerTrigrams
	      );
	    }
	  }, {
	    key: 'innerTrigrams',
	    value: function innerTrigrams(enabled) {
	      var above = (0, _lookup.getTrigramByName)(this.props.hexagram.trigrams.above.title);
	      var below = (0, _lookup.getTrigramByName)(this.props.hexagram.trigrams.below.title);
	
	      if (enabled) {
	        return _react2.default.createElement(
	          'div',
	          { className: 'trigrams' },
	          _react2.default.createElement(
	            'div',
	            { className: 'above', onTouchTap: this.handleTouchTap, onClick: this.handleTouchTap },
	            _react2.default.createElement(_HexagramImage.TrigramImage, { tri: above }),
	            _react2.default.createElement(
	              'div',
	              { className: 'label' },
	              above.image
	            )
	          ),
	          _react2.default.createElement(_materialUi.Divider, null),
	          _react2.default.createElement(
	            'div',
	            { className: 'below', onTouchTap: this.handleTouchTap, onClick: this.handleTouchTap },
	            _react2.default.createElement(_HexagramImage.TrigramImage, { tri: below }),
	            _react2.default.createElement(
	              'div',
	              { className: 'label' },
	              below.image
	            )
	          ),
	          _react2.default.createElement(
	            _materialUi.Popover,
	            {
	              open: this.state.popover_open,
	              anchorEl: this.state.anchorEl,
	              anchorOrigin: { horizontal: 'left', vertical: 'bottom' },
	              targetOrigin: { horizontal: 'right', vertical: 'top' },
	              onRequestClose: this.handleRequestClose
	            },
	            _react2.default.createElement(
	              'div',
	              { style: styles.popover },
	              _react2.default.createElement(
	                'div',
	                { className: 'popover-trigram' },
	                _react2.default.createElement(
	                  'h4',
	                  { className: 'title' },
	                  this.state.trigram.name,
	                  ' - ',
	                  this.state.trigram.wilhelm
	                ),
	                _react2.default.createElement(_materialUi.Divider, null),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'image' },
	                  _react2.default.createElement(
	                    'b',
	                    null,
	                    'Image: '
	                  ),
	                  this.state.trigram.image,
	                  ' , ',
	                  this.state.trigram.image_name
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'animal' },
	                  _react2.default.createElement(
	                    'b',
	                    null,
	                    'Animal: '
	                  ),
	                  this.state.trigram.animal,
	                  ' , ',
	                  this.state.trigram.animal_name
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'body' },
	                  _react2.default.createElement(
	                    'b',
	                    null,
	                    'Body: '
	                  ),
	                  this.state.trigram.body
	                )
	              )
	            )
	          )
	        );
	      } else {
	        return _react2.default.createElement('div', null);
	      }
	    }
	  }]);
	
	  return HexagramInfoCard;
	}(_react.Component);

	exports.default = HexagramInfoCard;

/***/ },
/* 477 */
/***/ function(module, exports) {

	module.exports = [
		{
			"name": "Chien",
			"description": "The Creative",
			"number": 1,
			"image": "./image/Chien.gif",
			"trigrams": {
				"above": "chien",
				"below": "chien"
			},
			"interpretation": {
				"introduction": "The first hexagram is made up of six unbroken lines. These\r\n\t\t\t\tunbroken lines stand for the primal power, which is light-giving,\r\n\t\t\t\tactive, strong, and of the spirit. The hexagram is consistently\r\n\t\t\t\tstrong in character, and since it is without weakness, its essence\r\n\t\t\t\tis power or energy. Its image is heaven. Its energy is represented\r\n\t\t\t\tas unrestricted by any fixed conditions in space and is therefore\r\n\t\t\t\tconceived of as motion. Time is regarded as the basis of this\r\n\t\t\t\tmotion. Thus the hexagram includes also the power of time and the\r\n\t\t\t\tpower of persisting in time, that is, duration. The power\r\n\t\t\t\trepresented by the hexagram is to be interpreted in a dual sense in\r\n\t\t\t\tterms of its action on the universe and of its action on the world\r\n\t\t\t\tof men. In relation to the universe, the hexagram expresses the\r\n\t\t\t\tstrong, creative action of the Deity. In relation to the human\r\n\t\t\t\tworld, it denotes the creative action of the holy man or sage, of\r\n\t\t\t\tthe ruler or leader of men, who through his power awakens and\r\n\t\t\t\tdevelops their higher nature.",
				"judgement": "The Creative works sublime success, Furthering through\r\n\t\t\t\tperseverance.",
				"image": "The movement of heaven is full of power. Thus the superior man\r\n\t\t\t\tmakes himself strong and untiring."
			}
		},
		{
			"name": "Kun",
			"description": "The Receptive",
			"number": 2,
			"image": "./image/Kun.gif",
			"trigrams": {
				"above": "kun",
				"below": "kun"
			},
			"interpretation": {
				"introduction": "This hexagram is made up of broken lines only. The broken lines\r\n\t\t\t\trepresents the dark, yielding, receptive primal power of yin. The\r\n\t\t\t\tattribute of the hexagram is devotion; its image is the earth. It is\r\n\t\t\t\tthe perfect complement of The Creative the\r\n\t\t\t\tcomplement, not the opposite, for the Receptive does not combat the\r\n\t\t\t\tCreative but completes it . It represents nature in contrast to\r\n\t\t\t\tspirit, earth in contrast to heaven, space as against time, the\r\n\t\t\t\tfemale-maternal as against the male-paternal. However, as applied to\r\n\t\t\t\thuman affairs, the principle of this complementary relationship is\r\n\t\t\t\tfound not only in the relation between man and woman, but also in\r\n\t\t\t\tthat between prince and minister and between father and son. Indeed,\r\n\t\t\t\teven in the individual this duality appears in the coexistence of\r\n\t\t\t\tthe spiritual world and the world of the senses. But strictly\r\n\t\t\t\tspeaking there is no real dualism here, because there is a clearly\r\n\t\t\t\tdefined hierarchic relationship between the two principles. In\r\n\t\t\t\titself of course the Receptive is just as important as the Creative,\r\n\t\t\t\tbut the attribute of devotion defines the place occupied by this\r\n\t\t\t\tprimal power in relation to the Creative. For the Receptive must be\r\n\t\t\t\tactivated and led by the Creative; then it is productive of good.\r\n\t\t\t\tOnly when it abandons this position and tries to stand as an equal\r\n\t\t\t\tside by side with the Creative, does it become evil. The result then\r\n\t\t\t\tis opposition to and struggle against the Creative, which is\r\n\t\t\t\tproductive of evil to both.",
				"judgement": "The Receptive brings about sublime success, Furthering through the\r\n\t\t\t\tperseverance of a mare. If the superior man undertakes something and\r\n\t\t\t\ttries to lead, He goes astray; But if he follows, he finds guidance.\r\n\t\t\t\tIt is favorable to find friends in the west and south, To forego\r\n\t\t\t\tfriends in the east and north. Quiet perseverance brings good\r\n\t\t\t\tfortune.",
				"image": "The earth's condition is receptive devotion. Thus the superior man\r\n\t\t\t\twho has breadth of character Carries the outer world."
			}
		},
		{
			"name": "Chun",
			"description": "Difficulty at the Beginning",
			"number": 3,
			"image": "./image/Chun.gif",
			"trigrams": {
				"above": "kan",
				"below": "chen"
			},
			"interpretation": {
				"introduction": "The name of the hexagram, Chun, really connotes a blade of grass\r\n\t\t\t\tpushing against an obstacle as it sprouts out of the earth--hence\r\n\t\t\t\tthe meaning, \"difficulty at the beginning.\" The hexagram indicates\r\n\t\t\t\tthe way in which heaven and earth bring forth individual beings. It\r\n\t\t\t\tis their first meeting, which is beset with difficulties. The lower\r\n\t\t\t\ttrigram Chen is the Arousing; its motion is upward and its image is\r\n\t\t\t\tthunder. The upper trigram K'an stands for the Abysmal, the\r\n\t\t\t\tdangerous. Its motion is downward and its image is rain. The\r\n\t\t\t\tsituation points to teeming, chaotic profusion; thunder and rain\r\n\t\t\t\tfill the air. But the chaos clears up. While the Abysmal sinks, the\r\n\t\t\t\tupward movement eventually passes beyond the danger. A thunderstorm\r\n\t\t\t\tbrings release from tension, and all things breathe freely again.",
				"judgement": "Difficulty at the Beginning works supreme success, Furthering\r\n\t\t\t\tthrough perseverance. Nothing should be undertaken. It furthers one\r\n\t\t\t\tto appoint helpers.",
				"image": "Clouds and thunder: The image of Difficulty at the Beginning. Thus\r\n\t\t\t\tthe superior man Brings order out of confusion."
			}
		},
		{
			"name": "Meng",
			"description": "Youthful Folly",
			"number": 4,
			"image": "./image/Meng.gif",
			"trigrams": {
				"above": "ken",
				"below": "kan"
			},
			"interpretation": {
				"introduction": "In this hexagram we are reminded of youth and folly in two\r\n\t\t\t\tdifferent ways. The image of the upper trigram, Ken, is the\r\n\t\t\t\tmountain, that of the lower, K'an, is water; the spring rising at\r\n\t\t\t\tthe foot of the mountain is the image of inexperienced youth.\r\n\t\t\t\tKeeping still is the attribute of the upper trigram; that of the\r\n\t\t\t\tlower is the abyss, danger. Stopping in perplexity on the brink of a\r\n\t\t\t\tdangerous abyss is a symbol of the folly of youth. However, the two\r\n\t\t\t\ttrigrams also show the way of overcoming the follies of youth. Water\r\n\t\t\t\tis something that of necessity flows on. When the spring gushes\r\n\t\t\t\tforth, it does not know at first where it will go. But its steady\r\n\t\t\t\tflow fills up the deep place blocking its progress, and success is\r\n\t\t\t\tattained.",
				"judgement": "Youthful Folly has success. It is not I who seek the young fool;\r\n\t\t\t\tThe young fool seeks me. At the first oracle I inform him. If he\r\n\t\t\t\tasks two or three times, it is importunity. If he importunes, I give\r\n\t\t\t\thim no information. Perseverance furthers.",
				"image": "A spring wells up at the foot of the mountain: The image of Youth.\r\n\t\t\t\tThus the superior man fosters his character By thoroughness in all\r\n\t\t\t\tthat he does."
			}
		},
		{
			"name": "Hsu",
			"description": "Waiting (Nourishment)",
			"number": 5,
			"image": "./image/Hsu.gif",
			"trigrams": {
				"above": "kan",
				"below": "chien"
			},
			"interpretation": {
				"introduction": "All beings have need of nourishment from above. But the gift of\r\n\t\t\t\tfood comes in its own time, and for this one must wait. This\r\n\t\t\t\thexagram shows the clouds in the heavens, giving rain to refresh all\r\n\t\t\t\tthat grows and to provide mankind with food and drink. The rain will\r\n\t\t\t\tcome in its own time. We cannot make it come; we have to wait for\r\n\t\t\t\tit. The idea of waiting is further suggested by the attributes of\r\n\t\t\t\tthe two trigrams--strength within, danger in from. Strength in the\r\n\t\t\t\tface of danger does not plunge ahead but bides its time, whereas\r\n\t\t\t\tweakness in the face of danger grows agitated and has not the\r\n\t\t\t\tpatience to wait.",
				"judgement": "Waiting. If you are sincere, You have light and success.\r\n\t\t\t\tPerseverance brings good fortune. It furthers one to cross the great\r\n\t\t\t\twater.",
				"image": "Clouds rise up to heaven: The image of Waiting. Thus the superior\r\n\t\t\t\tman eats and drinks, Is joyous and of good cheer."
			}
		},
		{
			"name": "Sung",
			"description": "Conflict",
			"number": 6,
			"image": "./image/Sung.gif",
			"trigrams": {
				"above": "chien",
				"below": "kan"
			},
			"interpretation": {
				"introduction": "The upper trigram, whose image is heaven, has an upward movement;\r\n\t\t\t\tthe lower trigram, water, in accordance with its nature tends\r\n\t\t\t\tdownward. Thus the two halves move away from each other, giving rise\r\n\t\t\t\tto the idea of conflict. The attribute of the Creative is strength,\r\n\t\t\t\tthat of the Abysmal is danger, guile. Where cunning has force before\r\n\t\t\t\tit, there is conflict. A third indication of conflict, in terms of\r\n\t\t\t\tcharacter, is presented by the combination of deep cunning within\r\n\t\t\t\tand fixed determination outwardly. A person of this character will\r\n\t\t\t\tcertainly be quarrelsome.",
				"judgement": "Conflict. You are sincere And are being obstructed. A cautious\r\n\t\t\t\thalt halfway brings good fortune. Going through to the end brings\r\n\t\t\t\tmisfortune. It furthers one to see the great man. It does not\r\n\t\t\t\tfurther one to cross the great water.",
				"image": "Heaven and water go their opposite ways: The image of Conflict.\r\n\t\t\t\tThus in all his transactions the superior man Carefully considers\r\n\t\t\t\tthe beginning."
			}
		},
		{
			"name": "Shih",
			"description": "The Army",
			"number": 7,
			"image": "./image/Shih.gif",
			"trigrams": {
				"above": "kun",
				"below": "kan"
			},
			"interpretation": {
				"introduction": "This hexagram is made up of the trigrams K'an, water, and K'un,\r\n\t\t\t\tearth, and thus it symbolizes the ground water stored up in the\r\n\t\t\t\tearth. In the same way military strength is stored up in the mass of\r\n\t\t\t\tthe people--invisible in times of peace but always ready for use as\r\n\t\t\t\ta source of power. The attributes of the two trig rams are danger\r\n\t\t\t\tinside and obedience must prevail outside. Of the individual lines,\r\n\t\t\t\tthe one that controls the hexagram is the strong nine in the second\r\n\t\t\t\tplace, to which the other lines, all yielding, are subordinate. This\r\n\t\t\t\tline indicates a commander, because it stands in the middle of one\r\n\t\t\t\tof the two trigrams. But since it is in the lower rather than the\r\n\t\t\t\tupper trigram, it represents not the ruler but the efficient\r\n\t\t\t\tgeneral, who maintains obedience in the army by his authority.",
				"judgement": "The Army. The army needs perseverance And a strong man. Good\r\n\t\t\t\tfortune without blame.",
				"image": "In the middle of the earth is water: The image of The Army. Thus\r\n\t\t\t\tthe superior man increases his masses By generosity toward the\r\n\t\t\t\tpeople."
			}
		},
		{
			"name": "Pi",
			"description": "Holding Together (union)",
			"number": 8,
			"image": "./image/Pi.gif",
			"trigrams": {
				"above": "kan",
				"below": "kun"
			},
			"interpretation": {
				"introduction": "The waters on the surface of the earth flow together wherever they\r\n\t\t\t\tcan, as for example in the ocean, where all the rivers come\r\n\t\t\t\ttogether. Symbolically this connotes holding together and the laws\r\n\t\t\t\tthat regulate it. The same idea is suggested by the fact that all\r\n\t\t\t\tthe lines of the hexagram except the fifth, the place of the ruler,\r\n\t\t\t\tare yielding. The yielding lines hold together because they are\r\n\t\t\t\tinfluenced by a man of strong will in the leading position, a man\r\n\t\t\t\twho is their center of union. Moreover, this strong and guiding\r\n\t\t\t\tpersonality in turn holds together with the others, finding in them\r\n\t\t\t\tthe complement of his own nature.",
				"judgement": "Holding Togeather (Union) brings good fortune. Inquire of the\r\n\t\t\t\toracle once again Whether you possess sublimity, constancy, and\r\n\t\t\t\tperseverance; Then there is no blame. Those who are uncertain\r\n\t\t\t\tgradually join. Whoever come too late Meets with misfortune.",
				"image": "On the earth is water: The image of Holding Togeather. Thus the\r\n\t\t\t\tkings of antiquity Bestowed the different states as fiefs And\r\n\t\t\t\tcultivated friendly relations With the feudal lords."
			}
		},
		{
			"name": "Hsiao Chu",
			"description": "The Taming Power of the Small",
			"number": 9,
			"image": "./image/Hsiao Chu.gif",
			"trigrams": {
				"above": "sun",
				"below": "chien"
			},
			"interpretation": {
				"introduction": "This hexagram means the force of the small--the power of the\r\n\t\t\t\tshadowy--that restrains, tames, impedes. A weak line in the fourth\r\n\t\t\t\tplace, that of the minister, holds the five strong lines in check.\r\n\t\t\t\tIn the Image it is the wind blowing across the sky. The wind\r\n\t\t\t\trestrains the clouds, the rising breath of the Creative, and makes\r\n\t\t\t\tthem grow dense, but as yet is not strong enough to turn them to\r\n\t\t\t\train. The hexagram presents a configuration of circumstances in\r\n\t\t\t\twhich a strong element is temporarily held in leash by a weak\r\n\t\t\t\telement. It is only through gentleness that this can have a\r\n\t\t\t\tsuccessful outcome.",
				"judgement": "The Taming Power of the Small has success, dense clouds, no rain\r\n\t\t\t\tfrom our western region.",
				"image": "The wind drives across heaven: The image of The Taming Power of\r\n\t\t\t\tthe Small. Thus the superior man Refines the outward aspect of his\r\n\t\t\t\tnature."
			}
		},
		{
			"name": "Lu",
			"description": "Treading (conduct)",
			"number": 10,
			"image": "./image/Lu.gif",
			"trigrams": {
				"above": "chien",
				"below": "tui"
			},
			"interpretation": {
				"introduction": "The name of the hexagram means on the one hand the right way of\r\n\t\t\t\tconducting oneself. Heaven, the father, is above, and the lake, the\r\n\t\t\t\tyoungest daughter, is below. This shows the difference between high\r\n\t\t\t\tand low, upon which composure correct social conduct, depends. On\r\n\t\t\t\tthe other hand the word for the name of the hexagram, Treading,\r\n\t\t\t\tmeans literally treading upon something. The small and cheerful\r\n\t\t\t\t[Tui] treads upon the large and strong [Ch'ien]. The direction of\r\n\t\t\t\tmovement of the two primary trigrams is upward. The fact that the\r\n\t\t\t\tstrong treads on the weak is not mentioned in the Book of Changes,\r\n\t\t\t\tbecause it is taken for granted. For the weak to take a stand\r\n\t\t\t\tagainst the strong is not dangerous here, because it happened in\r\n\t\t\t\tgood humor [Tui] and without presumption, so that the strong man is\r\n\t\t\t\tnot irritated but takes it all in good part.",
				"judgement": "Treading. Treading upon the tail of the tiger. It does not bite\r\n\t\t\t\tthe man. Success.",
				"image": "Heaven above, the lake below: The image of Treading. Thus the\r\n\t\t\t\tsuperior man discriminates between high and low and thereby\r\n\t\t\t\tfortifies the thinking of the people."
			}
		},
		{
			"name": "Tai",
			"description": "Peace",
			"number": 11,
			"image": "./image/Tai.gif",
			"trigrams": {
				"above": "kun",
				"below": "chien"
			},
			"interpretation": {
				"introduction": "The Receptive, which moves downward, stands above; the Creative,\r\n\t\t\t\twhich moves upward, is below. Hence their influences meet and are in\r\n\t\t\t\tharmony, so that all living things bloom and prosper. This hexagram\r\n\t\t\t\tbelongs to the first month (February-March), at which time the\r\n\t\t\t\tforces of nature prepare the new spring.",
				"judgement": "Peace. The small departs, The great approaches. Good fortune.\r\n\t\t\t\tSuccess.",
				"image": "Heaven and earth unite: the image of Peace. Thus the ruler divides\r\n\t\t\t\tand completes the course of heaven and earth, and so aids the\r\n\t\t\t\tpeople."
			}
		},
		{
			"name": "Pi",
			"description": "Standstill (Stagnation)",
			"number": 12,
			"image": "./image/Pi.gif",
			"trigrams": {
				"above": "chien",
				"below": "kun"
			},
			"interpretation": {
				"introduction": "This hexagram is the opposite of the preceding one. Heaven is\r\n\t\t\t\tabove, drawing farther and farther away, while the earth below sinks\r\n\t\t\t\tfarther into the depths. The creative powers are not in relation. It\r\n\t\t\t\tis a time of standstill and decline. This hexagram is linked with\r\n\t\t\t\tthe seventh month (August-September), when the year has passed its\r\n\t\t\t\tzenith and autumnal decay is setting in.",
				"judgement": "Standstill. Evil people do not further The perseverance of the\r\n\t\t\t\tsuperior man. The great departs; the small approaches.",
				"image": "Heaven and earth do not unite: The image of Standstill. Thus the\r\n\t\t\t\tsuperior man falls back upon his inner worth in order to escape the\r\n\t\t\t\tdifficulties. He does not permit himself to be honored with revenue."
			}
		},
		{
			"name": "Tung Jen",
			"description": "Fellowship with Men",
			"number": 13,
			"image": "./image/Tung Jen.gif",
			"trigrams": {
				"above": "chien",
				"below": "li"
			},
			"interpretation": {
				"introduction": "The image of the upper trigram Ch'ien is heaven, and that of the\r\n\t\t\t\tlower, Li, is flame. It is the nature of fire to flame up to the\r\n\t\t\t\theaven. This gives the idea of fellowship. It is the second line\r\n\t\t\t\tthat, by virtue of its central character, unites the five strong\r\n\t\t\t\tlines around it. This hexagram forms a complement to Shih,\r\n\t\t\t\t\tThe Army (7). In the latter, danger is within and obedience\r\n\t\t\t\twithout the character of a warlike army, which, in order to hold\r\n\t\t\t\ttogether, needs one strong man among the many who are weak. Here,\r\n\t\t\t\tclarity is within and strength without--the character of a peaceful\r\n\t\t\t\tunion of men, which, in order to hold together, needs one yielding\r\n\t\t\t\tnature among many firm persons.",
				"judgement": "Fellowship with Men in the open. Success. It furthers one to cross\r\n\t\t\t\tthe great water. The perseverance of the superior man furthers.",
				"image": "The earth's condition is receptive devotion. Thus the superior man\r\n\t\t\t\twho has breadth of character Carries the outer world."
			}
		},
		{
			"name": "Ta Yu",
			"description": "Possession in Great Measure",
			"number": 14,
			"image": "./image/Ta Yu.gif",
			"trigrams": {
				"above": "li",
				"below": "chien"
			},
			"interpretation": {
				"introduction": "The fire in heaven above shines far, and all things stand out in\r\n\t\t\t\tthe light and become manifest. The weak fifth line occupies the\r\n\t\t\t\tplace of honor and all the strong lines are in accord with it. All\r\n\t\t\t\tthings come to the man who is modest and kind in a high position.",
				"judgement": "Possession in Great Measure. Supreme success.",
				"image": "Fire in heaven above: the image of Possession in Great Measure.\r\n\t\t\t\tThus the superior man curbs evil and furthers good, And thereby\r\n\t\t\t\tobeys the benevolent will of heaven."
			}
		},
		{
			"name": "Chien",
			"description": "Modesty",
			"number": 15,
			"image": "./image/Chien.gif",
			"trigrams": {
				"above": "kun",
				"below": "ken"
			},
			"interpretation": {
				"introduction": "This hexagram is made up of the trigrams Ken, Keeping Still,\r\n\t\t\t\tmountain, and K'un. The mountain is the youngest son of the\r\n\t\t\t\tCreative, the representative of heaven and earth. It dispenses the\r\n\t\t\t\tblessings of heaven, the clouds and rain that gather round its\r\n\t\t\t\tsummit, and thereafter shines forth radiant with heavenly light.\r\n\t\t\t\tThis shows what modesty is and how it functions in great and strong\r\n\t\t\t\tmen. K'un, the earth, stands above. Lowliness is a quality of the\r\n\t\t\t\tearth: this is the very reason why it appears in this hexagram as\r\n\t\t\t\texalted, by being placed above the mountain. This shows how modesty\r\n\t\t\t\tfunctions in lowly, simple people: they are lifted up by it.",
				"judgement": "Modesty creates success. The superior man carries things through.",
				"image": "Within the earth, a mountain: The image of Modesty. Thus the\r\n\t\t\t\tsuperior man reduces that which is too much, and augments that which\r\n\t\t\t\tis too little. He weighs things and makes them equal."
			}
		},
		{
			"name": "Yu",
			"description": "Enthusiasm",
			"number": 16,
			"image": "./image/Yu.gif",
			"trigrams": {
				"above": "chen",
				"below": "kun"
			},
			"interpretation": {
				"introduction": "The strong line in the fourth place, that of the leading official,\r\n\t\t\t\tmeets with response and obedience from all the other lines, which\r\n\t\t\t\tare all weak. The attribute of the upper trigram, Chen, is movement;\r\n\t\t\t\tthe attributes of K'un, the lower, are obedience and devotion. This\r\n\t\t\t\tbegins a movement that meets with devotion and therefore inspires\r\n\t\t\t\tenthusiasm, carrying all with it. Of great importance, furthermore,\r\n\t\t\t\tis the law of movement along the line of least resistance, which in\r\n\t\t\t\tthis hexagram is enunciated as the law for natural events and for\r\n\t\t\t\thuman life.",
				"judgement": "Enthusiasm. It furthers one to install helpers and to set armies\r\n\t\t\t\tmarching.",
				"image": "Thunder comes resounding out of the earth: The image of\r\n\t\t\t\tEnthusiasm. Thus the ancient kings made music In order to honor\r\n\t\t\t\tmerit, and offered it with splendor to the Supreme Deity, Inviting\r\n\t\t\t\ttheir ancestors to be present."
			}
		},
		{
			"name": "Sui",
			"description": "Following",
			"number": 17,
			"image": "./image/Sui.gif",
			"trigrams": {
				"above": "tui",
				"below": "chen"
			},
			"interpretation": {
				"introduction": "The trigram Tui, the Joyous, whose attribute is gladness, is\r\n\t\t\t\tabove; Chen, the Arousing, which has the attribute of movement, is\r\n\t\t\t\tbelow. Joy in movement induces following. The Joyous is the youngest\r\n\t\t\t\tdaughter, while the Arousing is the eldest son. An older man defers\r\n\t\t\t\tto a young girl and shows her consideration. By this he moves her to\r\n\t\t\t\tfollow him.",
				"judgement": "Following has supreme success. Perseverance furthers. No blame.",
				"image": "Thunder in the middle of the lake: The image of Following. Thus\r\n\t\t\t\tthe superior man at nightfall Goes indoors for rest and\r\n\t\t\t\trecuperation."
			}
		},
		{
			"name": "Ku",
			"description": "Work on what has been spoiled (Decay)",
			"number": 18,
			"image": "./image/Ku.gif",
			"trigrams": {
				"above": "ken",
				"below": "sun"
			},
			"interpretation": {
				"introduction": "The Chinese character ku represents a bowl in whose contents worms\r\n\t\t\t\tare breeding. This means decay. It is come about because the gentle\r\n\t\t\t\tindifference in the lower trigram has come together with the rigid\r\n\t\t\t\tinertia of the upper, and the result is stagnation. Since this\r\n\t\t\t\timplies guilt, the conditions embody a demand for removal of the\r\n\t\t\t\tcause. Hence the meaning of the hexagram is not simply 'what has\r\n\t\t\t\tbeen spoiled' but 'work on what has been spoiled'.",
				"judgement": "Work on what has been spoiled Has supreme success. It furthers one\r\n\t\t\t\tto cross the great water; Before the starting point, three days.\r\n\t\t\t\tAfter the starting point, three days.",
				"image": "The wind blows low on the mountain: The image of Decay. Thus the\r\n\t\t\t\tsuperior man stirs up the people and strengthens their spirit."
			}
		},
		{
			"name": "Lin",
			"description": "Approach",
			"number": 19,
			"image": "./image/Lin.gif",
			"trigrams": {
				"above": "kun",
				"below": "tui"
			},
			"interpretation": {
				"introduction": "The Chinese word lin has a range of meanings that is not exhausted\r\n\t\t\t\tby any single word of another language. The ancient explanations in\r\n\t\t\t\tthe Book of Changes give as its first meaning, 'becoming great.'\r\n\t\t\t\tWhat becomes great are the two strong lines growing into the\r\n\t\t\t\thexagram from below; the light-giving power expands with them. The\r\n\t\t\t\tmeaning is then further extended to include the concept of approach,\r\n\t\t\t\tespecially the approach of what is lower. Finally the meaning\r\n\t\t\t\tincludes the attitude of condescension of a man in high position\r\n\t\t\t\ttoward the people, and in general the setting to work on affairs.\r\n\t\t\t\tThis hexagram is linked with the twelfth month (January-February),\r\n\t\t\t\twhen after the winter solstice, the light power begins to ascend\r\n\t\t\t\tagain.",
				"judgement": "Approach has supreme success. Perseverance furthers. When the\r\n\t\t\t\teighth month comes, There will be misfortune.",
				"image": "The earth above the lake: The image of Approach. Thus the superior\r\n\t\t\t\tman is inexhaustible in his will to teach, And without limits in his\r\n\t\t\t\ttolerance and protection of the people."
			}
		},
		{
			"name": "Kuan",
			"description": "Contemplation (View)",
			"number": 20,
			"image": "./image/Kuan.gif",
			"trigrams": {
				"above": "sun",
				"below": "kun"
			},
			"interpretation": {
				"introduction": "A slight variation of tonal stress gives the Chinese name for this\r\n\t\t\t\thexagram a double meaning. It means both contemplating and being\r\n\t\t\t\tseen, in the sense of being an example. These ideas are suggested by\r\n\t\t\t\tthe fact that the hexagram can be understood as picturing a type of\r\n\t\t\t\ttower characteristic of ancient China. A tower of this kind\r\n\t\t\t\tcommanded a wide view of the country; at the same time, when\r\n\t\t\t\tsituated on a mountain, it became a landmark that could be seen for\r\n\t\t\t\tmiles around. Thus the hexagram shows a ruler who contemplates the\r\n\t\t\t\tlaw of heaven above him and the ways of the people below, and who,\r\n\t\t\t\tby means of good government, sets a lofty example to the masses.\r\n\t\t\t\tThis hexagram is linked with the eight month (September-October).\r\n\t\t\t\tThe light-giving power retreats and the dark power is again on the\r\n\t\t\t\tincrease. However, this aspect is not material in the interpretation\r\n\t\t\t\tof the hexagram as a whole.",
				"judgement": "Contemplation. The ablution has been made, but not yet the\r\n\t\t\t\toffering. Full of trust they look up to him.",
				"image": "The wind blows over the earth: The image of Contemplation. Thus\r\n\t\t\t\tthe kings of old visited the regions of the world, contemplated the\r\n\t\t\t\tpeople and gave them instruction."
			}
		},
		{
			"name": "Shih Ho",
			"description": "Biting Through",
			"number": 21,
			"image": "./image/Shih Ho.gif",
			"trigrams": {
				"above": "li",
				"below": "chen"
			},
			"interpretation": {
				"introduction": "This hexagram represents an open mouth (cf. hexagram 27) with an obstruction (in the fourth\r\n\t\t\t\tplace) between the teeth. As a result the lips cannot meet. To bring\r\n\t\t\t\tthem together one must bite energetically through the obstacle.\r\n\t\t\t\tSince the hexagram is made up of the trigrams for thunder and for\r\n\t\t\t\tlightning, it indicates how obstacles are forcibly removed in\r\n\t\t\t\tnature. Energetic biting through overcomes the obstacle that\r\n\t\t\t\tprevents joining of the lips; the storm with its thunder and\r\n\t\t\t\tlightning overcomes the disturbing tension in nature. Recourse to\r\n\t\t\t\tlaw and penalties overcomes the disturbances of harmonious social\r\n\t\t\t\tlife caused by criminals and slanderers. The theme of this hexagram\r\n\t\t\t\tis a criminal lawsuit, in contradistinction to that of Sung, Conflict (6), which refers\r\n\t\t\t\tto civil suits.",
				"judgement": "Biting Through has success. It is favorable to let justice be\r\n\t\t\t\tadministered.",
				"image": "Thunder and lighting: The image of Biting Through. Thus the kings\r\n\t\t\t\tof former times made firm the laws Through clearly defined\r\n\t\t\t\tpenalties."
			}
		},
		{
			"name": "Pi",
			"description": "Grace",
			"number": 22,
			"image": "./image/Pi.gif",
			"trigrams": {
				"above": "ken",
				"below": "li"
			},
			"interpretation": {
				"introduction": "This hexagram shows a fire that breaks out of the secret depths of\r\n\t\t\t\tthe earth and, blazing up, illuminates and beautifies the mountain,\r\n\t\t\t\tthe heavenly heights. Grace-beauty of form-is necessary in any union\r\n\t\t\t\tif it is to be well ordered and pleasing rather than disordered and\r\n\t\t\t\tchaotic.",
				"judgement": "Grace has success in small matters It is favorable to undertake\r\n\t\t\t\tsomething.",
				"image": "Fire at the foot of the mountain: The image of Grace. Thus does\r\n\t\t\t\tthe superior man proceed when clearing up current affairs. But he\r\n\t\t\t\tdare not decide controversial issues in this way."
			}
		},
		{
			"name": "Po",
			"description": "Splitting Apart",
			"number": 23,
			"image": "./image/Po.gif",
			"trigrams": {
				"above": "ken",
				"below": "kun"
			},
			"interpretation": {
				"introduction": "The dark lines are about to mount upward and overthrow the last\r\n\t\t\t\tfirm, light line by exerting a disintegrating influence on it. The\r\n\t\t\t\tinferior, dark forces overcome what is superior and strong, not by\r\n\t\t\t\tdirect means, but by undermining it gradually and imperceptibly, so\r\n\t\t\t\tthat it finally collapses. The lines of the hexagram present the\r\n\t\t\t\timage of a house, the top line being the roof, and because the roof\r\n\t\t\t\tis being shattered the house collapses. The hexagram belongs to the\r\n\t\t\t\tninth month (October-November). The yin power pushes up ever more\r\n\t\t\t\tpowerfully and is about to supplant the yang power altogether.",
				"judgement": "Splitting Apart. It does not further one to go anywhere.",
				"image": "The mountain rests on the earth: The image of Splitting Apart.\r\n\t\t\t\tThus those above can ensure their position only by giving generously\r\n\t\t\t\tto those below."
			}
		},
		{
			"name": "Fu",
			"description": "Return (The Turning Point)",
			"number": 24,
			"image": "./image/Fu.gif",
			"trigrams": {
				"above": "kun",
				"below": "chen"
			},
			"interpretation": {
				"introduction": "The idea of a turning point arises from the fact that after the\r\n\t\t\t\tdark lines have pushed all of the light lines upward and out of the\r\n\t\t\t\thexagram, another light line enters the hexagram from below. The\r\n\t\t\t\ttime of darkness is past. The winter solstice brings the victory of\r\n\t\t\t\tlight. This hexagram is linked with the eleventh month, the month of\r\n\t\t\t\tthe solstice (December-January).",
				"judgement": "Return. Success. Going out and coming in without error. Friends\r\n\t\t\t\tcome without blame. To and fro goes the way. On the seventh day\r\n\t\t\t\tcomes return. It furthers one to have somewhere to go.",
				"image": "Thunder within the earth: The image of The Turning Point. Thus the\r\n\t\t\t\tkings of antiquity closed the passes at the time of solstice.\r\n\t\t\t\tMerchants and strangers did not go about, and the ruler did not\r\n\t\t\t\ttravel through the provinces."
			}
		},
		{
			"name": "Wu Wang",
			"description": "Innocence (The Unexpected)",
			"number": 25,
			"image": "./image/Wu Wang.gif",
			"trigrams": {
				"above": "chien",
				"below": "chen"
			},
			"interpretation": {
				"introduction": "Ch'ien, heaven is above; Chen, movement, is below. The lower\r\n\t\t\t\ttrigram Chen is under the influence of the strong line it has\r\n\t\t\t\treceived form above, from heaven. When, in accord with this,\r\n\t\t\t\tmovement follows the law of heaven, man is innocent and without\r\n\t\t\t\tguile. His mind is natural and true, unshadowed by reflection or\r\n\t\t\t\tulterior designs. For wherever conscious purpose is to be seen,\r\n\t\t\t\tthere the truth and innocence of nature have been lost. Nature that\r\n\t\t\t\tis not directed by the spirit is not true but degenerate nature.\r\n\t\t\t\tStarting out with the idea of the natural, the train of thought in\r\n\t\t\t\tpart goes somewhat further and thus the hexagram includes also the\r\n\t\t\t\tidea of the fundamental or unexpected.",
				"judgement": "Innocence. Supreme success. Perseverance furthers. If someone is\r\n\t\t\t\tnot as he should be he has misfortune, And it does not further him\r\n\t\t\t\tto undertake anything.",
				"image": "Under heaven thunder rolls: All things attain the natural state of\r\n\t\t\t\tinnocence. Thus the kings of old, rich in virtue and in harmony with\r\n\t\t\t\tthe time, fostered and nourished all beings."
			}
		},
		{
			"name": "Ta Chu",
			"description": "The Taming Power of the Great",
			"number": 26,
			"image": "./image/Ta Chu.gif",
			"trigrams": {
				"above": "ken",
				"below": "chien"
			},
			"interpretation": {
				"introduction": "The Creative is tamed by Ken, Keeping Still. This produces great\r\n\t\t\t\tpower, a situation in contrast to that of the ninth hexagram, Hsiao\r\n\t\t\t\tChu, The Taming Power of the Small, in which the Creative is tamed\r\n\t\t\t\tby the Gentle alone. There one weak line must tame five strong\r\n\t\t\t\tlines, but here four strong lines are restrained by two weak lines;\r\n\t\t\t\tin addition to a minister, there is a prince, and the restraining\r\n\t\t\t\tpower therefore is afar stronger. The hexagram has a threefold\r\n\t\t\t\tmeaning, expressing different aspects of the concept 'Holding firm.'\r\n\t\t\t\tHeaven within the mountain gives the idea of holding firm in the\r\n\t\t\t\tsense of holding together; the trigram Ken which holds the trigram\r\n\t\t\t\tch'ien still, gives the idea of holding firm in the sense of holding\r\n\t\t\t\tback; the third idea is that of holding firm in the sense of caring\r\n\t\t\t\tfor and nourishing. This last is suggested by the fact that a strong\r\n\t\t\t\tline at the top, which is the ruler of the hexagram, is honored and\r\n\t\t\t\ttended as a sage. The third of these meanings also attaches\r\n\t\t\t\tspecifically to this strong line at the top, which represents the\r\n\t\t\t\tsage.",
				"judgement": "The Taming Power of the Great. Perseverance furthers. Not eating\r\n\t\t\t\tat home brings good fortune. It furthers one to cross the great\r\n\t\t\t\twater.",
				"image": "Heaven within the mountain: The image of The Taming Power of the\r\n\t\t\t\tGreat. Thus the superior man acquaints himself with many sayings of\r\n\t\t\t\tantiquity and many deeds of the past in order to strengthen his\r\n\t\t\t\tcharacter thereby."
			}
		},
		{
			"name": "I",
			"description": "Corners of the Mouth (Providing\r\n\t\t\t\tNourishment)",
			"number": 27,
			"image": "./image/I.gif",
			"trigrams": {
				"above": "ken",
				"below": "chen"
			},
			"interpretation": {
				"introduction": "This hexagram is a picture of an open mouth; above and below are\r\n\t\t\t\tfirm lines of the lips, and between them the opening. Starting with\r\n\t\t\t\tthe mouth, through which we take food for nourishment, the thought\r\n\t\t\t\tleads to nourishment itself. Nourishment of oneself, specifically of\r\n\t\t\t\tthe body, is represented in the three lower lines, while the three\r\n\t\t\t\tupper lines represent nourishment and care of others, in a higher,\r\n\t\t\t\tspiritual sense.",
				"judgement": "The Corners of the Mouth. Perseverance brings good fortune. Pay\r\n\t\t\t\theed to the providing of nourishment and to what a man seeks to fill\r\n\t\t\t\this own mouth with.",
				"image": "At the foot of the mountain, thunder: The image of Providing\r\n\t\t\t\tNourishment . Thus the superior man is careful of his words and\r\n\t\t\t\ttemperate in eating and drinking."
			}
		},
		{
			"name": "Ta Kuo",
			"description": "Preponderance of the Great",
			"number": 28,
			"image": "./image/Ta Kuo.gif",
			"trigrams": {
				"above": "tui",
				"below": "sun"
			},
			"interpretation": {
				"introduction": "This hexagram consists of four strong lines inside and two weak\r\n\t\t\t\tlines outside. When the strong are outside and the weak inside, all\r\n\t\t\t\tis well and there is nothing out of balance, nothing extraordinary\r\n\t\t\t\tin the situation. Here, however, the opposite is the case. The\r\n\t\t\t\thexagram represents a beam that is thick and heavy in the middle but\r\n\t\t\t\ttoo weak at the ends. This is a condition that cannot last; it must\r\n\t\t\t\tbe changed, must pass, or misfortune will result.",
				"judgement": "Preponderance of the Great. The ridgepole sags to the breaking\r\n\t\t\t\tpoint. It furthers one to have somewhere to go. Success.",
				"image": "The lake rises above the trees: The image of Preponderance of the\r\n\t\t\t\tGreat. Thus the superior man, when he stands alone, is unconcerned\r\n\t\t\t\tand if he has to renounce the world he is undaunted."
			}
		},
		{
			"name": "Kan",
			"description": "The Abysmal (Water)",
			"number": 29,
			"image": "./image/Kan.gif",
			"trigrams": {
				"above": "kan",
				"below": "kan"
			},
			"interpretation": {
				"introduction": "This hexagram consists of a doubling of the trigram K'an. It is\r\n\t\t\t\tone of the eight hexagrams in which doubling occurs. The trigram\r\n\t\t\t\tK'an means a plunging in. A yang line has plunged in between two yin\r\n\t\t\t\tlines and is closed in by them like water in a ravine. The trigram\r\n\t\t\t\tK'an is also the middle son. The Receptive has obtained the middle\r\n\t\t\t\tline of the Creative, and thus K'an develops. As an image it\r\n\t\t\t\trepresents water, the water that comes from above and is in motion\r\n\t\t\t\ton earth in streams and rivers, giving rise to all life on earth. In\r\n\t\t\t\tman's world K'an represents the heart, the soul locked up within the\r\n\t\t\t\tbody, the principle of light inclosed in the dark--that is, reason.\r\n\t\t\t\tThe name of the hexagram, because the trigram is doubled, has the\r\n\t\t\t\tadditional meaning, 'repetition of danger.' Thus the hexagram is\r\n\t\t\t\tintended to designate an objective situation to which one must\r\n\t\t\t\tbecome accustomed, not a subjective attitude. For danger due to a\r\n\t\t\t\tsubjective attitude means either foolhardiness or guile. Hence too a\r\n\t\t\t\travine is used to symbolize danger; it is a situation in which a man\r\n\t\t\t\tis in the same pass as the water in a ravine, and, like the water,\r\n\t\t\t\the can escape if he behaves correctly.",
				"judgement": "The Abysmal repeated. If you are sincere, you have success in your\r\n\t\t\t\theart and whatever you do succeeds.",
				"image": "Water flows on uninterruptedly and reaches its foal: The image of\r\n\t\t\t\tthe Abysmal repeated. Thus the superior man walks in lasting virtue\r\n\t\t\t\tand carries on the business of teaching."
			}
		},
		{
			"name": "Li",
			"description": "The Clinging, Fire",
			"number": 30,
			"image": "./image/Li.gif",
			"trigrams": {
				"above": "li",
				"below": "li"
			},
			"interpretation": {
				"introduction": "This hexagram is another double sign. The trigram Li means 'to\r\n\t\t\t\tcling to something,' and also 'brightness.' A dark line clings to\r\n\t\t\t\ttwo light lines, one above and one below--the image of an empty\r\n\t\t\t\tspace between two strong lines, whereby the two strong lines are\r\n\t\t\t\tmade bright. The trigram represents the middle daughter. The\r\n\t\t\t\tCreative has incorporated the central line of the Receptive, and\r\n\t\t\t\tthus Li develops. As an image, it is fire. Fire has no definite form\r\n\t\t\t\tbut clings to the burning object and thus is bright. As water pours\r\n\t\t\t\tdown from heaven, so fire flames up from the earth. While K'an means\r\n\t\t\t\tthe soul shut within the body, Li stands for nature in its radiance.",
				"judgement": "The Clinging. Perseverance furthers. It brings success. Care of\r\n\t\t\t\tthe cow brings good fortune.",
				"image": "That which is bright rises twice: The image of Fire. Thus the\r\n\t\t\t\tgreat man, by perpetuating this brightness, illumines the four\r\n\t\t\t\tquarters of the world."
			}
		},
		{
			"name": "Hsien",
			"description": "Influence (Wooing)",
			"number": 31,
			"image": "./image/Hsien.gif",
			"trigrams": {
				"above": "tui",
				"below": "ken"
			},
			"interpretation": {
				"introduction": "The name of the hexagram means 'universal,' 'general,' and in a\r\n\t\t\t\tfigurative sense 'to influence,' 'to stimulate.' The upper trigram\r\n\t\t\t\tis Tui, the Joyous; the lower is Ken, Keeping still. By its\r\n\t\t\t\tpersistent, quiet influence, the lower, rigid trigram stimulates the\r\n\t\t\t\tupper, weak trigram, which responds to this stimulation cheerfully\r\n\t\t\t\tand joyously. Ken, the lower trigram, is the youngest son; the\r\n\t\t\t\tupper, Tui, is the youngest daughter. Thus the universal mutual\r\n\t\t\t\tattraction between the sexes is represented. In courtship, the\r\n\t\t\t\tmasculine principle must seize the initiative and place itself below\r\n\t\t\t\tthe feminine principle. Just as the first part of book 1 begins with\r\n\t\t\t\tthe hexagrams of heaven and earth, the foundations of all that\r\n\t\t\t\texists, the second part begins with the hexagrams of courtship and\r\n\t\t\t\tmarriage, the foundations of all social relationships.",
				"judgement": "Influence. Success. Perseverance furthers. To take a maiden to\r\n\t\t\t\twife brings good fortune.",
				"image": "A lake on the mountain: The image of influence. Thus the superior\r\n\t\t\t\tman encourages people to approach him By his readiness to receive\r\n\t\t\t\tthem."
			}
		},
		{
			"name": "Heng",
			"description": "Duration",
			"number": 32,
			"image": "./image/Heng.gif",
			"trigrams": {
				"above": "chen",
				"below": "sun"
			},
			"interpretation": {
				"introduction": "The strong trigram Chen is above, the weak trigram Sun below. This\r\n\t\t\t\thexagram is the inverse of the preceding one. In the latter we have\r\n\t\t\t\tinfluence, here we have union as an enduring condition. The two\r\n\t\t\t\timages are thunder and wind, which are likewise constantly paired\r\n\t\t\t\tphenomena. The lower trigram indicates gentleness within; the upper,\r\n\t\t\t\tmovement without. In the sphere of social relationships, the\r\n\t\t\t\thexagram represents the institution of marriage as the enduring\r\n\t\t\t\tunion of the sexes. During courtship the young man subordinates\r\n\t\t\t\thimself to the girl, but in marriage, which is represented by the\r\n\t\t\t\tcoming together of the eldest son and the eldest daughter, the\r\n\t\t\t\thusband is the directing and moving force outside, while the wife,\r\n\t\t\t\tinside, is gentle and submissive.",
				"judgement": "Duration. Success. No blame. Perseverance furthers. It furthers\r\n\t\t\t\tone to have somewhere to go.",
				"image": "Thunder and wind: the image of Duration. Thus the superior man\r\n\t\t\t\tstands firm and does not change has direction."
			}
		},
		{
			"name": "Tun",
			"description": "Retreat",
			"number": 33,
			"image": "./image/Tun.gif",
			"trigrams": {
				"above": "chien",
				"below": "ken"
			},
			"interpretation": {
				"introduction": "The power of the dark is ascending. The light retreats to\r\n\t\t\t\tsecurity, so that the dark cannot encroach upon it. This retreat is\r\n\t\t\t\ta matter not of man's will but of natural law. Therefore in this\r\n\t\t\t\tcase withdrawal is proper; it is the correct way to behave in order\r\n\t\t\t\tnot to exhaust one's forces. In the calendar this hexagram is linked\r\n\t\t\t\twith the sixth month (July-August), in which the forces of winter\r\n\t\t\t\tare already showing their influence.",
				"judgement": "Retreat. Success. In what is small, perseverance furthers.",
				"image": "Mountain under heaven: the image of Retreat. Thus the superior man\r\n\t\t\t\tkeeps the inferior man at a distance, not angrily but with reserve."
			}
		},
		{
			"name": "Ta Chuang",
			"description": "The Power of the Great",
			"number": 34,
			"image": "./image/Ta Chuang.gif",
			"trigrams": {
				"above": "chen",
				"below": "chien"
			},
			"interpretation": {
				"introduction": "The great lines, that is, the light, strong lines, are powerful.\r\n\t\t\t\tFour light lines have entered the hexagram from below and are about\r\n\t\t\t\tto ascend higher. The upper trigram is Chen, the Arousing; the lower\r\n\t\t\t\tis ch'ien, the Creative. Ch'ien is strong, Chen produces movement.\r\n\t\t\t\tThe union of movement and strength gives the meaning of The Power of\r\n\t\t\t\tthe Great. The hexagram is linked with the second month\r\n\t\t\t\t(March-April).",
				"judgement": "The Power of the Great. Perseverance furthers.",
				"image": "Thunder in heaven above: The image of The Power of the Great. Thus\r\n\t\t\t\tthe superior man does not tread upon paths that do not accord with\r\n\t\t\t\testablished order."
			}
		},
		{
			"name": "Chin",
			"description": "Progress",
			"number": 35,
			"image": "./image/Chin.gif",
			"trigrams": {
				"above": "li",
				"below": "kun"
			},
			"interpretation": {
				"introduction": "The hexagram represents the sun rising over the earth. It is\r\n\t\t\t\ttherefore the symbol of rapid, easy progress, which at the same time\r\n\t\t\t\tmeans ever widening expansion and clarity.",
				"judgement": "Progress. The powerful prince is honored with horses in large\r\n\t\t\t\tnumbers. In a single day he is granted audience three times.",
				"image": "The sun rises over the earth: The image of Progress. Thus the\r\n\t\t\t\tsuperior man himself brightens his bright virtue."
			}
		},
		{
			"name": "Ming I",
			"description": "Darkening of the light",
			"number": 36,
			"image": "./image/Ming I.gif",
			"trigrams": {
				"above": "kun",
				"below": "li"
			},
			"interpretation": {
				"introduction": "Here the sun has sunk under the earth and is therefore darkened.\r\n\t\t\t\tThe name of the hexagram means literally 'wounding of the bright';\r\n\t\t\t\thence the individual lines contain frequent references to wounding.\r\n\t\t\t\tThe situation is the exact opposite of that in the foregoing\r\n\t\t\t\thexagram. In the latter a wise man at the head of affairs has able\r\n\t\t\t\thelpers, and in company with them makes progress; here a man of dark\r\n\t\t\t\tnature is in a position of authority and brings harm to the wise and\r\n\t\t\t\table man.",
				"judgement": "Darkening of the light. In adversity. It furthers one to be\r\n\t\t\t\tpersevering.",
				"image": "The light has sunk into the earth: The image of Darkening of the\r\n\t\t\t\tlight. Thus does the superior man live with the great mass: He veils\r\n\t\t\t\this light yet still shines."
			}
		},
		{
			"name": "Chia Jen",
			"description": "The Family (The Clan)",
			"number": 37,
			"image": "./image/Chia Jen.gif",
			"trigrams": {
				"above": "sun",
				"below": "li"
			},
			"interpretation": {
				"introduction": "The hexagram represents the laws obtaining within the family. The\r\n\t\t\t\tstrong line at the top represents the father, the lowest the son.\r\n\t\t\t\tThe strong line in the fifth place represents the husband, the\r\n\t\t\t\tyielding second line the wife. On the other hand, the two strong\r\n\t\t\t\tlines in the fifth and the third place represent two brothers, and\r\n\t\t\t\tthe two weak lines correlated with them in the fourth and the second\r\n\t\t\t\tplace stand for their respective wives. Thus all the connections and\r\n\t\t\t\trelationships within the family find their appropriate expression.\r\n\t\t\t\tEach individual line has the character according with its place. The\r\n\t\t\t\tfact that a strong line occupies the sixth place-where a weak line\r\n\t\t\t\tmight be expected-indicates very clearly the strong leadership that\r\n\t\t\t\tmust come from the head of the family. The line is to be considered\r\n\t\t\t\there not in its quality as the sixth but in its quality as the top\r\n\t\t\t\tline. The Family shows the laws operative within the household that,\r\n\t\t\t\ttransferred to outside life, keep the state and the world in order.\r\n\t\t\t\tThe influence that goes out from within the family is represented by\r\n\t\t\t\tthe symbol of the wind created by fire.",
				"judgement": "The Family. The perseverance of the woman furthers.",
				"image": "Wind comes forth from fire: The image of The Family. Thus the\r\n\t\t\t\tsuperior man has substance in his words and duration in his way of\r\n\t\t\t\tlife."
			}
		},
		{
			"name": "Kuei",
			"description": "Opposition",
			"number": 38,
			"image": "./image/Kuei.gif",
			"trigrams": {
				"above": "li",
				"below": "tui"
			},
			"interpretation": {
				"introduction": "This hexagram is composed of the trigram Li above, i.e., flame,\r\n\t\t\t\twhich burns upward, and Tui below, i.e., the lake, which seeps\r\n\t\t\t\tdownward. These two movements are indirect contrast. Furthermore, Li\r\n\t\t\t\tis the second daughter and Tui the youngest daughter, and although\r\n\t\t\t\tthey live in the same house they belong to different men; hence\r\n\t\t\t\ttheir wills are not the same but are divergently directed.",
				"judgement": "Opposition. In small matters, good fortune.",
				"image": "Above, fire; below. The lake. The image of Opposition. Thus amid\r\n\t\t\t\tall fellowship the superior man retains his individuality."
			}
		},
		{
			"name": "Chien",
			"description": "Obstruction",
			"number": 39,
			"image": "./image/Chien.gif",
			"trigrams": {
				"above": "kan",
				"below": "ken"
			},
			"interpretation": {
				"introduction": "The hexagram pictures a dangerous abyss lying before us and a\r\n\t\t\t\tsteep, inaccessible mountain rising behind us. We are surrounded by\r\n\t\t\t\tobstacles; at the same time, since the mountain has the attribute of\r\n\t\t\t\tkeeping still, there is implicit a hint as to how we can extricate\r\n\t\t\t\tourselves. The hexagram represents obstructions that appear in the\r\n\t\t\t\tcourse of time but that can and should be overcome. Therefore all\r\n\t\t\t\tthe instruction given is directed to overcoming them.",
				"judgement": "Obstruction. The southwest furthers. The northeast does not\r\n\t\t\t\tfurther. It furthers one to see the great man. Perseverance brings\r\n\t\t\t\tgood fortune.",
				"image": "Water on the mountain: The image of Obstruction. Thus the superior\r\n\t\t\t\tman turns his attention to himself and molds his character."
			}
		},
		{
			"name": "Hsieh",
			"description": "Deliverance",
			"number": 40,
			"image": "./image/Hsieh.gif",
			"trigrams": {
				"above": "chen",
				"below": "kan"
			},
			"interpretation": {
				"introduction": "Here the movement goes out of the sphere of danger. The obstacle\r\n\t\t\t\thas been removed, the difficulties are being resolved. Deliverance\r\n\t\t\t\tis not yet achieved; it is just in its beginning, and the hexagram\r\n\t\t\t\trepresents its various stages.",
				"judgement": "Deliverance. The southwest furthers. If there is no longer\r\n\t\t\t\tanything where one has to go, Return brings good fortune. If there\r\n\t\t\t\tis still something where one has to go, Hastening brings good\r\n\t\t\t\tfortune.",
				"image": "Thunder and rain set in: The image of Deliverance. Thus the\r\n\t\t\t\tsuperior man pardons mistakes and forgives misdeeds."
			}
		},
		{
			"name": "Sun",
			"description": "Decrease",
			"number": 41,
			"image": "./image/Sun.gif",
			"trigrams": {
				"above": "ken",
				"below": "tui"
			},
			"interpretation": {
				"introduction": "This hexagram represents a decrease of the lower trigram in favor\r\n\t\t\t\tof the upper, because the third line, originally strong, has moved\r\n\t\t\t\tup to the top, and the top line, originally weak, has replaced it.\r\n\t\t\t\tWhat is below is decreased to the benefit of what is above. This is\r\n\t\t\t\tout-and-out decrease. If the foundations of a building are decreased\r\n\t\t\t\tin strength and the upper walls are strengthened, the whole\r\n\t\t\t\tstructure loves its stability. Likewise, a decrease in the\r\n\t\t\t\tprosperity of the people in favor of the government is out-and-out\r\n\t\t\t\tdecrease. And the entire theme of the hexagram is directed to\r\n\t\t\t\tshowing how this shift of wealth can take place without causing the\r\n\t\t\t\tsources of wealth can take place without causing the sources of\r\n\t\t\t\twealth in the nation and its lower classes to fail.",
				"judgement": "Decrease combined with sincerity Brings about supreme good fortune\r\n\t\t\t\twithout blame. One may be persevering in this. It furthers one to\r\n\t\t\t\tundertake something. How is this to be carried out? One may use two\r\n\t\t\t\tsmall bowls for the sacrifice.",
				"image": "At the foot of the mountain, the lake: The image of Decrease. Thus\r\n\t\t\t\tthe superior man controls his anger and restrains his instincts."
			}
		},
		{
			"name": "I",
			"description": "Increase",
			"number": 42,
			"image": "./image/I.gif",
			"trigrams": {
				"above": "sun",
				"below": "chen"
			},
			"interpretation": {
				"introduction": "The idea of increase is expressed in the fact that the strong\r\n\t\t\t\tlowest line of the upper trigram has sunk down and taken its place\r\n\t\t\t\tunder the lower trigram. This conception also expresses the\r\n\t\t\t\tfundamental idea on which the Book of Changes is based. To rule\r\n\t\t\t\ttruly is to serve. A sacrifice of the higher element that produces\r\n\t\t\t\tan increase of the lower is called an out-and-out increase: it\r\n\t\t\t\tindicates the spirit that alone has power to help the world.",
				"judgement": "Increase. It furthers one to undertake something. It furthers one\r\n\t\t\t\tto cross the great water.",
				"image": "Wind and thunder: the image of Increase. Thus the superior man, if\r\n\t\t\t\the sees good, he imitates it. If he has faults, he rids himself of\r\n\t\t\t\tthem."
			}
		},
		{
			"name": "Kuai",
			"description": "Break-through (Resoluteness)",
			"number": 43,
			"image": "./image/Kuai.gif",
			"trigrams": {
				"above": "tui",
				"below": "chien"
			},
			"interpretation": {
				"introduction": "This hexagram signifies on the one hand a break-through after a\r\n\t\t\t\tlong accumulation of tension, as a swollen river breaks through its\r\n\t\t\t\tdikes, or in the manner of a cloudburst. On the other hand, applied\r\n\t\t\t\tto human conditions, it refers to the time when inferior people\r\n\t\t\t\tgradually begin to disappear. Their influence is on the wane; as a\r\n\t\t\t\tresult of resolute action, a change in conditions occurs, a\r\n\t\t\t\tbreak-through. The hexagram is linked with the third month\r\n\t\t\t\t[April-May].",
				"judgement": "Break-through. One must resolutely make the matter known at the\r\n\t\t\t\tcourt of the king. It must be announced truthfully. Danger. It is\r\n\t\t\t\tnecessary to notify one's own city. It does not further to resort to\r\n\t\t\t\tarms. It furthers one to undertake something.",
				"image": "The lake has risen up to heaven: The image of Break-through. Thus\r\n\t\t\t\tthe superior man dispenses riches downward and refrains from resting\r\n\t\t\t\ton his virtue."
			}
		},
		{
			"name": "Kou",
			"description": "Coming to Meet",
			"number": 44,
			"image": "./image/Kou.gif",
			"trigrams": {
				"above": "chien",
				"below": "sun"
			},
			"interpretation": {
				"introduction": "This hexagram indicates a situation in which the principle of\r\n\t\t\t\tdarkness, after having been eliminated, furtively and unexpectedly\r\n\t\t\t\tobtrudes again from within and below. Of its own accord the female\r\n\t\t\t\tprinciple comes to meet the male. It is an unfavorable and dangerous\r\n\t\t\t\tsituation, and we must understand and promptly prevent the possible\r\n\t\t\t\tconsequences. The hexagram is linked with the fifth month\r\n\t\t\t\t[June-July], because at the summer solstice the principle of\r\n\t\t\t\tdarkness gradually becomes ascendant again.",
				"judgement": "Coming to Meet. The maiden is powerful. One should not marry such\r\n\t\t\t\ta maiden.",
				"image": "Under heaven, wind: The image of Coming to Meet. Thus does the\r\n\t\t\t\tprince act when disseminating his commands and proclaiming them to\r\n\t\t\t\tthe four quarters of heaven."
			}
		},
		{
			"name": "Tsui",
			"description": "Gathering Together (Massing)",
			"number": 45,
			"image": "./image/Tsui.gif",
			"trigrams": {
				"above": "tui",
				"below": "kun"
			},
			"interpretation": {
				"introduction": "This hexagram is related in form and meaning to Pi, Holding Togeather (8). In the latter, water\r\n\t\t\t\tis over the earth; here a lake is over the earth. But since the lake\r\n\t\t\t\tis a place where water collects, the idea of gathering together is\r\n\t\t\t\teven more strongly expressed here than in the other hexagram. The\r\n\t\t\t\tsame idea also arises from the fact that in the present case it is\r\n\t\t\t\ttwo strong lines (the fourth and the fifth) that bring about the\r\n\t\t\t\tgather together, whereas in the former case one strong line (the\r\n\t\t\t\tfifth) stands in the midst of weak lines.",
				"judgement": "Gathering Together. Success. The king approaches his temple. It\r\n\t\t\t\tfurthers one to see the great man. This brings success. Perseverance\r\n\t\t\t\tfurthers. To bring great offerings creates good fortune. It furthers\r\n\t\t\t\tone to undertake something.",
				"image": "Over the earth, the lake: The image of Gathering Together. Thus\r\n\t\t\t\tthe superior man renews his weapons in order to meet the unforeseen."
			}
		},
		{
			"name": "Sheng",
			"description": "Pushing Upward",
			"number": 46,
			"image": "./image/Sheng.gif",
			"trigrams": {
				"above": "kun",
				"below": "sun"
			},
			"interpretation": {
				"introduction": "The lower trigram, Sun, represents wood, and the upper, K'un, means\r\n\t\t\t\tthe earth. Linked with this is the idea that wood in the earth grows\r\n\t\t\t\tupward. In contrast to the meaning of Chin, Progress (35), this pushing upward is\r\n\t\t\t\tassociated with effort, just as a plant needs energy for pushing\r\n\t\t\t\tupward through the earth. That is why this hexagram, although it is\r\n\t\t\t\tconnected with success, is associated with effort of the will. In\r\n\t\t\t\tProgress the emphasis is on expansion; Pushing Upward indicates\r\n\t\t\t\trather a vertical ascent-direct rise from obscurity and lowliness to\r\n\t\t\t\tpower and influence.",
				"judgement": "Pushing Upward has supreme success. One must see the great man,\r\n\t\t\t\tfear not. Departure toward the south brings good fortune.",
				"image": "Within the earth, wood grows: The image of Pushing Upward. Thus\r\n\t\t\t\tthe superior man of devoted character heaps up small things in order\r\n\t\t\t\tto achieve something high and great."
			}
		},
		{
			"name": "Kun",
			"description": "Oppression (Exhaustion)",
			"number": 47,
			"image": "./image/Kun.gif",
			"trigrams": {
				"above": "tui",
				"below": "kan"
			},
			"interpretation": {
				"introduction": "The lake is above, water below; the lake is empty, dried up.\r\n\t\t\t\tExhaustion is expressed in yet another way: at the top, a dark line\r\n\t\t\t\tis holding down two light line; below, a light line is hemmed in\r\n\t\t\t\tbetween two dark ones. The upper trigram belongs to the principle of\r\n\t\t\t\tdarkness, the lower to the principle of light. Thus everywhere\r\n\t\t\t\tsuperior men are oppressed and held in restraint by inferior men.",
				"judgement": "Oppression. Success. Perseverance. The great man brings about good\r\n\t\t\t\tfortune, no blame. When one has something to say it is not believed.",
				"image": "There is not water in the lake: The image of Exhaustion. Thus the\r\n\t\t\t\tsuperior man stakes his life on following his will."
			}
		},
		{
			"name": "Ching",
			"description": "The Well",
			"number": 48,
			"image": "./image/Ching.gif",
			"trigrams": {
				"above": "kan",
				"below": "sun"
			},
			"interpretation": {
				"introduction": "Wood is below, water above. The wood goes down into the earth to\r\n\t\t\t\tbring up water. The image derives from the pole-and-bucket well of\r\n\t\t\t\tancient China. The wood represents not the buckets, which in ancient\r\n\t\t\t\ttimes were made of clay, but rather the wooden poles by which the\r\n\t\t\t\twater is hauled up from the well. The image also refers to the world\r\n\t\t\t\tof plants, which lift water out of the earth by means of their\r\n\t\t\t\tfibers. The well from which water is drawn conveys the further idea\r\n\t\t\t\tof an inexhaustible dispensing of nourishment.",
				"judgement": "The Well. The town may be changed but the well cannot be changed.\r\n\t\t\t\tIt neither decreases nor increases. They come and go and draw from\r\n\t\t\t\tthe well. If one gets down almost to the water and the rope does not\r\n\t\t\t\tgo all the way, or the jug breaks, it brings misfortune.",
				"image": "Water over wood: the image of The Well. Thus the superior man\r\n\t\t\t\tencourages the people at their work and exhorts them to help one\r\n\t\t\t\tanother."
			}
		},
		{
			"name": "Ko",
			"description": "Revolution (Molting)",
			"number": 49,
			"image": "./image/Ko.gif",
			"trigrams": {
				"above": "tui",
				"below": "li"
			},
			"interpretation": {
				"introduction": "The Chinese character for this hexagram means in its original sense\r\n\t\t\t\tan animal's pelt, which is changed in the course of the year by\r\n\t\t\t\tmolting. From this word is carried over to apply to the 'moltings'\r\n\t\t\t\tin political life, the great revolutions connected with changes of\r\n\t\t\t\tgovernments. The two trigrams making up the hexagram are the same\r\n\t\t\t\ttwo that appear in K'uei, Oppostion\r\n\t\t\t\t\t(38), that is, the two younger daughters, Li and Tui. But while\r\n\t\t\t\tthere the elder of the two daughters is above, and what results is\r\n\t\t\t\tessentially only an opposition of tendencies, here the younger\r\n\t\t\t\tdaughter is above. The influences are in actual conflict, and the\r\n\t\t\t\tforces combat each other like fire and water (lake), each trying to\r\n\t\t\t\tdestroy the other. Hence the idea of revolution.",
				"judgement": "Revolution. On your own day you are believed. Supreme success,\r\n\t\t\t\tFurthering through perseverance. Remorse disappears.",
				"image": "Fire in the lake: the image of Revolution. Thus the superior man\r\n\t\t\t\tsets the calendar in order and makes the seasons clear."
			}
		},
		{
			"name": "Ting",
			"description": "The Caldron",
			"number": 50,
			"image": "./image/Ting.gif",
			"trigrams": {
				"above": "li",
				"below": "sun"
			},
			"interpretation": {
				"introduction": "The six lines construct the image of Ting, The Caldron; at the\r\n\t\t\t\tbottom are the legs, over them the belly, then come the ears\r\n\t\t\t\t(handles), and at the top the carrying rings. At the same time, the\r\n\t\t\t\timage suggests the idea of nourishment. The ting, cast of bronze,\r\n\t\t\t\twas the vessel that held the cooked viands in the temple of the\r\n\t\t\t\tancestors and at banquets. The heads of the family served the food\r\n\t\t\t\tfrom the ting into the bowls of the guests. The Well (48) likewise has the secondary\r\n\t\t\t\tmeaning of giving nourishment, but rather more in relation to the\r\n\t\t\t\tpeople. The ting, as a utensil pertaining to a refined civilization,\r\n\t\t\t\tsuggests the fostering and nourishing of able men, which redounded\r\n\t\t\t\tto the benefit of the state. This hexagram and The Well are the only\r\n\t\t\t\ttwo in the Book of Changes that represent concrete, men-made\r\n\t\t\t\tobjects. Yet here too the thought has its abstract connotation. Sun,\r\n\t\t\t\tbelow, is wood and wind; Li, above, is flame. Thus together they\r\n\t\t\t\tstand for the flame kindled by wood and wind, which likewise\r\n\t\t\t\tsuggests the idea of preparing food.",
				"judgement": "The Caldron. Supreme good fortune. Success.",
				"image": "Fire over wood: The image of The Caldron. Thus the superior man\r\n\t\t\t\tconsolidates his fate by making his position correct."
			}
		},
		{
			"name": "Chen",
			"description": "The Arousing (Shock, Thunder)",
			"number": 51,
			"image": "./image/Chen.gif",
			"trigrams": {
				"above": "chen",
				"below": "chen"
			},
			"interpretation": {
				"introduction": "The hexagram Chen represents the eldest son, who seizes rule with\r\n\t\t\t\tenergy and power. A yang line develops below two yin lines and\r\n\t\t\t\tpresses upward forcibly. This movement is so violent that it arouses\r\n\t\t\t\tterror. It is symbolized by thunder, which bursts forth from the\r\n\t\t\t\tearth and by its shock causes fear and trembling.",
				"judgement": "Shock brings success. Shock comes-oh, oh! Laughing words -ha, ha!\r\n\t\t\t\tThe shock terrifies for a hundred miles and he does not let fall the\r\n\t\t\t\tsacrificial spoon and chalice.",
				"image": "Thunder repeated: the image of Shock. Thus, in fear and trembling,\r\n\t\t\t\tthe superior man sets his life in order and examines himself."
			}
		},
		{
			"name": "Ken",
			"description": "Keeping Still, Mountain",
			"number": 52,
			"image": "./image/Ken.gif",
			"trigrams": {
				"above": "ken",
				"below": "ken"
			},
			"interpretation": {
				"introduction": "The image of this hexagram is the mountain, the youngest son of\r\n\t\t\t\theaven and earth. The male principle is at the top because it\r\n\t\t\t\tstrives upward by nature; the female principle is below, since the\r\n\t\t\t\tdirection of its movement has come to its normal end. In its\r\n\t\t\t\tapplication to man, the hexagram turns upon the problem of achieving\r\n\t\t\t\ta quiet heart. It is very difficult to bring quiet to the heart.\r\n\t\t\t\tWhile Buddhism strives for rest through an ebbing away of all\r\n\t\t\t\tmovement in nirvana, the Book of Changes holds that rest is merely a\r\n\t\t\t\tstate of polarity that always posits movement as its complement.\r\n\t\t\t\tPossibly the words of the text embody directions for the practice of\r\n\t\t\t\tyoga.",
				"judgement": "Keeping Still. Keeping his back still so that he no longer feels\r\n\t\t\t\this body. He goes into his courtyard and does not see his people. No\r\n\t\t\t\tblame.",
				"image": "Mountains standing close together: The image of Keeping Still.\r\n\t\t\t\tThus the superior man does not permit his thoughts to go beyond his\r\n\t\t\t\tsituation."
			}
		},
		{
			"name": "Chien",
			"description": "Development (Gradual Progress)",
			"number": 53,
			"image": "./image/Chien.gif",
			"trigrams": {
				"above": "sun",
				"below": "ken"
			},
			"interpretation": {
				"introduction": "This hexagram is made up of Sun (wood, penetration) above, i.e.,\r\n\t\t\t\twithout, and Ken (mountain, stillness) below, i.e., within. A tree\r\n\t\t\t\ton a mountain develops slowly according to the law of its being and\r\n\t\t\t\tconsequently stands firmly rooted. This gives the idea of a\r\n\t\t\t\tdevelopment that proceeds gradually, step by step. The attributes of\r\n\t\t\t\tthe trigrams also point to this: within is tranquility, which guards\r\n\t\t\t\tagainst precipitate actions, and without is penetration, which makes\r\n\t\t\t\tdevelopment and progress possible.",
				"judgement": "Development. The maiden Is given in marriage. Good fortune.\r\n\t\t\t\tPerseverance furthers.",
				"image": "On the mountain, a tree: The image of Development. Thus the\r\n\t\t\t\tsuperior man abides in dignity and virtue in order to improve the\r\n\t\t\t\tmores."
			}
		},
		{
			"name": "Kuei Mei",
			"description": "The Marrying Maiden",
			"number": 54,
			"image": "./image/Kuei Mei.gif",
			"trigrams": {
				"above": "chen",
				"below": "tui"
			},
			"interpretation": {
				"introduction": "Above we have Chen, the eldest son, and below, Tui, the youngest\r\n\t\t\t\tdaughter. The man leads and the girl follows him in gladness. The\r\n\t\t\t\tpicture is that of the entrance of the girl into her husband's\r\n\t\t\t\thouse. In all, there are four hexagrams depicting the relationship\r\n\t\t\t\tbetween husband and wife. Hsien,\r\n\t\t\t\t\tInfluence, (31) , describes the attraction that a young couple\r\n\t\t\t\thave for each other; Heng, Duration\r\n\t\t\t\t\t(32), portrays the permanent relationships of marriage; Chien,Development (53), reflects\r\n\t\t\t\tthe protracted, ceremonious procedures attending The Marrying Maiden (54), shows a young girl\r\n\t\t\t\tunder the guidance of an older man who marries her.",
				"judgement": "The Marrying Maiden. Undertakings bring misfortune. Nothing that\r\n\t\t\t\twould further.",
				"image": "Thunder over the lake: The image of The Marrying Maiden. Thus the\r\n\t\t\t\tsuperior man understands the transitory, in the light of the\r\n\t\t\t\teternity of the end."
			}
		},
		{
			"name": "Feng",
			"description": "Abundance (Fullness)",
			"number": 55,
			"image": "./image/Feng.gif",
			"trigrams": {
				"above": "chen",
				"below": "li"
			},
			"interpretation": {
				"introduction": "Chen is movement; Li is flame, whose attribute is clarity. Clarity\r\n\t\t\t\twithin, movement without-this produces greatness and abundance. The\r\n\t\t\t\thexagram pictures a period of advanced civilization. However, the\r\n\t\t\t\tfact that development has reached a peak suggests that this\r\n\t\t\t\textraordinary condition of abundance cannot be maintained\r\n\t\t\t\tpermanently.",
				"judgement": "Abundance has success. The king attains abundance. Be not sad. Be\r\n\t\t\t\tlike the sun at midday.",
				"image": "Both thunder and lightning come: The image of Abundance. Thus the\r\n\t\t\t\tsuperior man decides lawsuits and carries out punishments."
			}
		},
		{
			"name": "Lu",
			"description": "The Wanderer",
			"number": 56,
			"image": "./image/Lu.gif",
			"trigrams": {
				"above": "li",
				"below": "ken"
			},
			"interpretation": {
				"introduction": "The mountain, Ken, stands still; above it fire, Li, flames up and\r\n\t\t\t\tdoes not tarry. Therefore the two trigrams do not stay together.\r\n\t\t\t\tStrange lands and separation are the wanderer's lot.",
				"judgement": "The Wanderer. Success through smallness. Perseverance brings good\r\n\t\t\t\tfortune to the Wanderer.",
				"image": "Fire on the mountain: The image of The Wanderer. Thus the superior\r\n\t\t\t\tman is clear-minded, cautious in imposing penalties and protracts no\r\n\t\t\t\tlawsuits."
			}
		},
		{
			"name": "Sun",
			"description": "The Gentle (The Penetrating, Wind)",
			"number": 57,
			"image": "./image/Sun.gif",
			"trigrams": {
				"above": "sun",
				"below": "sun"
			},
			"interpretation": {
				"introduction": "Sun is one of the eight doubled trigrams. It is the eldest\r\n\t\t\t\tdaughter and symbolizes wind or wood; it has for its attribute\r\n\t\t\t\tgentleness, which nonetheless penetrates like the wind or like\r\n\t\t\t\tgrowing wood with its roots. The dark principle, in itself rigid and\r\n\t\t\t\timmovable, is dissolved by the penetrating light principle, to which\r\n\t\t\t\tit subordinates itself in gentleness. In nature, it is the wind that\r\n\t\t\t\tdisperses the gathered clouds, leaving the sky clear and serene. In\r\n\t\t\t\thuman life it is penetrating clarity of judgment that thwarts all\r\n\t\t\t\tdark hidden motives. In the life of the community it is the powerful\r\n\t\t\t\tinfluence of a great personality that uncovers and breaks up those\r\n\t\t\t\tintrigues which shun the light of day.",
				"judgement": "The Gentle. Success through what is small. It furthers one to have\r\n\t\t\t\tsomewhere to go. It furthers one to see the great man.",
				"image": "Winds following one upon the other: The image of The Gently\r\n\t\t\t\tPenetrating. Thus the superior man spreads his commands abroad and\r\n\t\t\t\tcarries out his undertakings."
			}
		},
		{
			"name": "Tui",
			"description": "The Joyous, Lake",
			"number": 58,
			"image": "./image/Tui.gif",
			"trigrams": {
				"above": "tui",
				"below": "tui"
			},
			"interpretation": {
				"introduction": "This hexagram, like sun, is one of the eight formed by doubling of\r\n\t\t\t\ta trigram. The trigram Tui denotes the youngest daughter; it is\r\n\t\t\t\tsymbolized by the smiling lake, and its attribute is joyousness.\r\n\t\t\t\tContrary to appearances, it is not the yielding quality of the top\r\n\t\t\t\tline that accounts for joy here. The attribute of the yielding or\r\n\t\t\t\tdark principle is not joy but melancholy. However, joy is indicated\r\n\t\t\t\tby the fact that there are two strong lines within, expressing\r\n\t\t\t\tthemselves through the medium of gentleness. True joy, therefore,\r\n\t\t\t\trests on firmness and strength within, manifesting itself outwardly\r\n\t\t\t\tas yielding and gentle.",
				"judgement": "The Joyous. Success. Perseverance is favorable.",
				"image": "Lakes resting one on the other: The image of The Joyous. Thus the\r\n\t\t\t\tsuperior man joins with his friends for discussion and practice."
			}
		},
		{
			"name": "Huan",
			"description": "Dispersion (Dissolution)",
			"number": 59,
			"image": "./image/Huan.gif",
			"trigrams": {
				"above": "sun",
				"below": "kan"
			},
			"interpretation": {
				"introduction": "Wind blowing over water disperses it, dissolving it into foam and\r\n\t\t\t\tmist. This suggests that when a man's vital energy is dammed up\r\n\t\t\t\twithin him (indicated as a danger by the attribute of the lower\r\n\t\t\t\ttrigram), gentleness serves to break up and dissolve the blockage.",
				"judgement": "Dispersion. Success. The king approaches his temple. It furthers\r\n\t\t\t\tone to cross the great water. Perseverance furthers.",
				"image": "The wind drives over the water: The image of Dispersion. Thus the\r\n\t\t\t\tkings of old sacrificed to the Lord and built temples."
			}
		},
		{
			"name": "Chieh",
			"description": "Limitation",
			"number": 60,
			"image": "./image/Chieh.gif",
			"trigrams": {
				"above": "kan",
				"below": "tui"
			},
			"interpretation": {
				"introduction": "A lake occupies a limited space. When more water comes into it, it\r\n\t\t\t\toverflows. Therefore limits must be set for the water. The image\r\n\t\t\t\tshows water below and water above, with the firmament between them\r\n\t\t\t\tas a limit. The Chinese word for limitation really denotes the\r\n\t\t\t\tjoints that divide a bamboo stalk. In relation to ordinary life it\r\n\t\t\t\tmeans the thrift that sets fixed limits upon expenditures. In\r\n\t\t\t\trelation to the moral sphere it means the fixed limits that the\r\n\t\t\t\tsuperior man sets upon his actions-the limits of loyalty and\r\n\t\t\t\tdisinterestedness.",
				"judgement": "Limitation. Success. Galling limitation must not be persevered in.",
				"image": "Water over lake: the image of Limitation. Thus the superior man\r\n\t\t\t\tcreates number and measure and examines the nature of virtue and\r\n\t\t\t\tcorrect conduct."
			}
		},
		{
			"name": "Chung Fu",
			"description": "Inner Truth",
			"number": 61,
			"image": "./image/Chung Fu.gif",
			"trigrams": {
				"above": "sun",
				"below": "tui"
			},
			"interpretation": {
				"introduction": "The wind blows over the lake and stirs the surface of the water.\r\n\t\t\t\tThus visible effects of the invisible manifest themselves. The\r\n\t\t\t\thexagram consists of firm lines above and below, while it is open in\r\n\t\t\t\tthe center. This indicates a heart free of prejudices and therefore\r\n\t\t\t\topen to truth. On the other hand, each of the two trigrams has a\r\n\t\t\t\tfirm line in the middle; this indicates the force of inner truth in\r\n\t\t\t\tthe influences they present. The attributes of the two trigrams are:\r\n\t\t\t\tabove, gentleness, forbearance toward inferiors; below, joyousness\r\n\t\t\t\tin obeying superiors. Such conditions create the basis of a mutual\r\n\t\t\t\tconfidence that makes achievements possible. The character of fu\r\n\t\t\t\t('truth') is actually the picture of a bird's foot over a fledgling.\r\n\t\t\t\tIt suggests the idea of brooding. An egg is hollow. The light-giving\r\n\t\t\t\tpower must work to quicken it from outside, but there must be a germ\r\n\t\t\t\tof life within, if life is to be awakened. Far-reaching speculations\r\n\t\t\t\tcan be linked with these ideas.",
				"judgement": "Inner Truth. Pigs and fishes. Good fortune. It furthers one to\r\n\t\t\t\tcross the great water. Perseverance furthers.",
				"image": "Wind over lake: the image of Inner Truth. Thus the superior man\r\n\t\t\t\tdiscusses criminal cases in order to delay executions."
			}
		},
		{
			"name": "Hsiao Kuo",
			"description": "Preponderance of the Small",
			"number": 62,
			"image": "./image/Hsiao Kuo.gif",
			"trigrams": {
				"above": "chen",
				"below": "ken"
			},
			"interpretation": {
				"introduction": "While in the hexagram Ta Kuo,\r\n\t\t\t\t\tPreponderance of the Great (28), the strong lines preponderate\r\n\t\t\t\tand are within, inclosed between weak lines at the top and bottom,\r\n\t\t\t\tthe present hexagram has weak lines preponderating, though here\r\n\t\t\t\tagain they are on the outside, the strong lines being within. This\r\n\t\t\t\tindeed is the basis of the exceptional situation indicated by the\r\n\t\t\t\thexagram. When strong lines are outside, we have the hexagram I, Providing Nourishment (27), or\r\n\t\t\t\tChung Fu, Inner Truth, (61);\r\n\t\t\t\tneither represents and exceptional state. When strong elements\r\n\t\t\t\twithin preponderate, they necessarily enforce their will. This\r\n\t\t\t\tcreates struggle and exceptional conditions in general. But in the\r\n\t\t\t\tpresent hexagram it is the weak element that perforce must mediate\r\n\t\t\t\twith the outside world. If a man occupies a position of authority\r\n\t\t\t\tfor which he is by nature really inadequate, extraordinary prudence\r\n\t\t\t\tis necessary.",
				"judgement": "Preponderance of the Small. Success. Perseverance furthers. Small\r\n\t\t\t\tthings may be done; great things should not be done. The flying bird\r\n\t\t\t\tbrings the message: It is not well to strive upward, It is well to\r\n\t\t\t\tremain below. Great good fortune.",
				"image": "Thunder on the mountain: The image of Preponderance of the Small.\r\n\t\t\t\tThus in his conduct the superior man gives preponderance to\r\n\t\t\t\treverence. In bereavement he gives preponderance to grief. In his\r\n\t\t\t\texpenditures he gives preponderance to thrift."
			}
		},
		{
			"name": "Chi Chi",
			"description": "After Completion",
			"number": 63,
			"image": "./image/Chi Chi.gif",
			"trigrams": {
				"above": "kan",
				"below": "li"
			},
			"interpretation": {
				"introduction": "This hexagram is the evolution of T'ai\r\n\t\t\t\t\tPeace (11) . The transition from confusion to order is\r\n\t\t\t\tcompleted, and everything is in its proper place even in\r\n\t\t\t\tparticulars. The strong lines are in the strong places, the weak\r\n\t\t\t\tlines in the weak places. This is a very favorable outlook, yet it\r\n\t\t\t\tgives reason for thought. For it is just when perfect equilibrium\r\n\t\t\t\thas been reached that any movement may cause order to revert to\r\n\t\t\t\tdisorder. The one strong line that has moved to the top, thus\r\n\t\t\t\teffecting complete order in details, is followed by the other lines.\r\n\t\t\t\tEach moving according to its nature, and thus suddenly there arises\r\n\t\t\t\tagain the hexagram P'i, Standstill\r\n\t\t\t\t\t(12).Hence the present hexagram indicates the conditions of a\r\n\t\t\t\ttime of climax, which necessitate the utmost caution.",
				"judgement": "After Completion. Success in small matters. Perseverance furthers.\r\n\t\t\t\tAt the beginning good fortune. At the end disorder.",
				"image": "Water over fire: the image of the condition In After Completion.\r\n\t\t\t\tThus the superior man takes thought of misfortune and arms himself\r\n\t\t\t\tagainst it in advance."
			}
		},
		{
			"name": "Wei Chi",
			"description": "Before Completion",
			"number": 64,
			"image": "./image/Wei Chi.gif",
			"trigrams": {
				"above": "li",
				"below": "kan"
			},
			"interpretation": {
				"introduction": "This hexagram indicates a time when the transition from disorder\r\n\t\t\t\tto order is not yet completed. The change is indeed prepared for,\r\n\t\t\t\tsince all the lines in the upper trigram are in relation to those in\r\n\t\t\t\tthe lower. However, they are not yet in their places. While the\r\n\t\t\t\tpreceding hexagram offers an analogy to autumn, which forms the\r\n\t\t\t\ttransition from summer to winter, this hexagram presents a parallel\r\n\t\t\t\tto spring, which leads out of winter's stagnation into the fruitful\r\n\t\t\t\ttime of summer. With this hopeful outlook the Book of Changes come\r\n\t\t\t\tto its close.",
				"judgement": "Before Completion. Success. But if the little fox, after nearly\r\n\t\t\t\tcompleting the crossing, gets his tail in the water, There is\r\n\t\t\t\tnothing that would further.",
				"image": "Fire over water: The image of the condition before transition.\r\n\t\t\t\tThus the superior man is careful in the differentiation of things so\r\n\t\t\t\tthat each finds its place."
			}
		}
	];

/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Lookup = exports.Trigrams = undefined;
	exports.getTrigram = getTrigram;
	exports.getTrigramByName = getTrigramByName;
	exports.getHexagramNumberByKuas = getHexagramNumberByKuas;
	exports.getHexagram = getHexagram;
	exports.getAllHexagrams = getAllHexagrams;
	
	var _lodash = __webpack_require__(473);
	
	var _ = _interopRequireWildcard(_lodash);
	
	var _iching_deoxy = __webpack_require__(479);
	
	var _iching_deoxy2 = _interopRequireDefault(_iching_deoxy);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	// yang => 0 => ---
	// yin  => 1 => - -
	
	// TRIGRAMS: Always bottom to UP
	/*
	 * King Wen Lookup Table.
	 *
	 * Given two trigrams, get the iching number X
	 * THen read the interpretation numbered X.
	 */
	
	var Trigrams = exports.Trigrams = [
	// chien , tui , li, chen, sun, kan, ken, kun
	{ trigrams: [0, 0, 0], image: '⛅', image_name: 'heaven', name: 'chien', body: 'head', animal: '🐴', animal_name: 'horse', wilhelm: 'The Creative, Heaven' }, { trigrams: [0, 0, 1], image: '🌈', image_name: 'lake', name: 'tui', body: 'mouth', animal: '🐐', animal_name: 'goat', wilhelm: 'The Joyous, Lake' }, { trigrams: [0, 1, 0], image: '🔥', image_name: 'fire', name: 'li', body: 'eye', animal: '🐦', animal_name: 'pheasant', wilhelm: 'The Clinging, Flame' }, { trigrams: [0, 1, 1], image: '⚡', image_name: 'thunder', name: 'chên', body: 'foot', animal: '🐉', animal_name: 'dragon', wilhelm: 'The Arousing, Thunder' }, { trigrams: [1, 0, 0], image: '🎐', image_name: 'wind', name: 'sun', body: 'thigh', animal: '🐓', animal_name: 'fowl', wilhelm: 'The Gentle, Wind' }, { trigrams: [1, 0, 1], image: '🌊', image_name: 'water', name: 'kan', body: 'ear', animal: '🐖', animal_name: 'pig', wilhelm: 'The Abysmal, Water' }, { trigrams: [1, 1, 0], image: '🗻', image_name: 'mountain', name: 'kên', body: 'hand', animal: '🐕', animal_name: 'dog', wilhelm: 'Keeping Still, Mountain' }, { trigrams: [1, 1, 1], image: '🌍', image_name: 'earth', name: 'kun', body: 'belly', animal: '🐄', animal_name: 'cow', wilhelm: 'The Receptive, Earth' }];
	
	//  This order is called king wen sequence
	//
	// These numbers corresponds to the interpretation X.
	// Check iching.json, there you can find the interpreatation for every number
	//
	// Vertical rows are lower trigrams
	// Horizontal lines are upper trigrams
	var Lookup = exports.Lookup = {
	  // chien,tui,li,chen,sun,san,kan,ken,kun
	  'chien': [1, 43, 14, 34, 9, 5, 26, 11],
	  'tui': [10, 58, 38, 54, 61, 60, 41, 19],
	  'li': [13, 49, 30, 55, 37, 63, 22, 36],
	  'chên': [25, 17, 21, 51, 42, 3, 27, 24],
	  'sun': [44, 28, 50, 32, 57, 48, 18, 46],
	  'kan': [6, 47, 64, 40, 59, 29, 4, 7],
	  'kên': [33, 31, 56, 62, 53, 39, 52, 15],
	  'kun': [12, 45, 35, 16, 20, 8, 23, 2]
	};
	
	// Get a trigram full representation from a array of 3 kuas
	function getTrigram(trigram_bitfield) {
	  return _.find(Trigrams, function (tri) {
	    return _.isEqual(tri.trigrams, trigram_bitfield);
	  });
	}
	
	// Get a trigram full representation from its name
	function getTrigramByName(trigram_name) {
	  return _.find(Trigrams, function (tri) {
	    return _.isEqual(tri.name, trigram_name);
	  });
	}
	
	function getHexagramNumberByKuas(kuas) {
	  var below = kuas.slice(0, 3);
	  var above = kuas.slice(3);
	
	  var belowTrigram = getTrigram(below);
	  var aboveTrigram = getTrigram(above);
	
	  // Get the index of above trigram
	  var aboveIndex = _.keys(Lookup).indexOf(aboveTrigram.name);
	
	  // Now get the desired hex number
	  var hexNumber = Lookup[belowTrigram.name][aboveIndex];
	
	  return hexNumber;
	}
	
	/*
	 * Get a full hexagram.
	 *
	 * hex = array of kuas
	 * or the hexagram number
	 * or hexagram name
	 */
	function getHexagram(hex) {
	
	  var hexNumber = 1;
	  if (_.isArray(hex)) {
	    hexNumber = getHexagramNumberByKuas(hex);
	  } else if (_.isNumber(hex)) {
	    hexNumber = hex;
	  } else if (_.isString(hex)) {
	    hexNumber = _.find(_iching_deoxy2.default, { 'name': hex }).number;
	  } else {
	    console.error('getHexagram', 'Argument ', hex, ' is not of valid type (Number,Name or Array of Kuas)');
	    return undefined;
	  }
	
	  // And finally the interpretation
	  var hexInterpretation = _.extend({}, _.find(_iching_deoxy2.default, { 'number': hexNumber }));
	
	  return hexInterpretation;
	}
	
	/*
	 * Return a list (in order) of all hexagrams
	 */
	function getAllHexagrams() {
	  var sortedSeq = _.chain(Lookup).values().flatten().sortBy().value();
	
	  return _.map(sortedSeq, getHexagram);
	}

/***/ },
/* 479 */
/***/ function(module, exports) {

	module.exports = [
		{
			"number": 1,
			"name": "Chien",
			"description": "The Creative",
			"trigrams": {
				"above": {
					"title": "chien",
					"description": "THE CREATIVE, HEAVEN"
				},
				"below": {
					"title": "chien",
					"description": "THE CREATIVE, HEAVEN"
				}
			},
			"interpretation": {
				"oracle": "\n\n\tTHE CREATIVE works sublime success,\n\tFurthering through perseverance.",
				"resume": "\n\nThe first hexagram is made up of six unbroken lines. These unbroken lines \nstand for the primal power, which is light-giving, active, strong, and of the \nspirit. The hexagram is consistently strong in character, and since it is \nwithout weakness, its essence is power or energy. Its image is heaven. Its \nenergy is represented as unrestricted by any fixed conditions in space and is \ntherefore conceived of as motion. Time is regarded as the basis of this \nmotion. Thus the hexagram includes also the power of time and the power \nof persisting in time, that is, duration.\n\n  The power represented by the hexagram is to be interpreted in a dual sense \nin terms of its action on the universe and of its action on the world of men. \nIn relation to the universe, the hexagram expresses the strong, creative action \nof the Deity. In relation to the human world, it denotes the creative action of \nthe holy man or sage, of the ruler or leader of men, who through his power \nawakens and develops their higher nature.\n\t",
				"judgment": "\n\nAccording to the original meaning, the attributes [sublimity, potentiality of \nsuccess, power to further, perseverance] are paired. When an individual \ndraws this oracle, it means that success will come to him from the primal \ndepths of the universe and that everything depends upon his seeking his \nhappiness and that of others in one way only, that is, by perseverance in what \nis right.\n\n  The specific meanings of the four attributes became the subject of \nspeculation at an early date. The Chinese word here rendered by \"sublime\" \nmeans literally \"head,\" \"origin,\" \"great.\" This is why Confucius says in \nexplaining it: \"Great indeed is the generating power of the Creative; all beings \nowe their beginning to it. This power permeates all heaven.\" For this \nattribute inheres in the other three as well.\n\n  The beginning of all things lies still in the beyond in the form of ideas that \nhave yet to become real. But the Creative furthermore has power to lend \nform to these archetypes of ideas. This is indicated in the word success, and \nthe process is represented by an image from nature: \"The clouds pass and the \nrain does its work, and all individual beings flow into their forms.\"\n\n  Applies to the human world, these attributes show the great man the way to \nnotable success: \"Because he sees with great clarity and cause and effects, he \ncompletes the six steps at the right time and mounts toward heaven on them \nat the right time, as though on sic dragons.\" The six steps are the six different \npositions given in the hexagram, which are represented later by the dragon \nsymbol. Here it is shown that the way to success lies in apprehending and \ngiving actuality to the way of the universe [Tao], which, as a law running \nthrough end and beginning, brings about all phenomena in time. Thus each \nstep attained forthwith becomes a preparation for the next. Time is no longer \na hindrance but the means of making actual what is potential.\n\n  The act of creation having found expression in the two attributes sublimity \nand success, the work of conservation is shown to be a continuous \nactualization and differentiation of form. This is expressed in the two terms \n\"furthering\" (literally, \"creating that which accords with the nature of a \ngiven being\") and \"persevering\" (literally, \"correct and firm\"). \"The course of \nthe Creative alters and shapes beings until each attains its true, specific \nnature, then it keeps them in conformity with the Great Harmony. Thus \ndoes it show itself to further through perseverance.\"\n\n  In relation to the human sphere, this shows how the great man brings peace \nand security to the world through his activity in creating order: \"He towers \nhigh above the multitude of beings, and all lands are united in peace.\"\n\n  Another line of speculation goes still further in separating the words \n\"sublime,\" \"success,\" \"furthering,\" \"perseverance,\" and parallels them with \nthe four cardinal virtues in humanity. To sublimity, which, as the \nfundamental principle, embraces all the other attributes, it links love. To the \nattribute success are linked the morals, which regulate and organize \nexpressions of love and thereby make them successful. The attribute \nfurthering is correlated with justice, which creates the conditions in which \neach receives that which accords with his being, that which is due him and \nwhich constitutes his happiness. The attribute perseverance is correlated \nwith wisdom, which discerns the immutable laws of all that happens and can \ntherefore bring about enduring conditions. These speculations, already \nbroached in the commentary called Wên Yen , later formed the bridge \nconnecting the philosophy of the \"five stages (elements) of change,\" as laid \ndown in the Book of History (Shu Ching) with the philosophy of the Book of \nChanges, which is based solely on the polarity of positive and negative \nprinciples. In the course of time this combination of the two systems of \nthought opened the way for an increasingly intricate number symbolism.\n\t",
				"image": {
					"oracle": "The movement of heaven is full of power. \n\tThus the superior man makes himself strong and \n\tuntiring.",
					"image": "Since there is only one heaven, the doubling of the trigram Ch'ien, of which \nheaven is the image, indicates the movement of heaven. One complete \nrevolution of heaven makes a day, and the repetition of the trigram means \nthat each day is followed by another. This creates the idea of time. Since it is \nthe same heaven moving with untiring power, there is also created the idea \nof duration both in and beyond time, a movement that never stops nor \nslackens, just as one day follows another in an unending course. This \nduration in time is the image of the power inherent in the Creative. \n  With this image as a model, the sage learns how best to develop himself so \nthat his influence may endure. He must make himself strong in every way, \nby consciously casting out all that is inferior and degrading. Thus he attains \nthat tirelessness which depends upon consciously limiting the fields of his \nactivity.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nHidden dragon. Do not act.",
						"expl": "In China the dragon has a meaning altogether different from that given it in the Western world. The dragon is a symbol of the electrically charged, dynamic, arousing force that manifests itself in the thunderstorm. In winter this energy withdraws into the earth; in the early summer it becomes active again, appearing in the sky as thunder and lightning. As a result the creative forces on earth begin to stir again.  Here this creative force is still hidden beneath the earth and therefore has no effect. In terms of human affairs, this symbolizes a great man who is still unrecognized. Nonetheless he remains true to himself. He does not allow himself to be influenced by outward success or failure, but confident in his strength, he bides his time. Hence it is wise for the man who consults the oracle and draws this line to wait in the calm strength of patience. The time will fulfill itself.  One need not fear least strong will should not prevail; the main thing is not to expend one's powers prematurely in an attempt to obtain by force something for which the time is not yet ripe."
					},
					{
						"poem": "Nine in the second place means:\nDragon appearing in the field.\nIt furthers one to see the great man.",
						"expl": "Here the effects of the light-giving power begin to manifest themselves. In terms of human affairs, this means that the great man makes his appearance in his chosen field of activity. As yet he has no commanding position but is still with his peers. However, what distinguishes him form the others is his seriousness of purpose, his unqualified reliability, and the influence he exerts on his environment with out conscious effort. Such a man is destined to gain great influence and to set the world in order. Therefore it is favorable to see him."
					},
					{
						"poem": "Nine in the third place means:\nAll day long the superior man is creatively active.\nAt nightfall his mind is still beset with cares.\nDanger. No blame.",
						"expl": "A sphere of influence opens up for the great man. His fame begins to spread. The masses flock to him. His inner power is adequate to the increased outer activity. There are all sorts of things to be done, and when others are at rest in the evening, plans and anxieties press in upon him. But danger lurks here at the place of transition from lowliness to the heights. Many a great man has been ruined because the masses flocked to him and swept him into their course. Ambition has destroyed his integrity. However, true greatness is not impaired by temptations. He who remains in touch with the time that is dawning, and with its demands is prudent enough to avoid all pitfalls, and remains blameless."
					},
					{
						"poem": "Nine in the fourth place means:\nWavering flight over the depths.\nNo blame.",
						"expl": "A place of transition has been reached, and free choice can enter in. A twofold possibility is presented to the great man: he can soar to the heights and play an important part in the world, or he can withdraw into solitude and develop himself. He can go the way of the hero or that of the holy sage who seeks seclusion. There is no general law of his being. If the individual acts consistently and is true to himself, he will find the way that is appropriate for him. This way is right for him and without blame."
					},
					{
						"poem": "Nine in the fifth place means:\nFlying dragon in the heavens.\nIt furthers one to see the great man.",
						"expl": "Here the great man has attained the sphere of the heavenly beings. His influence spreads and becomes visible throughout the whole world. Everyone who sees him may count himself blessed. Confucius says about this line:Things that accord in tone vibrate together. Things that have affinity in their inmost natures seek one another. Water flows to what is wet, fire turns to what is dry. Clouds (the breath of heaven) follow the dragon, wind (the breath of earth) follows the tiger. Thus the sage arises, and all creatures follow him with their eyes. What is born of heaven feels related to what is above. What is born of earth feels related to what is below. Each follows its kind."
					},
					{
						"poem": "Nine at the top means:\nArrogant dragon will have cause to repent.",
						"expl": "When a man seeks to climb so high that he loses touch with the rest of mankind, he becomes isolated, and this necessarily leads to failure. This line warns against titanic aspirations that exceed one's power. A precipitous fall would follow. \tWhen all the lines are nines, it means:"
					}
				]
			}
		},
		{
			"number": 2,
			"name": "Kun",
			"description": "The Receptive",
			"trigrams": {
				"above": {
					"title": "kun",
					"description": "THE RECEPTIVE, EARTH"
				},
				"below": {
					"title": "kun",
					"description": "THE RECEPTIVE, EARTH"
				}
			},
			"interpretation": {
				"oracle": "\tTHE RECEPTIVE brings about sublime success,\n\tFurthering through the perseverance of a mare.\n\tIf the superior man undertakes something and tries to lead,\n\tHe goes astray;\n\tBut if he follows, he finds guidance.\n\tIt is favorable to find friends in the west and south,\n\tTo forego friends in the east and north.\n\tQuiet perseverance brings good fortune.",
				"resume": "\n\n\nThis hexagram is made up of broken lines only. The broken lines represents \nthe dark, yielding, receptive primal power of yin. The attribute of the \nhexagram is devotion; its image is the earth.  It is the perfect complement of \nTHE CREATIVE—the complement, not the opposite, for the Receptive does \nnot combat the Creative but completes it . It represents nature in contrast to \nspirit, earth in contrast to heaven, space as against time, the female-maternal \nas against the male-paternal. However, as applied to human affairs, the \nprinciple of this complementary relationship is found not only in the relation \nbetween man and woman, but also in that between prince and minister and \nbetween father and son. Indeed, even in the individual this duality appears \nin the coexistence of the spiritual world and the world of the senses.\n\n  But strictly speaking there is no real dualism here, because there is a clearly \ndefined hierarchic relationship between the two principles. In itself of course \nthe Receptive is just as important as the Creative, but the attribute of \ndevotion defines the place occupied by this primal power in relation to the \nCreative. For the Receptive must be activated and led by the Creative; then it \nis productive of good. Only when it abandons this position and tries to stand \nas an equal side by side with the Creative, does it become evil.  The result \nthen is opposition to and struggle against the Creative, which is productive of \nevil to both.\n\t",
				"judgment": "\n\nThe four fundamental aspects of the Creative—\"sublime success, furthering \nthrough perseverance\"—are also attributed to the Receptive.  Here, however, \nthe perseverance is more closely defined: it is that of a mare. The Receptive \nconnotes spatial reality in contrast to the spiritual potentiality of the Creative. \nThe potential becomes real and the spiritual becomes spatial through a \nspecifically qualifying definition. Thus the qualification, \"of a mare,\" is here \nadded to the idea of perseverance. The horse belongs to earth just as the \ndragon belongs to heaven. Its tireless roaming over the plains is taken as a \nsymbol of the vast expanse of the earth. This is the symbol chosen because \nthe mare combines the strength and swiftness of the horse with the \ngentleness and devotion of the cow.\n\n  Only because nature in its myriad forms corresponds with the myriad \nimpulses of the Creative can it make these impulses real. Nature's richness \nlies in its power to nourish all living things; its greatness lies in its power to \ngive then beauty and splendor. Thus it prospers all that lives. IT is the \nCreative that begets things, but they are brought to birth by the Receptive. \nApplied to human affairs, therefore, what the hexagram indicated is action in \nconformity with the situation. The person in questions not in an \nindependent position, but is acting as an assistant. This means that he must \nachieve something. It is not his task to try to lead—that would only make him \nlose the way-but to let himself be led. If he knows how to meet fate with an \nattitude of acceptance, he is sure to find the right guidance. The superior man \nlets himself be guided; he does not go ahead blindly, but learns from the \nsituation what is demanded of him and then follows this intimation from \nfate.\n\n  Since there is something to be accomplished, we need friends and helpers in \nthe hour of toil and effort, once the ideas to be realized are firmly set. The \ntime of toil and effort is indicated by the west and south, for west and south \nsymbolize the place where the Receptive works for the Creative, as nature \ndoes in summer and autumn. If in that situation one does not mobilize all \none's powers, the work to be accomplished will not be done. Hence to find \nfriends there means to find guidance. But in addition to the time of toil and \neffort, there is also a time of planning, and for this we need this solitude. The \neast symbolized the place where a man receives orders from his master, and \nthe north the place where he reports on what he has done. At that time he \nmust be alone and objective. In this sacred hour he must do without \ncompanions. So that the purity of the moment may not be spoiled by fictional \nhates and favoritism.\n\t",
				"image": {
					"oracle": "\tThe earth's condition is receptive devotion.\n\tThus the superior man who has breadth of character\n\tCarries the outer world.",
					"image": "\n\nJust as there is only one heaven, so too there is only one earth. In the \nhexagram of heaven the doubling of the trigram implies duration in time, \nbut in the hexagram of earth the doubling connotes the solidity and extension \nin space by virtue of which the earth is able to carry and preserve all things \nthat live and move upon it. The earth in its devotion carries all things, good \nand evil,, without exception. In the same way the superior man gives to his \ncharacter breadth, purity, and sustaining power, so that he is able both to \nsupport and to bear with people and things.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nWhen there is hoarfrost underfoot,\nSolid ice is not far off.",
						"expl": "Just as the light-giving power represents life, so the dark power, the shadowy, represents death. When the first hoarfrost comes in the autumn, the power of darkness and cold is just at its beginning. After these first warnings, signs of death will gradually multiply, until, in obedience to immutable laws, stark winter with its ice is here.  In life it is the same. After certain scarcely noticeable signs of decay have appeared, they go on increasing until final dissolution comes. But in life precautions can be taken by heeding the first signs of decay and checking them in time."
					},
					{
						"poem": "°Six in the second place means:\nStraight, square, great.\nWithout purpose,\nYet nothing remains unfurthered.",
						"expl": "The symbol of heaven is the circle, and that of earth is the square. Thus squareness is a primary quality of the earth. On the other hand, movement in a straight line, as well as magnitude, is a primary quality of the Creative. But all square things have their origin in a straight line and into turn form solid bodies. In mathematics, when we discriminate between lines, planes and solids, we find that rectangular planes result from straight lines, and cubic magnitudes from rectangular planes. The Receptive accommodates itself to the qualities of the Creative and makes them its own. Thus a square develops out of a straight line and a cube out of a square. This is compliance with the laws of the Creative; nothing is taken away, nothing added. Therefore the Receptive has no need of a special purpose of its own, nor of any effort' yet everything turns out as it should.  Nature creates all beings without erring: this is its foursquareness. It tolerates all creatures equally: this is its greatness. Therefore it attains what is right for all without artifice or special intentions. Man achieves the height of wisdom when all that he does is as self-evident as what nature does."
					},
					{
						"poem": "Six in the third place means:\nHidden lines.\nOne is able to remain persevering.\nIf by chance you are in the service of a king,\nSeek not works, but bring to completion.",
						"expl": "If a man is free of vanity he is able to conceal his abilities and keep them from attracting attention too soon; thus he can mature undisturbed.  If conditions demand it, he can also enter public life, but that too he does with restraint. The wise man gladly leaves fame to others. He does not seek to have credited to himself things that stand accomplished, but hopes to release active forces; that is, he completes his works in such a manner that they may bear fruit for the future."
					},
					{
						"poem": "Six in the fourth place means:\nA tied-up sack. No blame, no praise.",
						"expl": "The dark element opens when it moves and closes when at rest. The strictest reticence is indicated here. The time is dangerous , because any degree of prominence leads either to the enmity of irresistible antagonists if one challenges them or to misconceived recognition if one is complaisant. Therefore a man ought to maintain reserve, be it in solitude or in the turmoil of the world, for there too he can hide himself so well that no one knows him."
					},
					{
						"poem": "Six in the fifth place means:\nA yellow lower garment brings supreme good fortune.",
						"expl": "Yellow is the color of the earth and of the middle; it is the symbol of that which is reliable and genuine. The lower garment is inconspicuously decorated—the symbol of aristocratic reserve. When anyone is called upon to work in a prominent but not independent position, true success depends on the utmost discretion. A man's genuineness and refinement should not reveal themselves directly; they should express themselves only indirectly as an effect from within."
					}
				]
			}
		},
		{
			"number": 3,
			"name": "Chun",
			"description": "Difficulty at the Beginning",
			"trigrams": {
				"above": {
					"title": "kan",
					"description": "THE ABYSMAL, WATER"
				},
				"below": {
					"title": "chên",
					"description": "THE AROUSING, THUNDER"
				}
			},
			"interpretation": {
				"oracle": "\tDIFFICULTY AT THE BEGINNING works supreme success,\n\tFurthering through perseverance.\n\tNothing should be undertaken.\n\tIt furthers one to appoint helpers.",
				"resume": "\n\nThe name of the hexagram, Chun, really connotes a blade of grass pushing \nagainst an obstacle as it sprouts out of the earth—hence the meaning, \n\"difficulty at the beginning.\" The hexagram indicates the way in which \nheaven and earth bring forth individual beings. It is their first meeting, \nwhich is beset with difficulties. The lower trigram Chên is the Arousing; its \nmotion is upward and its image is thunder. The upper trigram K'an stands \nfor the Abysmal, the dangerous. Its motion is downward and its image is \nrain. The situation points to teeming, chaotic profusion; thunder and rain fill \nthe air. But the chaos clears up. While the Abysmal sinks, the upward \nmovement eventually passes beyond the danger. A thunderstorm brings \nrelease from tension, and all things breathe freely again.\n\t",
				"judgment": "\n\nTimes of growth are beset with difficulties. They resemble a first birth. But \nthese difficulties arise from the very profusion of all that is struggling to \nattain form . Everything is in motion: therefore if one perseveres there is a \nprospect of great success, in spite of the existing danger. When it is a man's \nfate to undertake such new beginnings, everything is still unformed, dark. \nHence he must hold back, because any premature move might bring disaster. \nLikewise, it is very important not to remain alone; in order to overcome the \nchaos he needs helpers. This is not to say, however, that he himself should \nlook on passively at what is happening. He must lend his hand and \nparticipate with inspiration and guidance.\n\t",
				"image": {
					"oracle": "\tClouds and thunder:\n\tThe image of DIFFICULTY AT THE BEGINNING.\n\tThus the superior man\n\tBrings order out of confusion.",
					"image": "\n\nClouds and thunder are represented by definite decorative lines; this means \nthat in the chaos of difficulty at the beginning, order is already implicit. So \ntoo the superior man has to arrange and organize the inchoate profusion of \nsuch times of beginning, just as one sorts out silk threads from a knotted \ntangle and binds them into skeins. In order to find one's place in the infinity \nof being, one must be able both to separate and to unite.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nHesitation and hindrance.\nIt furthers one to remain persevering.\nIt furthers one to appoint helpers.",
						"expl": "If a person encounters a hindrance at the beginning of an enterprise, he must not try to force advance but must pause and take thought. However, nothing should put him off his course; he must persevere and constantly keep the goal in sight. It is important to seek out the right assistants, but he can find them only if he avoids arrogance and associated with his fellows in a spirit of humility. Only then will he attract those with whose help he can combat the difficulties."
					},
					{
						"poem": "Six in the second place means:\nDifficulties pile up.\nHorse and wagon part.\nHe is not a robber;\nHe wants to woo when the time comes.\nThe maiden is chaste,\nShe does not pledge herself.\nTen years—then she pledges herself.",
						"expl": "We find ourselves beset by difficulties and hindrances. Suddenly there is a turn of affairs, as if someone were coming up with a horse and wagon and unhitching them. This event comes so unexpectedly that we assume the newcomer to be a robber. Gradually it becomes clear that he has no evil intentions but seeks to be friendly and to offer help. But this offer is not to be accepted, because it does not come from the right quarter. We must wait until the time is fulfilled; ten years is a fulfilled cycle of time. Then normal conditions return of themselves, and we can join forces with the friend intended for us.  Using the image of a betrothed girl who remains true to her lover in face of grave conflicts, the hexagram gives counsel for a special situation. When in times of difficulty a hindrance is encountered and unexpected relief is offered from a source unrelated to us, we must be careful and not take upon ourselves any obligations entailed by such help; otherwise our freedom of decision is impaired. If we bide our time, things will quiet down again, and we shall attain what we have hoped for."
					},
					{
						"poem": "Six in the third place means:\nWhoever hunts deer without the forester\nOnly loses his way in the forest.\nThe superior man understands the signs of the time\nAnd prefers to desist.\nTo go on brings humiliation.",
						"expl": "If a man tries to hunt in a strange forest and has no guide, he loses his way. When he finds himself in difficulties he must not try to steal out of them unthinkingly and without guidance. Fate cannot be duped; premature effort, without the necessary guidance, ends in failure and disgrace.  Therefore the superior man, discerning the seeds of coming events, prefers to renounce a wish rather than to provoke failure and humiliation by trying to force its fulfillment.\t\t\tSix in the fourth place means:\tHorse and wagon part.\tStrive for union.\tTo go brings good fortune.\tEverything acts to further.We are in a situation in which it is our duty to act, but we lack sufficient power. However, an opportunity to make connections offers itself. It must be seized. Neither false pride nor false reserve should deter us. Bringing oneself to take the first step, even when it involves a certain degree of self-abnegation, is a sign of inner clarity. To accept help in a difficult situation is not a disgrace. If the right helper is found, all goes well."
					},
					{
						"poem": "Nine in the fifth place means:\nDifficulties in blessing.\nA little perseverance brings good fortune.\nGreat perseverance brings misfortune.",
						"expl": "An individual is in a position in which he cannot so express his good intentions that they will actually take shape and be understood. Other people interpose and distort everything he does. He should then be cautious and proceed step by step. He must not try to force the consummation of a great undertaking, because success is possible only when general confidence already prevails. It is only through faithful and conscientious work, unobtrusively carried on, that the situation gradually clears up and the hindrance disappears."
					}
				]
			}
		},
		{
			"number": 4,
			"name": "Mêng",
			"description": "Youthful Folly",
			"trigrams": {
				"above": {
					"title": "kên",
					"description": "KEEPING STILL, MOUNTAIN"
				},
				"below": {
					"title": "kan",
					"description": "THE ABYSMAL, WATER"
				}
			},
			"interpretation": {
				"oracle": "\tYOUTHFUL FOLLY has success.\n\tIt is not I who seek the young fool;\n\tThe young fool seeks me.\n\tAt the first oracle I inform him. \n\tIf he asks two or three times, it is importunity.\n\tIf he importunes, I give him no information.\n\tPerseverance furthers.",
				"resume": "\n\nIn this hexagram we are reminded of youth and folly in two different ways. \nThe image of the upper trigram, Kên, is the mountain, that of the lower, \nK'an, is water; the spring rising at the foot of the mountain is the image of \ninexperienced youth. Keeping still is the attribute of the upper trigram; that of \nthe lower is the abyss, danger. Stopping in perplexity on the brink of a \ndangerous abyss is a symbol of the folly of youth. However, the two trigrams \nalso show the way of overcoming the follies of youth. Water is something \nthat of necessity flows on. When the spring gushes forth, it does not know at \nfirst where it will go. But its steady flow fills up the deep place blocking its \nprogress, and success is attained.\n\t",
				"judgment": "\n\nIn the time of youth, folly is not an evil. One may succeed in spite of it, \nprovided one finds an experienced teacher and has the right attitude toward \nhim. This means, first of all, that the youth himself must be conscious of his \nlack of experience and must seek out the teacher. Without this modesty and \nthis interest there is no guarantee that he has the necessary receptivity, which \nshould express itself in respectful acceptance of the teacher. This is the reason \nwhy the teacher must wait to be sought out instead of offering himself. Only \nthus can the instruction take place at the right time and in the right way.\n\n  A teacher's answer to the question of a pupil ought to be clear and definite \nlike that expected from an oracle; thereupon it ought to be accepted as a key \nfor resolution of doubts and a basis for decision. If mistrustful or \nunintelligent questioning is kept up, it serves only to annoy the teacher. He \ndoes well to ignore it in silence, just as the oracle gives one answer only and \nrefuses to be tempted by questions implying doubt.\n\n  Given addition a perseverance that never slackens until the points are \nmastered one by one, real success is sure to follow. Thus the hexagram \ncounsels the teacher as well as the pupil.\n\t",
				"image": {
					"oracle": "\tA spring wells up at the foot of the mountain:\n\tThe image of YOUTH.\n\tThus the superior man fosters his character\n\tBy thoroughness in all that he does.",
					"image": "\n\nA spring succeeds in flowing on and escapes stagnation by filling up all the \nhollow places in its path. In the same way character is developed by \nthoroughness that skips nothing but, like water, gradually and steadily fills up \nall gaps and so flows onward.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nTo make a fool develop\nIt furthers one to apply discipline.\nThe fetters should be removed.\nTo go on in this way bring humiliation.",
						"expl": "Law is the beginning of education. Youth in its inexperience is inclined at first to take everything carelessly and playfully.  It must be shown the seriousness of life. A certain measure of taking oneself in hand, brought about by strict discipline, is a good thing. He who plays with life never amounts to anything. However, discipline should not degenerate into drill. Continuous drill has a humiliating effect and cripples a man's powers."
					},
					{
						"poem": "Nine in the second place means:\nTo bear with fools in kindliness brings good fortune.\nTo know how to take women\nBrings good fortune.\nThe son is capable of taking charge of the household.",
						"expl": "These lines picture a man who has no external power, but who has enough strength of mind to bear his burden of responsibility. He has the inner superiority and that enable him to tolerate with kindliness the shortcomings of human folly. The same attitude is owed to women as the weaker sex. One must understand them and give them recognition in a spirit of chivalrous consideration. Only this combination of inner strength with outer reserve enables one to take on the responsibility of directing a larger social body with real success."
					},
					{
						"poem": "Six in the third place means:\nTake not a maiden who. When she sees a man of bronze,\nLoses possession of herself.\nNothing furthers.",
						"expl": "A weak, inexperienced man, struggling to rise, easily loses his own individuality when he slavishly imitates a strong personality of higher station. He is like a girl throwing herself away when she meets a strong man. Such a servile approach should not be encouraged, because it is bad both for the youth and the teacher. A girl owes it to her dignity to wait until she is wooed. In both cases it is undignified to offer oneself, and no good comes of accepting such an offer."
					},
					{
						"poem": "Six in the fourth place means:\nEntangled folly bring humiliation.",
						"expl": "\tFor youthful folly it is the most hopeless thing to entangle itself in empty imaginings. The more obstinately it clings to such unreal fantasies, the more certainly will humiliation overtake it. Often the teacher, when confronted with such entangled folly, has no other course but to leave the fool to himself for a time, not sparing him the humiliation that results. This is frequently the only means of rescue."
					},
					{
						"poem": "Six in the fifth place means:\nChildlike folly brings good fortune. ",
						"expl": "An inexperienced person who seeks instruction in a childlike and unassuming way is on the right path, for the man devoid of arrogance who subordinated himself to his teacher will certainly be helped."
					}
				]
			}
		},
		{
			"number": 5,
			"name": "Hsü",
			"description": "Waiting (Nourishment)",
			"trigrams": {
				"above": {
					"title": "kan",
					"description": "THE ABYSMAL, WATER"
				},
				"below": {
					"title": "chien",
					"description": "THE CREATIVE, HEAVEN"
				}
			},
			"interpretation": {
				"oracle": "\tWAITING. If you are sincere, \n\tYou have light and success.\n\tPerseverance brings good fortune.\n\tIt furthers one to cross the great water.",
				"resume": "\n\nAll beings have need of nourishment from above. But the gift of food comes \nin its own time, and for this one must wait. This hexagram shows the clouds \nin the heavens, giving rain to refresh all that grows and to provide mankind \nwith food and drink. The rain will come in its own time. We cannot make it \ncome; we have to wait for it. The idea of waiting is further suggested by the \nattributes of the two trigrams—strength within, danger in from. Strength in \nthe face of danger does not plunge ahead but bides its time, whereas weakness \nin the face of danger grows agitated and has not the patience to wait.\n\t",
				"judgment": "\n\nWaiting is not mere empty hoping. It has the inner certainty of reaching the \ngoal. Such certainty alone gives that light which leads to success. This leads \nto the perseverance that brings good fortune and bestows power to cross the \ngreat water. One is faced with a danger that has to be overcome. Weakness \nand impatience can do nothing. Only a strong man can stand up to his fate, \nfor his inner security enables him to endure to the end. This strength shows \nitself in uncompromising truthfulness [with himself]. It is only when we \nhave the courage to face things exactly as they are, without any sort of self-\ndeception or illusion, that a light will develop out of events, by which the \npath to success may be recognized. This recognition must be followed by \nresolute and persevering action. For only the man who goes to meet his fate \nresolutely is equipped to deal with it adequately. Then he will be able to cross \nthe great water—that is to say, he will be capable of making the necessary \ndecision and of surmounting the danger.\n\t",
				"image": {
					"oracle": "\tClouds rise up to heaven:\n\tThe image of WAITING.\n\tThus the superior man eats and drinks,\n\tIs joyous and of good cheer. ",
					"image": "\n\nWhen clouds rise in the sky, it is a sign that it will rain. There is nothing to \ndo but to wait until after the rain falls. It is the same in life when destiny is at \nwork. We should not worry and seek to shape the future by interfering in \nthings before the time is ripe. We should quietly fortify the body with food \nand drink and the mind with gladness and good cheer. Fate comes when it \nwill, and thus we are ready.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nWaiting in the meadow.\nIT furthers one to abide in what endures.\nNo blame.",
						"expl": "The danger is not yet close. One is still waiting on the open plain. Conditions are still simple, yet there is a feeling of something impending. One must continue to lead a regular life as long as possible. Only in this way does one guard against a premature waste of strength, keep free of blame and error that would become a source of weakness later on."
					},
					{
						"poem": "Nine in the second place means:\nWaiting on the sand.\nThere is some gossip.\nThe end brings good fortune.",
						"expl": "The danger gradually comes closer. Sand is near the bank of the river, and the water means danger. Disagreements crop up. General unrest can easily develop in such times, and we lay the blame on one another. He who stays calm will succeed in making things go well in the end. Slander will be silenced if we do not gratify it with injured retorts."
					},
					{
						"poem": "Nine in the third place means:\nWaiting in the mud\nBrings about the arrival of the enemy.",
						"expl": "Mud is no place for waiting, since it is already being washed by the water of the stream. Instead of having gathered strength to cross the stream at one try, one has made a premature start that has got him no farther than the muddy bank. Such an unfavorable position invites enemies from without, who naturally take advantage of it. Caution and a sense of the seriousness of the situation are all that can keep one from injury."
					},
					{
						"poem": "Six in the fourth place means:\nWaiting in blood.\nGet out of the pit.",
						"expl": "The situation is extremely dangerous. IT is of utmost gravity now—a matter of life and death. Bloodshed seems imminent. There is no going forward or backward; we are cut off as if in a pit. Now we must simply stand fast and let fate take its course. This composure, which keeps us from aggravating the trouble by anything we might do, is the only way of getting out of the dangerous pit."
					},
					{
						"poem": "Nine in the fifth place means:\nWaiting at meat and drink.\nPerseverance brings good fortune.",
						"expl": "Even in the midst of danger there come intervals of peace when things go relatively well. If we possess enough inner strength, we shall take advantage of these intervals to fortify ourselves for renewed struggle. We must know how to enjoy the moment without being deflected from the goal, for perseverance is needed to remain victorious.  This is true in public life as well; it is not possible to achieve everything all at once. The height of wisdom is to allow people enough recreation to quicken pleasure in their work until the task is completed. Herein lies the secret of the whole hexagram. It differs from Chin OBSTRUCTION (39), in the fact that in this instance, while waiting, we are sure of our cause and therefore do not lose the serenity born of inner cheerfulness."
					}
				]
			}
		},
		{
			"number": 6,
			"name": "Sung",
			"description": "Conflict",
			"trigrams": {
				"above": {
					"title": "chien",
					"description": "THE CREATIVE, HEAVEN"
				},
				"below": {
					"title": "kan",
					"description": "THE ABYSMAL, WATER"
				}
			},
			"interpretation": {
				"oracle": "\tCONFLICT. You are sincere\n\tAnd are being obstructed.\n\tA cautious halt halfway brings good fortune.\n\tGoing through to the end brings misfortune.\n\tIt furthers one to see the great man.\n\tIt does not further one to cross the great water.",
				"resume": "\n\nThe upper trigram, whose image is heaven, has an upward movement; the \nlower trigram, water, in accordance with its nature tends downward. Thus the \ntwo halves move away from each other, giving rise to the idea of conflict.\n\n  The attribute of the Creative is strength, that of the Abysmal is danger, guile. \nWhere cunning has force before it, there is conflict.\n\n  A third indication of conflict, in terms of character, is presented by the \ncombination of deep cunning within and fixed determination outwardly. A \nperson of this character will certainly be quarrelsome.\n\t",
				"judgment": "\n\nConflict develops when one feels himself to be in the right and runs into \nopposition. If one is not convinced of being in the right, opposition leads to \ncraftiness or high-handed encroachment but not to open conflict.\n\n  If a man is entangled in a conflict, his only salvation lies in being so clear-\nheaded and inwardly strong that he is always ready to come to terms by \nmeeting the opponent halfway. To carry one the conflict to the bitter end has \nevil effects even when one is the right, because the enmity is then \nperpetuated. It is important to see the great man, that is, an impartial man \nwhose authority is great enough to terminate the conflict amicably or assure a \njust decision. In times of strife, crossing the great water is to be avoided, that \nis, dangerous enterprises are not to be begun, because in order to be successful \nthey require concerted unity of focus. Conflict within weakens the power to \nconquer danger without.\n\t",
				"image": {
					"oracle": "\tHeaven and water go their opposite ways:\n\tThe image of CONFLICT.\n\tThus in all his transactions the superior man\n\tCarefully considers the beginning.",
					"image": "\n\nThe image indicates that the causes of conflict are latent in the opposing \ntendencies of the two trig rams. Once these opposing tendencies appear, \nconflict is inevitable. To avoid it, therefore, everything must be taken \ncarefully into consideration in the very beginning. If rights and duties are \nexactly defined, or if, in a group, the spiritual trends of the individuals \nharmonize, the cause of conflict is removed in advance.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nIf one does not perpetuate the affair,\nThere is a little gossip.\nIn the end, good fortune comes.",
						"expl": "While a conflict is in the incipient stage, the best thing To do is to drop the issue. Especially when the adversary is stronger, it is not advisable to risk pushing the conflict to a decision. It may come to a slight dispute, but in the end all goes well."
					},
					{
						"poem": "Nine in the second place means:\nOne cannot engage in conflict;\nOne returns home, gives way.\nThe people of his town,\nThree hundred households, \nRemain free of guilt.",
						"expl": "In a struggle with an enemy of superior strength, retreat is no disgrace. Timely withdrawal prevents bad consequences. If, out of a false sense of honor, a man allowed himself to be tempted into an unequal conflict, he would be drawing down disaster upon himself. In such a case a wise and conciliatory attitude benefits the whole community, which will then not be drawn into the conflict.\t\tSix in the third place means:\tTo nourish oneself on ancient virtue induces perseverance.\tDanger. In the end, good fortune comes.\tIf by chance you are in the service of a king,\tSeek not works.This is a warning of the danger that goes with an expansive disposition. Only that which has been honestly acquired through merit remains a permanent possession. It can happen that such a possession may be contested, but since it is really one's own, one cannot be robbed of it. Whatever a man possesses through the strength of his own nature cannot be lost. If one enters the service of a superior, one can avoid conflict only by not seeking works for the sake of prestige. It is enough if the work is done: let the honor go to the other."
					},
					{
						"poem": "Nine in the fourth place means:\nOne cannot engage in conflict.\nOne turns back and submits to fate,\nChanges one's attitude, \nAnd finds peace in perseverance.\nGood fortune.",
						"expl": "This refers to a person whose inner attitude at first lacks peace. He does not feel content with his situation and would like to improve it through conflict. In contrast tot the situation of the nine in the second place, he is dealing with a weaker opponent and might therefore succeed. But he cannot carry on the fight, because, since right is not on his side, he cannot justify the conflict to his conscience. Therefore he turns back and accepts his fate. He changes his mind and finds lasting peace in being at one with eternal law. This brings good fortune."
					}
				]
			}
		},
		{
			"number": 7,
			"name": "Shih",
			"description": "The Army",
			"trigrams": {
				"above": {
					"title": "kun",
					"description": "THE RECEPTIVE, EARTH"
				},
				"below": {
					"title": "kan",
					"description": "THE ABYSMAL, WATER"
				}
			},
			"interpretation": {
				"oracle": "\tTHE ARMY. The army needs perseverance\n\tAnd a strong man.\n\tGood fortune without blame.",
				"resume": "\n\nThis hexagram is made up of the trigrams K'an, water, and K'un, earth, and \nthus it symbolizes the ground water stored up in the earth. In the same way \nmilitary strength is stored up in the mass of the people—invisible in times of \npeace but always ready for use as a source of power. The attributes of the two \ntrig rams are danger inside and obedience must prevail outside.\n\n  Of the individual lines, the one that controls the hexagram is the strong \nnine in the second place, to which the other lines, all yielding, are \nsubordinate. This line indicates a commander, because it stands in the \nmiddle of one of the two trigrams. But since it is in the lower rather than the \nupper trigram, it represents not the ruler but the efficient general, who \nmaintains obedience in the army by his authority.\n\t",
				"judgment": "\n\nAn army is a mass that needs organization in order to become a fighting force.  \nWithout strict discipline nothing can be accomplished, but this discipline \nmust not be achieved by force. It requires a strong man who captures the \nhearts of the people and awakens their enthusiasm. In order that he may \ndevelop his abilities he needs the complete confidence of his ruler, who must \nentrust him with full responsibility as long as the war lasts. But war is always \na dangerous thing and brings with it destruction and devastation. Therefore \nit should not be resorted to rashly but, like a poisonous drug, should be used \nas a last recourse.\n\t",
				"image": {
					"oracle": "\tIn the middle of the earth is water:\n\tThe image of THE ARMY.\n\tThus the superior man increases his masses\n\tBy generosity toward the people.",
					"image": "\n\nGround water is invisibly present within the earth. In the same way the \nmilitary power of a people is invisibly present in the masses. When danger \nthreatens, every peasant becomes present in the masses. When danger \nthreatens, every peasant becomes a soldier; when the war ends, he goes back \nto his plow. He who is generous toward the people wins their love, and a \npeople living under a mild rule becomes strong and powerful. Only a people \neconomically strong can be important in military power. Such power must \ntherefore be cultivated by improving the economic condition of the people \nand by humane government. Only when there is this invisible bond between \ngovernment and people, so that the people are sheltered by their \ngovernment as ground water is sheltered by the earth, is it possible to wage a \nvictorious war.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nAn army must set forth in proper order.\nIf the order is not good, misfortune threatens.",
						"expl": "At the beginning of a military enterprise, order is imperative. A just and valid cause must exist, and the obedience and coordination of the troops must be well organized, otherwise the result is inevitably failure."
					},
					{
						"poem": "Nine in the second place means:\nIn the midst of the army.\nGood fortune. No blame.\nThe king bestows a triple decoration.",
						"expl": "The leader should be in the midst of his army, in touch with it, sharing good and bad with the masses he leads. This alone makes him equal to the heavy demands made upon him. He needs also the recognition of the ruler. The decorations he receives are justified, because there is no question of personal preferment here: the whole army, whose center he is, is honored in his person. \tSix in the third place means:\tPerchance the army carries corpses in the wagon.\tMisfortune.Here we have a choice of two explanations. One points to defeat because someone other than the chosen leader interferes with the command; the other is similar in its general meaning, but the expression, \"carries corpses in the wagon,\" is interpreted differently. At burials and at sacrifices to the dead it was customary in China for the deceased to whom the sacrifice was made to be represented by a boy of the family, who sat in the dead man's place and was honored as his representative. On the basis of this custom the text is interpreted as meaning that a \"corpse boy\" is sitting in the wagon, or, in other words, that authority is not being exercised by the proper leaders but has been usurped by others. Perhaps the whole difficulty clears up if it is inferred that there has been an error in copying. The character fan, meaning \"all,\" may have been misread as shih, which means \"corpse.\" Allowing for this error, the meaning would be that if the multitude assumes leadership of the army (rides in the wagon), misfortune will ensue."
					},
					{
						"poem": "Six in the fourth place means:\nThe army retreats. No blame.",
						"expl": "In the face of a superior enemy, with whom it would be hopeless to engage in battle, an orderly retreat is the only correct procedure, because it will save the army from defeat and disintegration. It is by no means a sign of courage or strength to insist upon engaging in a hopeless struggle regardless of circumstances."
					},
					{
						"poem": "Six in the fifth place means:\nThere is game in the field.\nIt furthers one to catch it.\nWithout blame.\nLet the eldest lead the army.\nThe younger transports corpses;\nThen perseverance brings misfortune.",
						"expl": "Game is in the field—it has left its usual haunts in the forest and is devastating the fields. This points to an enemy invasion. Energetic combat and punishment are here thoroughly justified, but they must not degenerate into a wild melee in which everyone fends for himself. Despite the greatest degree of perseverance and bravery, this would lead to misfortune. The army must be directed by an experienced leader. It is a matter of waging war, not of permitting the mob to slaughter all who fall into their hands; if they do, defeat will be the result, and despite all perseverance there is danger of misfortune."
					}
				]
			}
		},
		{
			"number": 8,
			"name": "Pi",
			"description": "Holding Together [union]",
			"trigrams": {
				"above": {
					"title": "kan",
					"description": "THE ABYSMAL, WATER"
				},
				"below": {
					"title": "kun",
					"description": "THE RECEPTIVE, EARTH"
				}
			},
			"interpretation": {
				"oracle": "\tHOLDING TOGETHER brings good fortune.\n\tInquire of the oracle once again\n\tWhether you possess sublimity, constancy, and perseverance;\n\tThen there is no blame.\n\tThose who are uncertain gradually join.\n\tWhoever come too late\n\tMeets with misfortune.",
				"resume": "\n\nThe waters on the surface of the earth flow together wherever they can, as for \nexample in the ocean, where all the rivers come together. Symbolically this \nconnotes holding together and the laws that regulate it. The same idea is \nsuggested by the fact that all the lines of the hexagram except the fifth, the \nplace of the ruler, are yielding. The yielding lines hold together because they \nare influenced by a man of strong will in the leading position, a man who is \ntheir center of union. Moreover, this strong and guiding personality in turn \nholds together with the others, finding in them the complement of his own \nnature.\n\t",
				"judgment": "\n\nWhat is required is that we unite with others, in order that all may \ncomplement and aid one another through holding together. But such \nholding together calls for a central figure around whom other persons may \nunite. To become a center of influence holding people together is a grave \nmatter and fraught with great responsibility. It requires greatness of spirit, \nconsistency, and strength. Therefore let him who wishes to gather others \nabout him ask himself whether he is equal to the undertaking, for anyone \nattempting the task without a real calling for it only makes confusion worse \nthan if no union at all had taken place.\n\n  But when there is a real rallying point, those who at first are hesitant or \nuncertain gradually come in of their own accord. Late-comers must suffer the \nconsequences, for in holding together the question of the right time is also \nimportant. Relationships are formed and firmly established according to \ndefinite inner laws. Common experiences strengthen these ties, and he who \ncomes too late to share in these basic experiences must suffer for it if, as a \nstraggler, he finds the door locked.\n\n  If a man has recognized the necessity for union and does not feel strong \nenough to function as the center, it is his duty to become a member of some \nother organic fellowship.\n\t",
				"image": {
					"oracle": "\tOn the earth is water:\n\tThe image of HOLDING TOGETHER.\n\tThus the kings of antiquity\n\tBestowed the different states as fiefs\n\tAnd cultivated friendly relations\n\tWith the feudal lords.",
					"image": "\n\nWater fills up all the empty places on the earth and clings fast to it. The social \norganization of ancient China was based on this principle of the holding \ntogether of dependents and rulers. Water flows to unite with water, because \nall parts of it are subject to the same laws. So too should human society hold \ntogether through a community of interests that allows each individual to feel \nhimself a member of a whole. The central power of a social organization \nmust see to it that every member finds that his true interest lies in holding \ntogether with it, as was the case in the paternal relationship between king and \nvassals in ancient China.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nHold to him in truth and loyalty;\nThis is without blame.\nTruth, like a full earthen bowl\"\nThus in the end\nGood fortune comes from without.",
						"expl": "Fundamental sincerity is the only proper basis for forming relationships. This attitude, symbolized by a full earthen bowl, in which the content is everything and the empty form nothing, shows itself not in clever words but through the strength of what lies within the speaker. This strength is so great that it has power to attract good fortune to itself from without."
					},
					{
						"poem": "Six in the second place means:\nHold to him inwardly.\nPerseverance brings good fortune.",
						"expl": "\tIf a person responds perseveringly and in the right way to the behests from above that summon him to action, his relations with others are intrinsic and he does not lose himself. But if a man seeks association with others as if he were an obsequious office hunter, he throws himself away. He does not follow the path of the superior man, who never loses his dignity."
					},
					{
						"poem": "Six in the third place means:\nYou hold together with the wrong people.",
						"expl": "We are often among people who do not belong to our own sphere. In that case we must beware of being drawn into false intimacy through force of habit. Needless to say, this would have evil consequences. Maintaining sociability without intimacy is the only right attitude toward people, because otherwise we should not be free to enter into relationship with people of our own kind later on."
					},
					{
						"poem": "Six in the fourth place means:\nHold to him outwardly also.\nPerseverance brings good fortune.",
						"expl": "Here the relations with a man who is the center of union are well established. Then we may, and indeed we should, show our attachment openly. But we must remain constant and not allow ourselves to be led astray."
					}
				]
			}
		},
		{
			"number": 9,
			"name": "Hsiao Chu",
			"description": "The Taming Power of the Small",
			"trigrams": {
				"above": {
					"title": "sun",
					"description": "THE GENTLE, WIND"
				},
				"below": {
					"title": "chien",
					"description": "THE CREATIVE, HEAVEN"
				}
			},
			"interpretation": {
				"oracle": "\tTHE TAMING POWER OF THE SMALL\n\tHas success.\n\tDense clouds, no rain from our western region.",
				"resume": "\n\nThis hexagram means the force of the small—the power of the shadowy—that \nrestrains, tames, impedes. A weak line in the fourth place, that of the \nminister, holds the five strong lines in check. In the Image it is the wind \nblowing across the sky. The wind restrains the clouds, the rising breath of the \nCreative, and makes them grow dense, but as yet is not strong enough to turn \nthem to rain. The hexagram presents a configuration of circumstances in \nwhich a strong element is temporarily held in leash by a weak element. It is \nonly through gentleness that this can have a successful outcome.\n\t",
				"judgment": "\n\nThis image refers to the state of affairs in China at the time when King Wên, \nwho came originally from the west, was in the east at the court of the reigning \ntyrant Chou Hsin. The moment for action on a large scale had not yet \narrived. King Wên could only keep the tyrant somewhat in check by friendly \npersuasion. Hence the image of many clouds, promising moisture and \nblessing to the land, although as yet no rain falls. The situation is not \nunfavorable; there is a prospect of ultimate success, but there are still obstacles \nin the way, and we can merely take preparatory measures. Only through the \nsmall means of friendly persuasion can we exert any influence. The time has \nnot yet come for sweeping measures. However, we may be able, to a limited \nextent, to act as a restraining and subduing influence. To carry out our \npurpose we need firm determination within and gentleness and adaptability \nin external relations.\n\t",
				"image": {
					"oracle": "\t\n\t\n\tThe wind drives across heaven:\n\tThe image of THE TAMING POWER OF THE SMALL.\n\n \tThus the superior man\n\tRefines the outward aspect of his nature.",
					"image": "\n\nThe wind can indeed drive the clouds together in the sky; yet, being nothing \nbut air, without solid body, it does not produce great or lasting effects. So also \nan individual, in times when he can produce no great effect in the outer \nworld, can do nothing except refine the expression of his nature in small \nways.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nReturn to the way.\nHow could there be blame in this?\nGood fortune.",
						"expl": "It lies in the nature of a strong man to press forward. In so doing he encounters obstructions. Therefore he returns to the way suited to his situation, where he is free to advance or to retreat. In the nature of things this will bring good fortune, for it is wise and reasonable not to try to obtain anything by force."
					},
					{
						"poem": "Nine in the second place means:\nHe allows himself to be drawn into returning.\nGood fortune.",
						"expl": "One would like to press forward, but before going farther one sees from the example of others like oneself that this way is blocked. In such a case, if the effort to push forward is not in harmony with the time, a reasonable and resolute man will not expose himself to a personal rebuff, but will retreat with others of like mind. This brings good fortune, because he does not needlessly jeopardize himself."
					},
					{
						"poem": "Nine in the third place means:\nThe spokes burst out of the wagon wheels.\nMan and wife roll their eyes.",
						"expl": "\tHere an attempt is made to press forward forcibly, in the consciousness that the obstructing power is slight. But since, under the circumstances, power actually lies with the weak, this sudden offensive is doomed to failure. External conditions hinder the advance, just as loss of the wheel spokes stops the progress of a wagon. We do not yet heed this hint form fate, hence there are annoying arguments like those of a married couple. Naturally this is not a favorable state of thing, for though the situation may enable the weaker side to hold its ground, the difficulties are too numerous to permit of a happy result. In consequence even the strong man cannot so use his power as to exert the right influence on those around him. He experiences a rebuff where he expected an easy victory, and he thus compromises his dignity."
					},
					{
						"poem": "°Six in the fourth place means:\nIf you are sincere, blood vanishes and fear gives way.\nNo blame.",
						"expl": "\tIf one is in the difficult and responsible position of counselor to a powerful man, on should restrain him in such a way that the threat of actual bloodshed may arise. Nonetheless, the power of disinterested truth is greater than all theses obstacles. It carries such weight that the end is achieved, and all danger of bloodshed and all fear disappear."
					}
				]
			}
		},
		{
			"number": 10,
			"name": "Lü",
			"description": "Treading [conduct]",
			"trigrams": {
				"above": {
					"title": "chien",
					"description": "THE CREATIVE, HEAVEN"
				},
				"below": {
					"title": "tui",
					"description": "THE JOYOUS, LAKE"
				}
			},
			"interpretation": {
				"oracle": "\tTREADING. Treading upon the tail of the tiger.\n\tIt does not bite the man. Success.",
				"resume": "\n\nThe name of the hexagram means on the one hand the right way of \nconducting oneself. Heaven, the father, is above, and the lake, the youngest \ndaughter, is below. This shows the difference between high and low, upon \nwhich composure correct social conduct, depends. On the other hand the \nword for the name of the hexagram, TREADING, means literally treading \nupon something. The small and cheerful [Tui] treads upon the large and \nstrong [Ch'ien]. The direction of movement of the two primary trigrams is \nupward. The fact that the strong treads on the weak is not mentioned in the \nBook of Changes, because it is taken for granted. For the weak to take a stand \nagainst the strong is not dangerous here, because it happened in good humor \n[Tui] and without presumption, so that the strong man is not irritated but \ntakes it all in good part.\n\t",
				"judgment": "\n\nThe situation is really difficult. That which is strongest and that which is \nweakest are close together. The weak follows behind the strong and worries \nit. The strong, however, acquiesces and does not hurt the weak, because the \ncontact is in good humor and harmless.\n\n  In terms of a human situation, one is handling wild, intractable people. In \nsuch a case one's purpose will be achieved if one behaves with decorum. \nPleasant manners succeed even with irritable people.\n\t",
				"image": {
					"oracle": "\tHeaven above, the lake below:\n\tThe image of TREADING.\n\tThus the superior man discriminates between high and low,\n\tAnd thereby fortifies the thinking of the people.",
					"image": "\n\nHeaven and the lake show a difference of elevation that inheres in the \nnatures of the two, hence no envy arises. Among mankind also there are \nnecessarily differences of elevation; it is impossible to bring about universal \nequality. But it is important that differences in social rank should not be \narbitrary and unjust, for if this occurs, envy and class struggle are the \ninevitable consequences. If, on the other hand, external differences in rank \ncorrespond with differences in inner worth, and if inner worth forms the \ncriterion of external rank, people acquiesce and order reigns in society.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nSimple conduct. Progress without blame.",
						"expl": "The situation is one in which we are still not bound by any obligations of social intercourse. If our conduct is simple, we remain free of them We can quietly follow our predilections as long as we are content and make not demands on people.  The meaning of the hexagram is not standstill but progress. A man finds himself in an altogether inferior position at the start. However, he has the inner strength that guarantees progress. If he can be content with simplicity, he can make progress without blame. When a man is dissatisfied with modest circumstances, he is restless and ambitious and tries to advance, not for the sake of accomplishing anything worth while, but merely in order to escape from lowliness and poverty by dint of his conduct. Once his purpose is achieved, he is certain to become arrogant and luxury-loving. Therefore blame attaches to his progress. On the other hand, a man who is good at his work is content to behave simply. He wishes to make progress in order to accomplish something. When he attains his goal, he does something worth while, an all is well."
					},
					{
						"poem": "Nine in the second place means:\nTreading a smooth, level course.\nThe perseverance of a dark man\nBrings good fortune.",
						"expl": "The situation of a lonely sage is indicated here. He remains withdrawn from the bustle of life, seeks nothing, asks nothing of anyone, and travels through life unassailed, on a level road. Since he is content and does not challenge fate, he remains free of entanglements."
					},
					{
						"poem": "°Six in the third place means:\nA one-eyed man is able to see,\nA lame man is able to tread.\nHe treads on the tail of the tiger.\nThe tiger bites the man.\nMisfortune.\nThus does a warrior act on behalf of his great prince.",
						"expl": "A one-eyed man can indeed see, but not enough for clear vision. A lame man can indeed treat, but not enough to make progress. If in spite of such defects a man considers himself strong and consequently exposes himself to danger, he is inviting disaster, for he is undertaking something beyond his strength. This reckless way of plunging ahead, regardless of the adequacy of one's powers, can be justified only in the case of a warrior battling for his prince."
					},
					{
						"poem": "Nine in the fourth place means:\nHe treads on the tail of the tiger.\nCaution and circumspection\nLead ultimately to good fortune.",
						"expl": "This text refers to a dangerous enterprise. The inner power to carry it through is there, but this inner power is combined with hesitating caution in one's external attitude. This line contrasts with the preceding line, which is weak within but outwardly presses forward. Here one is sure of ultimate success, which consists in achieving one's purpose, that is, in overcoming danger by going forward."
					},
					{
						"poem": "Nine in the fifth place means:\nResolute conduct.\nPerseverance with awareness of danger.",
						"expl": "This refers to the ruler of the hexagram as a whole. One sees that one has to be resolute in conduct. But at the same time one must remain conscious of the danger connected with such resoluteness, especially if it is to be persevered in. Only awareness of the danger makes success possible."
					}
				]
			}
		},
		{
			"number": 11,
			"name": "Tai",
			"description": "Peace",
			"trigrams": {
				"above": {
					"title": "kun",
					"description": "THE RECEPTIVE, EARTH"
				},
				"below": {
					"title": "chien",
					"description": "THE CREATIVE, HEAVEN"
				}
			},
			"interpretation": {
				"oracle": "\tPEACE. The small departs,\n\tThe great approaches.\n\tGood fortune. Success.",
				"resume": "\n\nThe Receptive, which moves downward, stands above; the Creative, which \nmoves upward, is below. Hence their influences meet and are in harmony, \nso that all living things bloom and prosper. This hexagram belongs to the \nfirst month (February-March), at which time the forces of nature prepare the \nnew spring. \n\n\t",
				"judgment": "\n\nThis hexagram denotes a time in nature when heaven seems to be on earth. \nHeaven has placed itself beneath the earth, and so their powers unite in deep \nharmony. Then peace and blessing descend upon all living things.\n\n  In the world of man it is a time of social harmony; those in high places \nshow favor to the lowly, and the lowly and inferior is an end to all feuds. \n  In side, at the center, in the key position, is the light principle; the dark \nprinciple is outside. Thus the light has a powerful influence, while the dark \nis submissive. In this way each receives its due. When the good elements of \nsociety occupy a central position and are in control, the evil elements come \nunder their influence and change for the better. When the spirit of heaven \nrules in man, his animal nature also comes under its influence and takes its \nappropriate place. \n  The individual lines enter the hexagram from below and leave it again at \nthe top. Here the small, weak, and evil elements are about to take their \ndeparture, while the great, strong, and good elements are moving up. This \nbrings good fortune and success.\n\t",
				"image": {
					"oracle": "\tHeaven and earth unite: the image of PEACE.\n\tThus the ruler\n\tDivides and completes the course of heaven and earth,\n\tAnd so aids the people.",
					"image": "\n\nHeaven and earth are in contact and combine their influences, producing a \ntime of universal flowering and prosperity. This stream of energy must be \nregulated by the ruler of men. It is done by a process of division. Thus men \ndivide the uniform flow of time into the seasons, according to the succession \nof natural phenomena, and mark off infinite space by the points of the \ncompass. In this way nature in its overwhelming profusion of phenomena is \nbounded and controlled. One the other hand, nature must be furthered in \nher productiveness. This is done by adjusting the products to the right time \nand the right place, which increases the natural yield.  This controlling and \nfurthering activity of man in his relation to nature is the work on nature that \nrewards him.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nWhen ribbon grass is pulled up, the sod comes with it.\nEach according to his kind.\nUndertakings bring good fortune.",
						"expl": "In times of prosperity every able man called to fill an office draws like minded people along with him, just as in pulling up ribbon grass one always pulls up a bunch of it, because the stalks are connected by their roots. In such times, when it is possible to extend influence widely, the mind of an able man is set upon going out into life and accomplishing something."
					},
					{
						"poem": "Nine in the second place means:\nBearing with the uncultured in gentleness,\nFording the river with resolution,\nNot neglecting what is distant,\nNot regarding one's companions:\nThus one may manage to walk in the middle.",
						"expl": "In times of prosperity it is important and above all to possess enough greatness of soul to bear with imperfect people. For in the hands of a great master no material is unproductive; he can find use for everything. But this generosity is by no means laxity or weakness. It is during times of prosperity especially that we must always be ready to risk even dangerous undertakings, such as the crossing of a river, if they are necessary. So too we must not neglect what is distant but must attend scrupulously to everything. Factionalism and the dominance of cliques are especially to be avoided. Even if people of like mind come forward together, they ought not to form a faction by holding together for mutual advantage; instead, each man should do is duty. Theses are four ways in which one can overcome the hidden danger of a gradual slackening that always lurks in any time of peace. And that is how one finds the middle way for action."
					},
					{
						"poem": "Nine in the third place means:\nNo plain not followed by a slope.\nNo going not followed by a return.\nHe who remains persevering in danger\nIs without blame.\nDo not complain about this truth;\nEnjoy the good fortune you still possess.",
						"expl": "\t\tEverything on earth is subject to change. Prosperity is followed by decline: this is the eternal law on earth. Evil can indeed be held in check but not permanently abolished. It always returns. This conviction might induct melancholy, but it should not; it ought only to keep us from falling into illusion when good fortune comes to us. If we continue mindful of the danger, we remain persevering and make no mistakes. As long as a man's inner nature remains stronger and richer than anything offered by external fortune, as long as he remains inwardly superior to fate, fortune will not desert him."
					},
					{
						"poem": "Six in the fourth place means:\nHe flutters down, not boasting of his wealth,\nTogether with his neighbor,\nGuileless and sincere.",
						"expl": "In times of mutual confidence, people of high rank come in close contact with the lowly quite simply and without boasting of their wealth. This is not due to the force of circumstances but corresponds with their inmost sentiment. The approach is made quite spontaneously, because it is based on inner conviction."
					},
					{
						"poem": "Six in the fifth place means:\nThe sovereign I\nGives his daughter in marriage.\nAnd supreme good fortune.",
						"expl": "The sovereign I is T'ang the Completer. By his decree the imperial princesses, although higher in rank than their husbands, had to obey them like all other wives. Here too we are shown a truly modest union of high and low that brings happiness and blessings."
					}
				]
			}
		},
		{
			"number": 12,
			"name": "Pi",
			"description": "Standstill [Stagnation]",
			"trigrams": {
				"above": {
					"title": "chien",
					"description": "THE CREATIVE, HEAVEN"
				},
				"below": {
					"title": "kun",
					"description": "THE RECEPTIVE, EARTH"
				}
			},
			"interpretation": {
				"oracle": "\tSTANDSTILL. Evil people do not further\n\tThe perseverance of the superior man.\n\tThe great departs; the small approaches.",
				"resume": "\n\nThis hexagram is the opposite of the preceding one. Heaven is above, \ndrawing farther and farther away, while the earth below sinks farther into the \ndepths. The creative powers are not in relation. It is a time of standstill and \ndecline. This hexagram is linked with the seventh month (August-\nSeptember), when the year has passed its zenith and autumnal decay is setting \nin. \n\n\t",
				"judgment": "\n\nHeaven and earth are out of communion and all things are benumbed. What \nis above has no relation to what is below, and on earth confusion and \ndisorder prevail. The dark power is within, the light power is without. \nWeakness is within, harshness without. Within are the inferior, and \nwithout are the superior. The way of inferior people is in ascent; the way of \nsuperior people is on the decline. But the superior people do not allow \nthemselves to be turned from their principles. If the possibility of exerting \ninfluence is closed to them, they nevertheless remain faithful to their \nprinciples and withdraw into seclusion.\n\t",
				"image": {
					"oracle": "\n\n\t\n\tHeaven and earth do not unite:\n\tThe image of STANDSTILL.\n\tThus the superior man falls back upon his inner worth \n\tIn order to escape the difficulties.\n\tHe does not permit himself to be honored with revenue.",
					"image": "\n\nWhen, owing to the influence of inferior men, mutual mistrust prevails in \npublic life, fruitful activity is rendered impossible, because the fundaments \nare wrong. Therefore the superior man knows what he must do under such \ncircumstances; he does not allow himself to be tempted by dazzling offers to \ntake part in public activities. This would only expose him to danger, since he \ncannot assent to the meanness of the others. He therefore hides his worth \nand withdraws into seclusion.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nWhen ribbon grass is pulled up, the sod comes with it.\nEach according to his kind.\nPerseverance brings good fortune and success.",
						"expl": "The text is almost the same as that of the first line of the preceding hexagram, but with a contrary meaning. In the latter a man is drawing another along with him on the road to an official career; here a man is drawing another with him into retirement from public life. This is why the text says here, \"Perseverance brings good fortune and success,\" and not \"Undertakings bring good fortune.\" If it becomes impossible to make our influence count, it is only by retirement that we spare ourselves humiliation. Success in a higher sense can be ours, because we know how to safeguard the value of our personalities."
					},
					{
						"poem": "°Six in the second place means:\nThey bear and endure;\nThis means good fortune for inferior people.\nThe standstill serves to help the great man to attain success.",
						"expl": "Inferior people are ready to flatter their superiors in a servile way. They would also endure the superior man if he would put an end to their confusion. This is fortunate for them. But the great man calmly bears the consequences of the standstill. He does not mingle with the crowd of the inferior; that is not his place. By his willingness to suffer personally he insures the success of his fundamental principles.\t\t\tSix in the third place means:\tThey bear shame.Inferior people who have risen to power illegitimately do not feel equal to the responsibility they have taken upon themselves. In their hearts they begin to be ashamed, although at first they do not show it outwardly. This marks a turn for the better. \t\tNine in the fourth place means:\tHe who acts at the command of the highest \tRemains without blame.\tThose of like mind partake of the blessing.The time of standstill is nearing the point of change into its opposite. Whoever wishes to restore order must feel himself called to the task and have the necessary authority. A man who sets himself up as capable of creating order according to his own judgment could make mistakes and end in failure. But the man who is truly called to the task is favored by the conditions of the time, and all those of like mind will share in his blessing. \tNine in the fifth place means:\tStandstill is giving way.\tGood fortune for the great man.\t\"What if it should fail, what if it should fail?\"\tIn this way he ties it to a cluster of mulberry shoots.The time undergoes a change. The right man, able to restore order, has arrived. Hence \"good fortune.\" But such periods of transition are the very times in which we must fear and tremble. Success is assured only through greatest caution, which asks always, \"What if it should fail?\" When a mulberry bush is cut down, a number of unusually strong shoots sprout from the roots. Hence the image of tying something to a cluster of mulberry shoots is used to symbolize the way of making success certain. Confucius says about this line:Danger arises when a man feels secure in his position. Destruction threatens when a man seeks to preserve his worldly estate. Confusion develops when a man has put everything in order. Therefore the superior man does not forget danger in his security, not ruin when he is well established, nor confusion when his affairs are in order. In this way he gains personal safety and is able to protect the empire."
					}
				]
			}
		},
		{
			"number": 13,
			"name": "Tung Jên",
			"description": "Fellowship with Men",
			"trigrams": {
				"above": {
					"title": "chien",
					"description": "THE CREATIVE, HEAVEN"
				},
				"below": {
					"title": "li",
					"description": "THE CLINGING, FLAME"
				}
			},
			"interpretation": {
				"oracle": "\tFELLOWSHIP WITH MEN in the open.\n\tSuccess.\n\tIt furthers one to cross the great water.\n\tThe perseverance of the superior man furthers.",
				"resume": "\n\nThe image of the upper trigram Ch'ien is heaven, and that of the lower, Li, is \nflame. It is the nature of fire to flame up to the heaven. This gives the idea of \nfellowship. IT is the second line that, by virtue of its central character, unites \nthe five strong lines around it. This hexagram forms a complement to Shih, \nTHE ARMY (7). In the latter, danger is within and obedience without—the \ncharacter of a warlike army, which, in order to hold together, needs one \nstrong man among the many who are weak. Here, clarity is within and \nstrength without—the character of a peaceful union of men, which, in order to \nhold together, needs one yielding nature among many firm persons.\n\t",
				"judgment": "\n\nTrue fellowship among men must be based upon a concern that is universal. \nIt is not the private interests of the individual that create lasting fellowship \namong men, but rather the goals of humanity. That is why it is said that \nfellowship with men in the open succeeds. If unity of this kind prevails, \neven difficult and dangerous tasks, such as crossing the great water, can be \naccomplished. But in order to bring about this sort of fellowship, a \npersevering and enlightened leader is needed—a man with clear, convincing, \nand inspiring aims and the strength to carry them out. (The inner trigram \nmeans clarity; the outer, strength.)\n\t",
				"image": {
					"oracle": "\tHeaven together with fire:\n\tThe image of FELLOWSHIP WITH MEN.\n\tThus the superior man organizes the clans\n\tAnd makes distinctions between things.",
					"image": "\n\nHeaven has the same direction of movement as fire, yet it is different from \nfire. Just as the luminaries in the sky serve for the systematic division and \narrangement of time, so human society and all things that really belong \ntogether must be organically arranged. Fellowship should not be a mere \nmingling of individuals or of things—that would be chaos, not fellowship. If \nfellowship is to lead to order, there must be organization within diversity.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nFellowship with men at the gate.\nNo blame.",
						"expl": "The beginning of union among people should take place before the door. All are equally close to one another. No divergent aims have yet arisen, and one makes not mistakes. The basic principles of any kind of union must be equally accessible to all concerned. Secret agreements bring misfortune."
					},
					{
						"poem": "Six in the second place means:\nFellowship with men in the clan.\nHumiliation.",
						"expl": "There is danger here of formation of a separate faction on the basis of personal and egotistic interests. Such factions, which are exclusive and, instead of welcoming all men, must condemn one group in order to unite the others, originate from low motives and therefore lead in the course of time to humiliation."
					},
					{
						"poem": "Nine in the third place means:\nHe hides weapons in the thicket;\nHe climbs the high hill in front of it.\nFor three years he does not rise up.",
						"expl": "Here fellowship has changed about to mistrust. Each man distrusts the other, plans a secret ambush, and seeks to spy on his fellow form afar. We are dealing with an obstinate opponent whom we cannot come at by this method. Obstacles standing in the way of fellowship with others are shown here. One has mental reservations for one's own part and seeks to take his opponent by surprise. This very fact makes one mistrustful, suspecting the same wiles in his opponent and trying to ferret them out. The result is that one departs further and further from true fellowship. The longer this goes on, the more alienated one becomes."
					},
					{
						"poem": "Nine in the fourth place means:\nHe climbs up on his wall; he cannot attack.\nGood fortune.",
						"expl": "Here the reconciliation that follows quarrel mover nearer. It is true that there are still dividing walls on which we stand confronting one another. But the difficulties are too great. We get into straits, and this brings us to our senses. We cannot fight, and therein lies our good fortune.\t\tNine in the fifth place means:\tMen bound in fellowship first weep and lament,\tBut afterward they laugh.\tAfter great struggles they succeed in meeting.Two people are outwardly separated, but in their hearts they are united. They are kept apart by their positions in life. Many difficulties and obstructions arise between them and cause them grief. But, remaining true to each other, the allow nothing to separate them, and although it costs them a severe struggle to overcome the obstacles, they will succeed. When they come together their sadness will change to joy. Confucius says of this:Life leads the thoughtful man on a path of many windings.Now the course is checked, now it runs straight again.Here winged thoughts may pour freely forth in words,There the heavy burden of knowledge must be shut away in silence.But when two people are at one in the inmost hearts,They shatter even the strength of iron or of bronze.And when two people understand each other in their inmost hearts,Their words are sweet and strong, like the fragrance of orchids."
					}
				]
			}
		},
		{
			"number": 14,
			"name": "Ta Yu",
			"description": "Possession in Great Measure",
			"trigrams": {
				"above": {
					"title": "li",
					"description": "THE CLINGING, FLAME"
				},
				"below": {
					"title": "chien",
					"description": "THE CREATIVE, HEAVEN"
				}
			},
			"interpretation": {
				"oracle": "",
				"resume": "\n\nThe fire in heaven above shines far, and all things stand out in the light and \nbecome manifest. The weak fifth line occupies the place of honor and all the \nstrong lines are in accord with it.\nAll things come to the man who is modest and kind in a high position.\n\t",
				"judgment": "\tPOSSESSION IN GREAT MEASURE.\n\tSupreme success.\n\nThe two trigrams indicate that strength and clarity unite. Possessions great \nmeasure is determined by fate and accords with the time. How is it possible \nthat the weak line has power to hold the strong lines fast and to possess \nthem? It is done by virtue of unselfish modesty. The time is favorable—a \ntime of strength within, clarity and culture without. Power is expressing itself \nin graceful and controlled way. This brings supreme success and wealth.\n\t",
				"image": {
					"oracle": "",
					"image": "\tFire in heaven above:\n\tthe image of POSSESSION IN GREAT MEASURE.\n\tThus the superior man curbs evil and furthers good,\n\tAnd thereby obeys the benevolent will of heaven.\n\nThe sun in heaven above, shedding light over everything one earth, is the \nimage of possession on a grand scale. But a possession of this sort must be \nadministered properly. The sun brings both evil and good into the light of \nday. Man must combat and curb the evil, and must favor and promote the \ngood. Only in this way does he fulfill the benevolent will of God, who desires \nonly good and not evil.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nNo relationship with what is harmful;\nThere is no blame in this.\nIf one remains conscious of difficulty,\nOne remains without blame.",
						"expl": "Great possession that is still in its beginnings and that has not yet been challenged brings no blame, since there has been no opportunity to make mistakes. Yet there are many difficulties to be overcome. It is only by remaining conscious of theses difficulties that one can keep inwardly free of possible arrogance and wastefulness, and thus in principle overcome all cause for blame."
					},
					{
						"poem": "Nine in the second place means:\nA big wagon for loading.\nOne may undertake something.\nNo blame.",
						"expl": "Great possession consists not only in the quantity of goods at one's disposal, but first and foremost, in their mobility and utility, for then they can be used in undertakings, and we remain free of embarrassment and mistakes. The big wagon, which will carry a heavy load and in which one can journey farm means that there are at hand able helpers who give their support t and are equal to their task. One can load great responsibility upon such persons, and this is necessary in important undertakings."
					},
					{
						"poem": "Nine in the third place means:\nA prince offers it to the Son of Heaven.\nA petty man cannot do this.",
						"expl": "A magnanimous, liberal-minded man should not regard what he possesses as his exclusive personal property , but should place it at the disposal of the ruler or of the people at large. In so doing, he takes the right attitude toward his possession, which as private property can never endure. A petty man is incapable of this. He is harmed by great possessions, because instead of sacrificing them, he would keep them for himself."
					},
					{
						"poem": "Nine in the fourth place means:\nHe makes a difference\nBetween himself and his neighbor.\nNo blame.",
						"expl": "This characterizes the position of a man placed among rich and powerful neighbors. It is a dangerous position. He must look neither to the right nor to the left, and must shun envy and the temptation to vie with others. In this way he remains free of mistakes."
					},
					{
						"poem": "°Six in the fifth place means:\nHe whose truth is accessible, yet dignified,\nHas good fortune.",
						"expl": "The situation is very favorable. People are being won not by coercion but by unaffected sincerity, so that they are attached to us in sincerity and truth. However, benevolence alone is not sufficient at the time of POSSESSION IN GREAT MEASURE. For insolence might begin to spread. Insolence must be kept in bounds by dignity; then good fortune is assured."
					}
				]
			}
		},
		{
			"number": 15,
			"name": "Chien",
			"description": "Modesty",
			"trigrams": {
				"above": {
					"title": "kun",
					"description": "THE RECEPTIVE, EARTH"
				},
				"below": {
					"title": "kên",
					"description": "KEEPING STILL, MOUNTAIN"
				}
			},
			"interpretation": {
				"oracle": "\tMODESTY creates success.\n\tThe superior man carries things through.",
				"resume": "\n\nThis hexagram is made up of the trigrams Kên, Keeping Still, mountain, and \nK'un. The mountain is the youngest son of the Creative, the representative \nof heaven and earth. It dispenses the blessings of heaven, the clouds and rain \nthat gather round its summit, and thereafter shines forth radiant with \nheavenly light. This shows what modesty is and how it functions in great \nand strong men. K'un, the earth, stands above. Lowliness is a quality of the \nearth: this is the very reason why it appears in this hexagram as exalted, by \nbeing placed above the mountain. This shows how modesty functions in \nlowly, simple people: they are lifted up by it.\n\t",
				"judgment": "\n\nIt is the law of heaven to make fullness empty and to make full what is \nmodest; when the sun is at its zenith, it must, according to the law of heaven, \nturn toward its setting, and at its nadir it rises toward a new dawn. In \nobedience to the same law, the moon when it is full begins to wane, and \nwhen empty of light it waxes again. This heavenly law works itself out in the \nfates of men also. It is the law of earth to alter the full and to contribute to the \nmodest. High mountains are worn down by the waters, and the valleys are \nfilled up. It is the law of fate to undermine what is full and to prosper the \nmodest. And men also hate fullness and love the modest.\n\n  The destinies of men are subject to immutable laws that must fulfill \nthemselves. But man has it in his power to shape his fate, according as his \nbehavior exposes him to the influence of benevolent or of destructive forces. \nWhen a man holds a high position and is nevertheless modest, he shines \nwith the light of wisdom; if he is in a lowly position and is modest, he cannot \nbe passed by. Thus the superior man can carry out his work to the end \nwithout boasting of what he has achieved.\n\t",
				"image": {
					"oracle": "\tWithin the earth, a mountain:\n\tThe image of MODESTY.\n\tThus the superior man reduces that which is too much,\n\tAnd augments that which is too little.\n\tHe weighs things and makes them equal.",
					"image": "\n\nThe wealth of the earth in which a mountain is hidden is not visible to the \neye, because the depths are offset by the height of the mountain. Thus high \nand low competent each other and the result is the plain. Here an effect that \nit took a long time to achieve, but that in the end seems easy of \naccomplishment and self-evident, is used as the image of modesty. The \nsuperior man does the same thing when he establishes order in the world; he \nequalizes the extremes that are the source of social discontent and thereby \ncreates just and equable conditions.\n\n\t\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nA superior man modest about his modesty\nMay cross the great water.\nGood fortune.",
						"expl": "A dangerous enterprise, such as the crossing of a great stream, is made much more difficult if many claims and considerations have to be taken into account. On the other hand, the task is easy if it is attended to quickly and simply. Therefore the unassuming attitude of mind that goes with modesty fits a man to accomplish even difficult undertakings: he imposes no demands or stipulations but settles matters easily and quickly. Where no claims are put forward, no resistances arise."
					},
					{
						"poem": "Six in the second place means:\nModesty that comes to expression. Perseverance brings good fortune.",
						"expl": "\"Out of the fullness of the heart the mouth speaketh.\" When a man's attitude of mind is so modest that this expresses itself in his outward behavior, it is a source of good fortune to him. For the possibility of exerting a lasting influence arises of itself and no one can interfere."
					},
					{
						"poem": "°Nine in the third place means:\nA superior man of modesty and merit\nCarries things to conclusion.\nGood fortune.",
						"expl": "This is the center of the hexagram, where its secret is disclosed. A distinguished name is readily earned by great achievements. If a man allows himself to be dazzled by fame, he will soon be criticized, and difficulties will arise. If, on the contrary, he remains modest despite his merit, he makes himself beloved and wins the support necessary for carrying his work through to the end."
					},
					{
						"poem": "Six in the fourth place means:\nNothing that would not further modesty\nIn movement.",
						"expl": "Everything has its proper measure. Even modesty in behavior can be carried too far. Here, however, it is appropriate, because the place between a worthy helper below and a kindly ruler above carries great responsibility. The confidence of the man in superior place must not be abused nor the merits of the man in inferior placed concealed. There are officials who indeed do not strive for prominence; they hide behind the letter of ordinances, decline all responsibility, accept pay without giving its equivalent in work, and bear empty titles. This is the opposite of what is meant here by modesty. In such a position, modesty is shown by interest in one's work."
					},
					{
						"poem": "Six in the fifth place means:\nNo boasting of wealth before one's neighbor. \nIt is favorable to attack with force.\nNothing that would not further.",
						"expl": "Modesty is not to be confused with weak good nature that lets things take their own course. When a man holds a responsible position, he must at times resort to energetic measures. In doing so he must not try to make an impression by boasting of his superiority but must make certain of the people around him. The measures taken should be purely objective and in no way personally offensive. Thus modesty manifests itself even in severity."
					}
				]
			}
		},
		{
			"number": 16,
			"name": "Yü",
			"description": "Enthusiasm",
			"trigrams": {
				"above": {
					"title": "chên",
					"description": "THE AROUSING, THUNDER"
				},
				"below": {
					"title": "kun",
					"description": "THE RECEPTIVE, EARTH"
				}
			},
			"interpretation": {
				"oracle": "\tENTHUSIASM. It furthers one to install helpers\n\tAnd to set armies marching.",
				"resume": "\n\nThe strong line in the fourth place, that of the leading official, meets with \nresponse and obedience from all the other lines, which are all weak. The \nattribute of the upper trigram, Chên, is movement; the attributes of K'un, the \nlower, are obedience and devotion. This begins a movement that meets with \ndevotion and therefore inspires enthusiasm, carrying all with it. Of great \nimportance, furthermore, is the law of movement along the line of least \nresistance, which in this hexagram is enunciated as the law for natural events \nand for human life.\n\t",
				"judgment": "\n\nThe time of ENTHUSIASM derives from the fact that there is at hand an \neminent man who is in sympathy with the spirit of the people and acts in \naccord with it. Hence he finds universal and willing obedience. To arouse \nenthusiasm it is necessary for a man to adjust himself and his ordinances to \nthe character of those whom he has to lead. The inviolability of natural laws \nrests on this principle of movement along the line of least resistance. Theses \nlaws are not forces external to things but represent the harmony of \nmovement immanent in them. That is why the celestial bodies do not \ndeviate from their orbits and why all events in nature occur with fixed \nregularity. It is the same with human society: only such laws are rooted in \npopular sentiment can be enforced, while laws violating this sentiment \nmerely arouse resentment.\n\n  Again, it is enthusiasm that enables us to install helpers for the completion \nof an undertaking without fear of secret opposition. It is enthusiasm too that \ncan unify mass movements, as in war, so that they achieve victory.\n\t",
				"image": {
					"oracle": "\tThunder comes resounding out of the earth:\n\tThe image of ENTHUSIASM.\n\tThus the ancient kings made music \n\tIn order to honor merit,\n\tAnd offered it with splendor\n\tTo the Supreme Deity,\n\tInviting their ancestors to be present.",
					"image": "\n\nWhen, at the beginning of summer, thunder—electrical energy—comes \nrushing forth from the earth again, and the first thunderstorm refreshes \nnature, a prolonged state of tension is resolved. Joy and relief make \nthemselves felt. So too, music has power to ease tension within the heart and \nto loosen the grip of obscure emotions. The enthusiasm of the heart \nexpresses itself involuntarily in a burst of song, in dance and rhythmic \nmovement of the body. From immemorial times the inspiring effect of the \ninvisible sound that moves all hearts, and draws them together, has mystified \nmankind.\n\n  Rulers have made use of this natural taste for music; they elevated and \nregulated it. Music was looked upon as something serious and holy, designed \nto purify the feelings of men. It fell to music to glorify the virtues of heroes \nand thus to construct a bridge to the world of the unseen. In the temple men \ndrew near to God with music and pantomimes (out of this later the theater \ndeveloped). Religious feeling for the Creator of the world was united with \nthe most sacred of human feelings, that of reverence for the ancestors. The \nancestors were invited to these divine services as guests of the Ruler of \nHeaven and as representatives of humanity in the higher regions. This \nuniting of the human past with the Divinity in solemn moments of \nreligious inspiration established the bond between God and man. The ruler \nwho revered the Divinity in revering his ancestors became thereby the Son of \nHeaven, in whom the heavenly and the earthly world met in mystical \ncontact.\n\n  These ideas are the final summation of Chinese culture. Confucius has said \nof the great sacrifice at which these rites were performed: \"He who could \nwholly comprehend this sacrifice could rule the world as though it were \nspinning on his hand.\"\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nEnthusiasm that expresses itself\nBrings misfortune.",
						"expl": "A man in an inferior position has aristocratic connections about which he boasts enthusiastically. This arrogance inevitably invites misfortune.  Enthusiasm should never be an egotistic emotion; it is justified only when it is a general feeling that unites one with others."
					},
					{
						"poem": "Six in the second place means:\nFirm as a rock. Not a whole day.\nPerseverance brings good fortune.",
						"expl": "This describes a person who does not allow himself to be misled by any illusions. While others are letting themselves be dazzled by enthusiasm, he recognizes with perfect clarity the first signs of the time. Thus he neither flatters those above nor neglects those beneath him; he is as firm as a rock. When the first sign of discord appears, he knows the right moment for withdrawing and does not delay even for a day. Perseverance in such conduct will bring good fortune. Confucius says about this line:To know the seeds, that is divine indeed. In his association with those above him, the superior man does not flatter. In his association with those beneath him, he is not arrogant. For he knows the seeds. The seeds are the first imperceptible beginning of movement, the first trace of good fortune (or misfortune) that shows itself. The superior man perceives the seeds and immediately takes actin. He does not wait even a whole day. In the Book of Changes it is said: \"Firm as a rock. Not a whole day. Perseverance brings good fortune.\"\tFirm as a rock, what need of a whole day?\tThe judgment can be known.\tThe superior man knows what is hidden and what is evident.\tHe knows weakness, he knows strength as well.\tHence the myriads look up to him."
					},
					{
						"poem": "Six in the third place means:\nEnthusiasm that looks upward creates remorse.\nHesitation brings remorse.",
						"expl": "This line is the opposite of the preceding one: the latter bespeaks self-reliance, while here there is enthusiastic looking up to a leader. If a man hesitates too long, this also will bring remorse. The right moment for approach must be seized: only then will he do the right thing."
					},
					{
						"poem": "°Nine in the fourth place means:\nThe source of enthusiasm.\nHe achieves great things.\nDoubt not.\nYou gather friends around you\nAs a hair clasp gathers the hair.",
						"expl": "This describes a man who is able to awaken enthusiasm through his own sureness and freedom from hesitation. He attracts people because he has no doubts and is wholly sincere. Owing to his confidence in them he wins their enthusiastic co-operation and attains success. Just as a clasp draws the hair together and hold it, so he draws man together by the support he gives them."
					},
					{
						"poem": "Six in the fifth place means:\nPersistently ill, and still does not die.",
						"expl": "Here enthusiasm is obstructed. A man is under constant pressure, which prevents him from breathing freely. However, this pressure has its advantage—it prevents him from consuming his powers in empty enthusiasm. Thus constant pressure can actually serve to keep one alive."
					}
				]
			}
		},
		{
			"number": 17,
			"name": "Sui",
			"description": "Following",
			"trigrams": {
				"above": {
					"title": "tui",
					"description": "THE JOYOUS, LAKE"
				},
				"below": {
					"title": "chên",
					"description": "THE AROUSING, THUNDER"
				}
			},
			"interpretation": {
				"oracle": "\tFOLLOWING has supreme success.\n\tPerseverance furthers. No blame.",
				"resume": "\n\nThe trigram Tui, the Joyous, whose attribute is gladness, is above; Chên, the \nArousing, which has the attribute of movement, is below. Joy in movement \ninduces following. The Joyous is the youngest daughter, while the Arousing \nis the eldest son. An older man defers to a young girl and shows her \nconsideration. By this he moves her to follow him.\n\t",
				"judgment": "\n\nIn order to obtain a following one must first know how to adapt oneself. If a \nman would rule he must first learn to serve, for only in this way does he \nsecure from those below him the joyous assent that is necessary if they are to \nfollow him. If he has to obtain a following by force or cunning, by conspiracy \nor by creating faction, he invariably arouses resistance, which obstructs \nwilling adherence. But even joyous movement can lead to evil \nconsequences, hence the added stipulation, \"Perseverance furthers\" —that is, \nconsistency in doing right— together with \"No blame.\" Just as we should not \nask others to follow us unless this condition is fulfilled, so it is only under \nthis condition that we can in turn follow others without coming to harm. \n  The thought of obtaining a following through adaptation to the demands of \nthe time is a great and significant idea; this is why the appended judgment is \nso favorable.\n\t",
				"image": {
					"oracle": "\tThunder in the middle of the lake:\n\tThe image of FOLLOWING.\n\tThus the superior man at nightfall\n\tGoes indoors for rest and recuperation.",
					"image": "\n\nIn the autumn electricity withdraws into the earth again and rests. Here it is \nthe thunder in the middle of the lake that serves as the image—thunder in its \nwinter rest, not thunder in motion. The idea of following in the sense of \nadaptation to the demands of the time grows out of this image. Thunder in \nthe middle of the lake indicates times of darkness and rest. Similarly, a \nsuperior man, after being tirelessly active all day, allows himself rest and \nrecuperation at night. No situation can become favorable until one is able to \nadapt to it and does not wear himself out with mistaken resistance.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nThe standard is changing.\nPerseverance brings good fortune.\nTo go out of the door in company\nProduces deeds.",
						"expl": "There are exceptional conditions in which the relation between leader and followers changes. It is implicit in the idea of following and adaptation that if one wants to lead others, one must remain accessible and responsive to the views of those under him. At the same time, however, he must have firm principles, so that he does not vacillate where there is only a question of current opinion. Once we are ready to listen to the opinions of others, we must not associate exclusively with people who share our views or with members of our own party; instead, we must go out and mingle freely with all sorts of people, friends or foes. That is the only way to achieve something."
					},
					{
						"poem": "Six in the second place means:\nIf one clings to the little boy,\nOne loses the strong man.",
						"expl": "In friendships and close relationships an individual must make a careful choice. He surrounds himself either with good or with bad company; he cannot have both at once. If he throws himself away on unworthy friends he loses connection with people of intellectual power who could further him in the good."
					},
					{
						"poem": "Six in the third place means:\nIf one clings to the strong man,\nOne loses the little boy.\nThrough following one finds what one seeks.\nIt furthers one to remain persevering.",
						"expl": "When the right connection with distinguished people has been found, a certain loss naturally ensues. A man must part company with the inferior and superficial. But in his heart he will feel satisfied, because he seeks and needs for the development of his personality. The important thing is to remain firm. He must know what he wants and not be led astray by momentary inclinations."
					},
					{
						"poem": "Nine in the fourth place means:\nFollowing creates success.\nPerseverance brings misfortune.\nTo go one's way with sincerity brings clarity.\nHow could there be blame in this?",
						"expl": "It often happens, when a man exerts a certain amount of influence, that he obtains a following by condescension toward inferiors. But the people who attach themselves to him are not honest in their intentions. They seek personal advantage and try to make themselves indispensable through flattery and subservience. If one becomes accustomed to such satellites and cannot do without them, it brings misfortune. Only when a man is completely free from his ego, and intent, by conviction, upon what is right and essential, does he acquire the clarity that enables him to see through such people, and become free of blame."
					},
					{
						"poem": "°Nine in the fifth place means:\nSincere in the good. Good fortune.",
						"expl": "Every man must have something he follows—something that serves him as a lodestar. He who follows with conviction the beautiful and the good may feel himself strengthened by this saying."
					}
				]
			}
		},
		{
			"number": 18,
			"name": "Ku",
			"description": "Work on what has been spoiled [ Decay ]",
			"trigrams": {
				"above": {
					"title": "kên",
					"description": "KEEPING STILL, MOUNTAIN"
				},
				"below": {
					"title": "sun",
					"description": "THE GENTLE, WIND"
				}
			},
			"interpretation": {
				"oracle": "\tWORK ON WHAT HAS BEEN SPOILED\n\tHas supreme success.\n\tIt furthers one to cross the great water.\n\tBefore the starting point, three days.\n\tAfter the starting point, three days.",
				"resume": "\n\nThe Chinese character ku represents a bowl in whose contents worms are \nbreeding. This means decay. IT is come about because the gentle indifference \nin the lower trigram has come together with the rigid inertia of the upper, \nand the result is stagnation. Since this implies guilt, the conditions embody a \ndemand for removal of the cause. Hence the meaning of the hexagram is not \nsimply \"what has been spoiled\" but \"work on what has been spoiled\".  \n\n\t",
				"judgment": "\n\nWhat has been spoiled through man's fault can be made good again through \nman's work. IT is not immutable fate, as in the time of STANDSTILL, that \nhas caused the state of corruption, but rather the abuse of human freedom. \nWork toward improving conditions promises well, because it accords the \npossibilities of the time. We must not recoil from work and danger-\nsymbolized by crossing of the great water-but must take hold energetically. \nSuccess depends, however, on proper deliberation. This is expressed by the \nlines, \"Before the starting point, three days. After the starting point, three \ndays.\" We must first know the cause of corruption before we can do away \nwith them; hence it is necessary to be cautious during the time before the \nstart. Then we must see to it that the new way is safely entered upon, so that \na relapse may be avoided; therefore we must pay attention to the time after \nthe start. Decisiveness and energy must take the place of inertia and \nindifference that have led to decay, in order that the ending may be followed \nby a new beginning. \n\n\t",
				"image": {
					"oracle": "\tThe wind blows low on the mountain:\n\tThe image of DECAY.\n\tThus the superior man stirs up the people\n\tAnd strengthens their spirit.",
					"image": "\n\nWhen the wind blow s slow on the mountain, it is thrown back and spoils \nthe vegetation. This contains a challenge to improvement. It is the same \nwith debasing attitudes and fashions; they corrupt human society. His \nmethods likewise must be derived from the two trigrams, but in such a way \nthat their effects unfold in orderly sequence. The superior must first remove \nstagnation by stirring up public opinion, as the wind stirs up everything, and \nmust strengthen and tranquilize the character of the people, as the mountain \ngives tranquillity and nourishment to all that grows in its vicinity. \n\n\t\t"
				},
				"lines": [
					{
						"poem": "Six in the beginning means:\nSetting right what has been spoiled by the father.\nIf there is a son, \nNo blame rests upon the departed father. \nDanger. In the end good fortune.",
						"expl": "Rigid adherence to tradition has resulted in decay. But the decay has not yet penetrated deeply and so can still be easily remedied. It is as if a son were compensated for the decay his father allowed to creep in. Then no blame attaches to the father. However, one must not overlook the danger or take the matter too lightly. Only if one is conscious of the danger connected with every reform will everything go well in the end. \tNine in the second place means:\tSetting right what has been spoiled by the mother.\tOne must not be too persevering.\tThis refers to mistakes that as a result of weakness have brought about decay-hence the symbol, \"what has been spoiled by the mother. \" In setting things right in such a case, a certain gentle consideration is called for. In order not to wound, one should not attempt to proceed too drastically. \t\tNine in the third place means:\tSetting right what has been spoiled by the father.\tThere will be a little remorse. No great blame.This describes a man who proceeds a little too energetically in righting the mistakes of the past. Now and then, as a result, minor discourse and annoyances will surely develop. But too much energy is better than too little. Therefore, although he may at times have slight cause for regret, he remains free of any serious blame. \tSix in the fourth place means:\tTolerating what has been spoiled by the father.\tIn continuing one sees humiliation.\tThis shows the situation of someone too weak to take measures against decay that has its roots in the past and is just beginning to manifest itself. It is allowed to run its course. If this continues, humiliation will result. \tSix in the fifth place means:\tSetting right what has been spoiled by the father.\tOne meets with praise.An individual is confronted with corruption originating from neglect in former times. He lacks the power to ward it off alone, but with able helpers he can at least bring about a thorough reform, if he cannot create a new beginning, and this also is praiseworthy."
					}
				]
			}
		},
		{
			"number": 19,
			"name": "Lin",
			"description": "Approach",
			"trigrams": {
				"above": {
					"title": "kun",
					"description": "THE RECEPTIVE, EARTH"
				},
				"below": {
					"title": "tui",
					"description": "THE JOYOUS, LAKE"
				}
			},
			"interpretation": {
				"oracle": "\tAPPROACH has supreme success.\n\tPerseverance furthers.\n\tWhen the eighth month comes,\n\tThere will be misfortune.",
				"resume": "\n\nThe Chinese word lin has a range of meanings that is not exhausted by any \nsingle word of another language. The ancient explanations in the Book of \nChanges give as its first meaning, \"becoming great.\" What becomes great are \nthe two strong lines growing into the hexagram from below; the light-giving \npower expands with them. The meaning is then further extended to include \nthe concept of approach, especially the approach of what is lower. Finally the \nmeaning includes the attitude of condescension of a man in high position \ntoward the people, and in general the setting to work on affairs. This \nhexagram is linked with the twelfth month (January-February), when after \nthe winter solstice, the light power begins to ascend again.\n\n\t\n\t",
				"judgment": "\n\nThe hexagram as a whole points to a time of joyous, hopeful progress. Spring \nis approaching. Joy and forbearance bring high and low nearer together. \nSuccess is certain. But we must work with determination and perseverance \nto make full use of the propitiousness of the time. And on thing more: \nspring does not last forever. In the eighth month the aspects are reversed. \nThen only two strong, light lines are left; these do not advance but are in \nretreat (see next hexagram). We must take heed of this change in good time. \nIf we meet evil before it becomes reality-before it has even begun to stir-we \ncan master it.\n\t",
				"image": {
					"oracle": "\tThe earth above the lake:\n\tThe image of APPROACH.\n\tThus the superior man is inexhaustible\n\tIn his will to teach,\n\tAnd without limits\n\tIn his tolerance and protection of the people.",
					"image": "\n\nThe earth borders upon the lake from above. This symbolizes the approach \nand condescension of the man of higher position to those beneath him. The \ntwo parts of the image indicate what his attitude toward these people will be. \nJust as the lake is inexhaustible in depth, so the sage is inexhaustible in his \nreadiness to teach mankind, and just as the earth is boundlessly wide, \nsustaining and caring for all creatures on it, so the sage sustains and cares for \nall people and excludes no part of humanity.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nJoint approach.\nPerseverance brings good fortune.",
						"expl": "The good begins to prevail and to find response in influential circles. This in turn is an incentive to men of ability. IT is well to join this upward trend, but we must not let ourselves be carried away by the current of the time; we must adhere perseveringly to what is right. This bring good fortune."
					},
					{
						"poem": "Nine in the second place means:\nJoint approach.\nGood fortune.\nEverything furthers.",
						"expl": "When the stimulus to approach comes from a high place, and when a man has the inner strength and consistency that need no admonition, good fortune will ensue. Nor need the future cause any concern. He is well aware that everything earthly is transitory, and that a descent follows upon every rise, but need not be confused by this universal law of fate. Everything serves to further. Therefore he will travel the paths of life swiftly, honestly, and valiantly."
					},
					{
						"poem": "Six in the third place means:\nComfortable approach.\nNothing that would further.\nIf one is induced to grieve over it,\nOne becomes free of blame.",
						"expl": "Things are going well for a man: he achieves power and influence. But in this lies the danger that he may relax, and confident of his position, allow the easygoing, careless mood to show itself in his dealings with other people. This would inevitably be harmful. But there is possibility of a change of mood. If he regrets his mistaken attitude and feels the responsibility of an influential position, he frees himself of faults."
					},
					{
						"poem": "Six in the fourth place means:\nComplete approach.\nNo blame.",
						"expl": "\tWhile the three lower lines indicate rise to power and influence, the three upper lines show the attitude of persons in higher position toward those of lower rank for whom they procure influence. Here is shown the open-minded approach of a person of high rank to a man of ability whom he draws in to his own circle, regardless of class prejudice. This is very favorable. \t \tSix in the fifth place means:\tWise approach.\tThis is right for a great prince.\tGood fortune.A prince, or anyone in a leading position, must have the wisdom to attract to himself people of ability who are expert in directing affairs. His wisdom consists both in selecting the right people and in allowing those chosen to have a free hand without interference from him.  For only through such self-restraint will he find the experts needed to satisfy all of his requirements."
					}
				]
			}
		},
		{
			"number": 20,
			"name": "Kuan",
			"description": "Contemplation (View)",
			"trigrams": {
				"above": {
					"title": "sun",
					"description": "THE GENTLE, WIND"
				},
				"below": {
					"title": "kun",
					"description": "THE RECEPTIVE, EARTH"
				}
			},
			"interpretation": {
				"oracle": "\tCONTEMPLATION. The ablution has been made, \n\tBut not yet the offering.\n\tFull of trust they look up to him.",
				"resume": "\n\nA slight variation of tonal stress gives the Chinese name for this hexagram a \ndouble meaning.  It means both contemplating and being seen, in the sense \nof being an example. These ideas are suggested by the fact that the hexagram \ncan be understood as picturing a type of tower characteristic of ancient China.\n\nA tower of this kind commanded a wide view of the country; at the same \ntime, when situated on a mountain, it became a landmark that could be seen \nfor miles around. Thus the hexagram shows a ruler who contemplates the \nlaw of heaven above him and the ways of the people below, and who, by \nmeans of good government, sets a lofty example to the masses.\n\n  This hexagram is linked with the eight month (September-October). The \nlight-giving power retreats and the dark power is again on the increase. \nHowever, this aspect is not material in the interpretation of the hexagram as a \nwhole.\n\t",
				"judgment": "\n\nThe sacrificial ritual in China began with an ablution and a libation by which \nthe Deity was invoked, after which the sacrifice was offered. The moment of \ntime between these two ceremonies is the most sacred of all, the moment of \ndeepest inner concentration. If piety is sincere and expressive of real faith, the \ncontemplation of it has a transforming awe-spiring effect on those who \nwitness it.\n\n  Thus also in nature a holy seriousness is to be seen in the fact that natural \noccurrences are uniformly subject to law. Contemplation of the divine \nmeaning underlying the workings of the universe gives to the man who is \ncalled upon to influence others the means of producing like effects. This \nrequires that power of inner concentration which religious contemplation \ndevelops in great men strong in faith. It enables them to apprehend the \nmysterious and divine laws of life, and by means of profoundest inner \nconcentration they give expression to these laws in their own persons. Thus \na hidden spiritual power emanates from them, influencing and dominating \nothers without their being aware of how it happens. \n\n\t",
				"image": {
					"oracle": "\tThe wind blows over the earth:\n\tThe image of CONTEMPLATION.\n\tThus the kings of old visited the regions of the world,\n\tContemplated the people,\n\tAnd gave them instruction.",
					"image": "\n\nWhen the wind blows over the earth it goes far and wide, and the grass must \nbend to its power. These two occurrences find confirmation in the hexagram. \nThe two images are used to symbolize a practice of the kings of old; in making \nregular journeys the ruler could, in the first place, survey his realm and make \ncertain that none of the existing usages of the people escaped notice; in the \nsecond, he could exert influence through which such customs as were \nunsuitable could be changed.\n\n  All of this points to the power possessed by a superior personality. On the \none hand, such a man will have a view of the real sentiments of the great \nmass of humanity and therefore cannot be deceived; on the other, he will \nimpress the people so profoundly, by his mere existence and by the impact of \nhis personality, that they will be swayed by him as the grass by the wind.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nBoy like contemplation.\nFor an inferior man, no blame.\nFor a superior man, humiliation.",
						"expl": "This means contemplation from a distance, without comprehension. A man of influence is at hand, but his influence is not understood by the common people. This matters little in the case of the masses, for they benefit by the actions of the ruling sage whether they understand them or not. But for a superior man it is a disgrace. He must not content himself with a shallow, thoughtless view of prevailing forces; he must contemplate them as a connected whole and try to understand them."
					},
					{
						"poem": "Six in the second place means:\nContemplation through the crack of the door.\nFurthering for the perseverance of a woman.",
						"expl": "Through the crack of the door one has a limited outlook; one looks outward from within. Contemplation is subjectively limited. One tends to relate everything to oneself and cannot put oneself in another's place and understand his motives. This is appropriate for a good housewife. It is not necessary for her to be conversant with the affairs of the world. But for a man who must take active part in public life, such a narrow, egotistic way of contemplating things is of course harmful."
					},
					{
						"poem": "Six in the third place means:\nContemplation of my life \nDecides the choice\nBetween advance and retreat.",
						"expl": "This is the place of transition. We no longer look outward to receive pictures that are more or less limited and confused, but direct out contemplation upon ourselves in order to find a guideline for our decisions. This self-contemplation means the overcoming of naive egotism in the person who sees everything solely from his own standpoint. He begins to reflect and in this way acquires objectivity. However, self-knowledge does not mean preoccupation with one's own thoughts; rather, it means concern about the effects one creates. It is only the effects our lives produce that give us the right to judge whether what we have done means progress or regression."
					},
					{
						"poem": "Six in the fourth place means:\nContemplation of the light of the kingdom.\nIt furthers one to exert influence as the guest of a king.",
						"expl": "This describes a man who understands the secrets by which a kingdom can be made to flourish. Such a man must be given an authoritative position, in which he can exert influence. He should be, so to speak, a guest-that is, he should be honored and act independently, and should not be used as a tool."
					}
				]
			}
		},
		{
			"number": 21,
			"name": "Shih Ho",
			"description": "Biting Through",
			"trigrams": {
				"above": {
					"title": "li",
					"description": "THE CLINGING, FIRE"
				},
				"below": {
					"title": "chên",
					"description": "THE AROUSING, THUNDER"
				}
			},
			"interpretation": {
				"oracle": "\tBITING THROUGH has success.\n\tIt is favorable to let justice be administered.",
				"resume": "\n\nThis hexagram represents an open mouth (cf. hexagram 27) with an \nobstruction (in the fourth place) between the teeth. As a result the lips cannot \nmeet. To bring them together one must bite energetically through the \nobstacle. Since the hexagram is made up of the trigrams for thunder and for \nlightning, it indicates how obstacles are forcibly removed in nature.  \nEnergetic biting through overcomes the obstacle that prevents joining of the \nlips; the storm with its thunder and lightning overcomes the disturbing \ntension in nature. Recourse to law and penalties overcomes the disturbances \nof harmonious social life caused by criminals and slanderers. The theme of \nthis hexagram is a criminal lawsuit, in contradistinction to that of Sung, \nCONFLICT (6), which refers to civil suits.\n\t",
				"judgment": "\n\nWhen an obstacle to union arises, energetic biting through brings success. \nThis is true in all situations. Whenever unity cannot be established, the \nobstruction is due to a talebearer and traitor who is interfering and blocking \nthe way. To prevent permanent injury, vigorous measures must be taken at \nonce. Deliberate obstruction of this sort does not vanish of its own accord. \nJudgment and punishment are required to deter or obviate it.\n\n  However, it is important to proceed in the right way. The hexagram \ncombines Li, clarity, and Chên, excitement. Li is yielding, Chên is hard. \nUnqualified hardness and excitement would be too violent in meting out \npunishment; unqualified clarity and gentleness would be too weak. The two \ntogether create the just measure. It is of moment that the man who makes \nthe decisions (represented by the fifth line) is gentle by nature, while he \ncommands respect by his conduct in his position.\n\t",
				"image": {
					"oracle": "\tThunder and lighting:\n\tThe image of BITING THROUGH.\n\tThus the kings of former times made firm the laws\n\tThrough clearly defined penalties.",
					"image": "\n\n\t\nPenalties are the individual applications of the law. The laws\nspecify the penalties. Clarity prevails when mild and severe\npenalties are differentiated, according to the nature of the crimes.\nThis is symbolized by the clarity of lighting. The law is strengthened\nby a just application of penalties. This is symbolized by the terror\nof thunder. This clarity and severity have the effect of instilling\nrespect; it is not that the penalties are ends in themselves.\nThe obstructions in the social life of man increase when there is a\nlack of clarity in the penal codes and slackness in executing them.\nThe only to strengthen the law is to make it clear and make penalties\ncertain and swift.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nHis feet are fastened in the stocks,\nSo that his toes disappear.\nNo blame.",
						"expl": "If a sentence is imposed the first time a man attempts to do wrong, the penalty is a mild one.  Only the toes are put in the stocks.  This prevents him from sinning further and thus he becomes free of blame.  It is a warning to halt in time on the path of evil."
					},
					{
						"poem": "Six  in the second place means:\nBites through tender meat,\nSo that his nose disappears.\nNo blame.",
						"expl": "It is easy to discriminate between right and wrong in this case;it is like biting through tender meat. But one encounters ahardened sinner, and, aroused by anger, one goes a little toofar. The disappearance of the nose in the course of the bitesignifies that indignation blots out finer sensibility. However,there is no great harm in this, because the penalty as such isjust.\t\tSix  in the third place means:\tBites on old dried meat \tAnd strikes on something poisonous.\tSlight humiliation.  No blame.Punishment is to be carried out by someone who lacks the power and authority to do so.  Therefore the culprits do not submit.  The matter at issue is an old one-as symbolized by salted game-and in dealing with it difficulties arise.  This old meat is spoiled: by taking up the problem the punisher arouses poisonous hatred against himself, and n this way is put in a somewhat humiliating position.  But since punishment was required by the time, he remains free of blame.\t\tNine in the fourth place means:\tBites on dried gristly meat.\tReceives metal arrows.\tIt furthers one to be mindful of difficulties\tAnd to be persevering.\tGood fortune. There are great obstacles to be overcome, powerful opponents are to be punished. Though this is arduous, the effort succeeds. But it is necessary to be hard as metal and straight as an arrow to surmount the difficulties. If one knows these difficulties and remains persevering, he attains good fortune. The difficult task is achieved in the end."
					},
					{
						"poem": "Six in the fifth place means:\nBites on dried lean meat.\nReceives yellow gold.\nPerseveringly aware of danger.\nNo blame.",
						"expl": "The case to be decided is indeed not easy but perfectly clear.  Since we naturally incline to leniency, we must make every effort to be like yellow gold-that is, as true as gold and as impartial as yellow, the color of the middle [the mean]. It is only by remaining conscious of the dangers growing out of the responsibility we have assumed that we can avoid making mistakes."
					}
				]
			}
		},
		{
			"number": 22,
			"name": "Pi",
			"description": "Grace",
			"trigrams": {
				"above": {
					"title": "kên",
					"description": "KEEPING STILL, MOUNTAIN"
				},
				"below": {
					"title": "li",
					"description": "THE CLINGING, FIRE"
				}
			},
			"interpretation": {
				"oracle": "\tGRACE has success.\n\tIn small matters\n\tIt is favorable to undertake something.",
				"resume": "\n\nThis hexagram shows a fire that breaks out of the secret depths of the earth \nand, blazing up, illuminates and beautifies the mountain, the heavenly \nheights. Grace-beauty of form-is necessary in any union if it is to be well \nordered and pleasing rather than disordered and chaotic.\n\t",
				"judgment": "\n\nGrace brings success. However, it is not the essential or fundamental thing; it \nis only the ornament and therefore be used sparingly and only in little things. \nIn the lower trigram of fire a yielding line comes between two strong lines \nand makes them beautiful, but the strong lines are the essential content and \nthe weak line is the beautifying form. In the upper trigram of the mountain, \nthe strong line takes the lead, so that here again the strong element must be \nregarded as the decisive factor. In nature we see in the sky the strong light of \nthe sun; the life of the world depends on it. But this strong, essential thing is \nchanged and given pleasing variety by the moon and the stars. In human \naffairs, aesthetic form comes into being when traditions exist that, strong and \nabiding like mountains, are made pleasing by a lucid beauty. By \ncontemplating the forms existing in the heavens we come to understand time \nand its changing demands. Through contemplation of the forms existing in \nhuman society it becomes possible to shape the world.\n\t",
				"image": {
					"oracle": "\tFire at the foot of the mountain:\n\tThe image of GRACE.\n\tThus does the superior man proceed \n\tWhen clearing up current affairs.\n\tBut he dare not decide controversial issues in this way.",
					"image": "\n\nThe fire, whose light illuminates the mountain and makes it pleasing, does \nnot shine far; in the same way, beautiful form suffices to brighten and to \nthrow light upon matters of lesser moment, but important questions cannot \nbe decided in this way. They require greater earnestness.\n\n\t\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nHe lends grace to his toes, leaves the carriage, and walks.",
						"expl": "A beginner in subordinate place must take upon himself the labor of advancing. There might be an opportunity of surreptitiously easing the way-symbolized by the carriage-but a self-contained man scorns help gained in a dubious fashion. He thinks it more graceful to go on foot than to drive in a carriage under false pretenses."
					},
					{
						"poem": "Six in the second place means:\nLends grace to the beard on his chin.",
						"expl": "The beard is not an independent thing; it moves only with the chin. The image therefore means that form is to be considered only as a result and attribute of content. The beard is a superfluous ornament. To devote care to it for its own sake, without regard for the inner content of which it is an ornament, would bespeak a certain vanity."
					},
					{
						"poem": "Nine in the third place means:\nGraceful and moist.\nConstant perseverance brings good fortune.",
						"expl": "This represents a very charming life situation. One is under the spell of grace and the mellow mood induced by wine. This grace can adorn, but it can also swamp us. Hence the warning not to sink into convivial indolence but to remain constant in perseverance. Good fortune depends on this."
					},
					{
						"poem": "Six in the fourth place means:\nGrace or simplicity?\nA white horse comes as if on wings.\nHe is not a robber,\nHe will woo at the right time.",
						"expl": "An individual is in a situation in which doubts arise as to which is better-to pursue the grace of external brilliance, or to return to simplicity. The doubt itself implies the answer. Confirmation comes from the outside; it comes like a white winged horse. The white color indicates simplicity. At first it may be disappointing to renounce the comforts that might have been obtained, yet one finds peace of mind in a true relationship with the friend who courts him. The winged horse is the symbol of the thoughts that transcend all limits of space and time."
					},
					{
						"poem": "Six in the fifth place means:\nGrace in the hills and gardens.\nThe roll of silk is meager and small.\nHumiliation, but in the end good fortune.",
						"expl": "A man withdraws from contact with people of the lowlands, who seek nothing but magnificence and luxury, in to the solitude of the heights. There he finds an individual to look up to, whom he would like to have as a friend. But the gifts he has to offer are poor and few, so that he feels ashamed. However, it is not the material gifts that count, but sincerity of feeling, and so all goes well in the end."
					}
				]
			}
		},
		{
			"number": 23,
			"name": "Po",
			"description": "Splitting Apart",
			"trigrams": {
				"above": {
					"title": "kên",
					"description": "KEEPING STILL, MOUNTAIN"
				},
				"below": {
					"title": "li",
					"description": "THE CLINGING, FIRE"
				}
			},
			"interpretation": {
				"oracle": "\tSPLITTING APART. IT does not further one \n\tTo go anywhere.",
				"resume": "\n\nThe dark lines are about to mount upward and overthrow the last firm, light \nline by exerting a disintegrating influence on it. The inferior, dark forces \novercome what is superior and strong, not by direct means, but by \nundermining it gradually and imperceptibly, so that it finally collapses.\n\n  The lines of the hexagram present the image of a house, the top line being \nthe roof, and because the roof is being shattered the house collapses. The \nhexagram belongs to the ninth month (October-November). The yin power \npushes up ever more powerfully and is about to supplant the yang power \naltogether.\n\t",
				"judgment": "\n\nThis pictures a time when inferior people are pushing forward and are about \nto crowd out the few remaining strong and superior men. Under these \ncircumstances, which are due to the time, it is not favorable for the superior \nman to undertake anything.\n\n  The right behavior in such adverse times is to be deduced from the images \nand their attributes. The lower trigram stands for the earth, whose attributes. \nThe lower trigram stands for the earth, whose attributes are docility and \ndevotion. The upper trigram stands for the mountain, whose attribute is \nstillness. This suggests that one should submit to the bad time and remain \nquiet. For it is a question not of man's doing but of time conditions, which, \naccording to the laws of heaven, show an alternation of increase and decrease, \nfullness and emptiness. It is impossible to counteract these conditions of the \ntime. Hence it is not cowardice but wisdom to submit and avoid action.\n\t",
				"image": {
					"oracle": "\tThe mountain rests on the earth:\n\tThe image of SPLITTING APART.\n\tThus those above can ensure their position\n\tOnly by giving generously to those below.",
					"image": "\n\nThe mountain rests on the earth. When it is steep and narrow, lacking a \nbroad base, it must topple over. Its position is strong only when it rises out of \nthe earth broad and great, not proud and steep. So likewise those who rule \nrest on the broad foundation of the people. They too should be generous and \nbenevolent, like the earth that carries all. Then they will make their position \nas secure as a mountain is in its tranquillity. \n\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nThe leg of the bed is split.\nThose who persevere are destroyed.\nMisfortune.",
						"expl": "Inferior people are on the rise and stealthily begin their destructive burrowing from below in order to undermine the place where the superior man rests. Those followers of the ruler who remain loyal are destroyed by slander and intrigue. The situation bodes disaster, yet there is nothing to do but wait."
					},
					{
						"poem": "Six in the second place means:\nThe bed is split at the edge.\nThose who persevere are destroyed.\nMisfortune.",
						"expl": "The power of the inferior people is growing. The danger draws close to one's person; already there are clear indication, and rest is disturbed. Moreover, in this dangerous situation one is as yet without help or friendly advances from above or below. Extreme caution is necessary in this isolation. One must adjust to the time and promptly avoid the danger. Stubborn perseverance in maintaining one's standpoint would lead to downfall."
					},
					{
						"poem": "Six in the third place means:\nHe splits with them. No blame.",
						"expl": "An individual finds himself in an evil environment to which he is committed by external ties. But he has an inner relationship with a superior man, and through this he attains the stability to free himself from the way of the inferior people around him. This brings him into opposition to them of course, but that is not wrong."
					},
					{
						"poem": "Six in the fourth place means:\nThe bed is split up to the skin.\nMisfortune.",
						"expl": "Here the disaster affects not only the resting place but even the occupant. No warning or other comment is added. Misfortune has reached its peak: it can no longer be warded off."
					},
					{
						"poem": "Six in the fifth place means:\nA shoal of fishes. Favor comes through the court ladies.\nEverything acts to further.",
						"expl": "Here, in immediate proximity to the strong, light-giving principle at the top, the nature of the dark force undergoes a change. It no longer opposes the strong principle by means of intrigues but submits to its guidance. Indeed, as the head of the other weak lines, it leads all of these to the strong line, just as a princess leads her maids-in-waiting like a shoal of fishes to her husband and thus gains his favor. Inasmuch as the lower element thus voluntarily places itself under the higher, it attains happiness and the higher also receives its due. Therefore all goes well."
					}
				]
			}
		},
		{
			"number": 24,
			"name": "Fu",
			"description": "Return (The Turning Point)",
			"trigrams": {
				"above": {
					"title": "kun",
					"description": "THE RECEPTIVE, EARTH"
				},
				"below": {
					"title": "chên",
					"description": "THE AROUSING, THUNDER"
				}
			},
			"interpretation": {
				"oracle": "\tRETURN. Success.\n\tGoing out and coming in without error.\n\tFriends come without blame.\n\tTo and fro goes the way.\n\tOn the seventh day comes return.\n\tIt furthers one to have somewhere to go.",
				"resume": "\n\nThe idea of a turning point arises from the fact that after the dark lines have \npushed all of the light lines upward and out of the hexagram, another light \nline enters the hexagram from below. The time of darkness is past. The \nwinter solstice brings the victory of light. This hexagram is linked with the \neleventh month, the month of the solstice (December-January).\n\t",
				"judgment": "\n\nAfter a time of decay comes the turning point. The powerful light that has \nbeen banished returns. There is movement, but it is not brought about by \nforce. The upper trigram K'un is characterized by devotion; thus the \nmovement is natural, arising spontaneously. For this reason the \ntransformation of the old becomes easy. The old is discarded and the new is \nintroduced. Both measures accord with the time; therefore no harm results. \nSocieties of people sharing the same views are formed. But since these \ngroups come together in full public knowledge and are in harmony with the \ntime, all selfish separatist tendencies are excluded, and no mistake is made. \nThe idea of RETURN is based on the course of nature. The movement is \ncyclic, and the course completes itself. Therefore it is not necessary to hasten \nanything artificially. Everything comes of itself at the appointed time. This is \nthe meaning of heaven and earth. \n  All movements are accomplished in six stages, and the seventh brings \nreturn. Thus the winter solstice, with which the decline of the year begins, \ncomes in the seventh month after the summer solstice; so too sunrise comes \nin the seventh double hour after sunset. Therefore seven is the number of \nthe young light, and it arises when six, the number of the great darkness, is \nincreased by one. In this way the state of rest gives place to movement.\n\t",
				"image": {
					"oracle": "\tThunder within the earth:\n\tThe image of THE TURNING POINT.\t\n\tThus the kings of antiquity closed the passes \n\tAt the time of solstice.\n\tMerchants and strangers did not go about,\n\tAnd the ruler\n\tDid not travel through the provinces.",
					"image": "\n\nThe winter solstice has always been celebrated in China as the resting time of \nthe year—a custom that survives in the time of rest observed at the new year. \nIn winter the life energy, symbolized by thunder, the Arousing, is still \nunderground. Movement is just at its beginning; therefore it must be \nstrengthened by rest so that it will not be dissipated by being used \nprematurely. This principle, i.e., of allowing energy that is renewing itself to \nbe reinforced by rest, applies to all similar situations. The return of health \nafter illness, the return of understanding after an estrangement: everything \nmust be treated tenderly and with care at the beginning, so that the return \nmay lead to a flowering.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nReturn from a short distance.\nNo need for remorse.\nGreat good fortune.",
						"expl": "Slight digressions from the good cannot be avoided, but one must turn back in time, before going too far. This is especially important in the development of character; every faintly evil thought must be put aside immediately, before it goes too far and takes root in the mind. Then there is no cause for remorse, and all goes well."
					},
					{
						"poem": "Six in the second place means:\nQuiet return. Good fortune.",
						"expl": "Return always calls for a decision and is an act of self-mastery. It is made easier if a man is in good company. If he can bring himself to put aside pride and follow the example of good men, good fortune results."
					},
					{
						"poem": "Six in the third place means:\nRepeated return. Danger. No blame.",
						"expl": "There are people of a certain inner instability who feel a constant urge to reverse themselves. There is danger in continually deserting the good because of uncontrolled desires, then turning back to it again because of a better resolution. However, since this does not lead to habituation in evil, a general inclination to overcome the defect is not wholly excluded/"
					},
					{
						"poem": "Six in the fourth place means:\nWalking in the midst of others,\nOne returns alone.",
						"expl": "A man is in a society composed of inferior people, but is connected spiritually with a strong and good friend, and this makes him turn back alone. Although nothing is said of reward and punishment, this return is certainly favorable, for such a resolve to choose the good brings its own reward. \t\t\tSix in the fifth place means:\tNoblehearted return. No remorse.When the time for return has come, a man should not take shelter in trivial excuses, but should look within and examine himself. And if he has done something wrong he should make a noblehearted resolve to confess his fault. No one will regret having taken this road."
					}
				]
			}
		},
		{
			"number": 25,
			"name": "Wu Wang",
			"description": "Innocence (The Unexpected)",
			"trigrams": {
				"above": {
					"title": "chien",
					"description": "THE CREATIVE, HEAVEN"
				},
				"below": {
					"title": "chên",
					"description": "THE AROUSING, THUNDER"
				}
			},
			"interpretation": {
				"oracle": "\tINNOCENCE. Supreme success.\n\tPerseverance furthers.\n\tIf someone is not as he should be,\n\tHe has misfortune,\n\tAnd it does not further him\n\tTo undertake anything.",
				"resume": "\n\nCh'ien, heaven is above; Chên, movement, is below. The lower trigram \nChên is under the influence of the strong line it has received form above, \nfrom heaven. When, in accord with this, movement follows the law of \nheaven, man is innocent and without guile. His mind is natural and true, \nunshadowed by reflection or ulterior designs. For wherever conscious \npurpose is to be seen, there the truth and innocence of nature have been lost. \nNature that is not directed by the spirit is not true but degenerate nature. \nStarting out with the idea of the natural, the train of thought in part goes \nsomewhat further and thus the hexagram includes also the idea of the \nfundamental or unexpected.\n\t",
				"judgment": "\n\nMan has received from heaven a nature innately good, to guide him in all his \nmovements. By devotion to this divine spirit within himself, he attains an \nunsullied innocence that leads him to do right with instinctive sureness and \nwithout any ulterior thought of reward and personal advantage. This \ninstinctive certainty brings about supreme success and 'furthers through \nperseverance\". However, not everything instinctive is nature in this higher \nsense of the word, but only that which is right and in accord with the will of \nheaven. Without this quality of rightness, an unreflecting, instinctive way of \nacting brings only misfortune. Confucius says about this: \"He who departs \nfrom innocence, what does he come to? Heaven's will and blessing do not go \nwith his deeds.\"\t",
				"image": {
					"oracle": "\tUnder heaven thunder rolls:\n\tAll things attain the natural state of innocence.\n\tThus the kings of old,\n\tRich in virtue, and in harmony with the time,\n\tFostered and nourished all beings.",
					"image": "\n\nIn springtime when thunder, life energy, begins to move again under the \nheavens, everything sprouts and grows, and all beings receive for the creative \nactivity of nature the childlike innocence of their original state. So it is with \nthe good rulers of mankind: drawing on the spiritual wealth at their \ncommand, they take care of all forms of life and all forms of culture and do \neverything to further them, and at the proper time.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nInnocent behavior brings good fortune.",
						"expl": "The original impulses of the heart are always good, so that we may follow them confidently, assured of good fortune and achievement of our aims."
					},
					{
						"poem": "Six in the second place means:\nIf one does not count on the harvest while plowing,\nNor on the use of the ground while clearing it,\nIt furthers one to undertake something.",
						"expl": "We should do every task for its own sake as time and place demand and not with an eye to the result. Then each task turns out well, and anything we undertake succeeds."
					},
					{
						"poem": "Six in the third place means:\nUndeserved misfortune.\nThe cow that was tethered by someone\nIs the wanderer's gain, the citizen's loss.",
						"expl": "Sometimes undeserved misfortune befalls a man at the hands of another, as for instance when someone passes by and takes a tethered cow along with him. His gain is the owner's loss. In all transactions, no matter how innocent, we must accommodate ourselves to the demands of the time, otherwise unexpected misfortune overtakes us."
					},
					{
						"poem": "Nine in the fourth place means:\nHe who can be persevering \nRemains without blame.",
						"expl": "\tWe cannot lose what really belongs to us, even if we throw it away. Therefore we need have no anxiety. All that need concern us is that we should remain true to our own natures and not listen to others."
					},
					{
						"poem": "Nine in the fifth place means:\nUse no medicine in an illness\nIncurred through no fault of your own.\nIt will pass of itself.",
						"expl": "An unexpected evil may come accidentally from without. If it does not originate in one's own nature or have a foothold there, one should not resort to external means to eradicate it, but should quietly let nature take its course. Then improvement will come of itself."
					}
				]
			}
		},
		{
			"number": 26,
			"name": "Ta Chu",
			"description": "The Taming Power of the Great",
			"trigrams": {
				"above": {
					"title": "kên",
					"description": "KEEPING STILL, MOUNTAIN"
				},
				"below": {
					"title": "chien",
					"description": "THE CREATIVE, HEAVEN"
				}
			},
			"interpretation": {
				"oracle": "\tTHE TAMING POWER OF THE GREAT.\n\tPerseverance furthers.\n\tNot eating at home brings good fortune.\n\tIt furthers one to cross the great water.",
				"resume": "\n\nThe Creative is tamed by Kên, Keeping Still.  This produces great power, a \nsituation in contrast to that of the ninth hexagram, Hsiao Ch'u, THE \nTAMING POWER OF THE SMALL, in which the Creative is tamed by the \nGentle alone. There one weak line must tame five strong lines, but here four \nstrong lines are restrained by two weak lines; in addition to a minister, there \nis a prince, and the restraining power therefore is afar stronger.\n\n  The hexagram has a threefold meaning, expressing different aspects of the \nconcept \"Holding firm.\" Heaven within the mountain gives the idea of \nholding firm in the sense of holding together; the trigram Kên which holds \nthe trigram ch'ien still, gives the idea of holding firm in the sense of holding \nback; the third idea is that of holding firm in the sense of caring for and \nnourishing. This last is suggested by the fact that a strong line at the top, \nwhich is the ruler of the hexagram, is honored and tended as a sage. The third \nof these meanings also attaches specifically to this strong line at the top, \nwhich represents the sage.\n\t",
				"judgment": "\n\nTo hold firmly to great creative powers and store them up, as set forth in this \nhexagram, there is need of a strong, clear-headed man who is honored by the \nruler. The trigram Ch'ein points to strong creative power; Kên indicates \nfirmness and truth. Both point to light and clarity and to the daily renewal of \ncharacter. Only through such daily self-renewal can a man continue at the \nheight of his powers. Force of habit helps to keep order in quiet times; but in \nperiods when there is a great storing up of energy, everything depends on the \npower of the personality. However, since the worthy are honored, as in the \ncase of the strong personality entrusted with leadership by the ruler, it is an \nadvantage not to eat at home but rather to earn one's bread by entering upon \npublic office. Such a man is in harmony with heaven; therefore even great \nand difficult undertakings, such as crossing the great water, succeed.\n\t",
				"image": {
					"oracle": "\tHeaven within the mountain:\n\tThe image of THE TAMING POWER OF THE GREAT.\n\tThus the superior man acquaints himself with many sayings of antiquity\n\tAnd many deeds of the past,\n\tIn order to strengthen his character thereby.",
					"image": "\n\nHeaven within the mountain points to hidden treasures. In the words and \ndeeds of the past there lies hidden a treasure that men may use to strengthen \nand elevate their own characters. The way to study the past is not to confine \noneself to mere knowledge of history but, through application of this \nknowledge, to give actuality to the past.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nDanger is at hand. It furthers one to desist.",
						"expl": "A man wishes to make vigorous advance, but circumstances present an obstacle. He sees himself held back firmly. If he should attempt to fore an advance, it would lead him into misfortune. Therefore it is better for him to compose himself and to wait until an outlet is offered for release of his stored-up energies."
					},
					{
						"poem": "Nine in the second place means:\nThe axletrees are taken from the wagon.",
						"expl": "Here advance is checked just as in the third line of THE TAMING POWER OF THE SMALL (9). However, in the later the restraining force is slight; thus a conflict arises between the propulsive and the restraining movement, as a result of which the spokes fall out of the wagon wheels, while here the restraining force is absolutely superior; hence no struggle takes place. One submits and removes the axletrees from the wagon -in other words, contents himself with waiting. In this way energy accumulates for a vigorous advance later on."
					},
					{
						"poem": "Nine in the third place means.\nA good horse that follows others.\nAwareness of danger,\nWith perseverance, furthers.\nPractice chariot driving and armed defense daily. \nIt furthers one to have somewhere to go.",
						"expl": "The way opens; the hindrance has been cleared away. A man is in contact with a strong will acting in the same direction as his own, and goes forward like one good horse following another. But danger still threatens, and he must remain aware of it, or he will be robbed of his firmness. Thus he must acquire skill on the one hand in what will take him forward, and on the other in what will protect him against unforeseen attacks. It is good in such a pass to have a goal toward which to strive."
					},
					{
						"poem": "Six in the fourth place means:\nThe headboard of a young bull.\nGreat good fortune.",
						"expl": "This line and the one following it are the two that tame the forward-pushing lower lines. Before a bull's horns grow out, a headboard is fastened to its forehead, so that later when the horns appear they cannot do harm. A good way to restrain wild force is to forestall it. By so doing one achieves an easy and great success."
					},
					{
						"poem": "Six in the fifth place means:\nThe tusk of a gelded boar.\nGood fortune.",
						"expl": "Here the restraining of the impetuous forward drive is achieved in an indirect way. A boar's tusk is in itself dangerous, but if the boar's nature is altered, the tusk is no longer a menace. Thus also where men are concerned, wild force should not be combated directly; instead, its roots should be eradicated."
					}
				]
			}
		},
		{
			"number": 27,
			"name": "I",
			"description": "Corners of the Mouth (Providing Nourishment)",
			"trigrams": {
				"above": {
					"title": "kên",
					"description": "KEEPING STILL, MOUNTAIN"
				},
				"below": {
					"title": "chên",
					"description": "THE AROUSING, THUNDER"
				}
			},
			"interpretation": {
				"oracle": "\tTHE CORNERS OF THE MOUTH.\n\tPerseverance brings good fortune.\n\tPay heed to the providing of nourishment\n\tAnd to what a man seeks\n\tTo fill his own mouth with.",
				"resume": "\n\nThis hexagram is a picture of an open mouth; above and below are firm lines \nof the lips, and between them the opening. Starting with the mouth, through \nwhich we take food for nourishment, the thought leads to nourishment \nitself. Nourishment of oneself, specifically of the body, is represented in the \nthree lower lines, while the three upper lines represent nourishment and \ncare of others, in a higher, spiritual sense.\n\t",
				"judgment": "\n\nIn bestowing care and nourishment, it is important that the right people \nshould be taken care of and that we should attend to our own nourishment \nin the right way. If we wish to know what anyone is like, we have only to \nobserve on whom he bestows his care and what sides of his own nature he \ncultivates and nourishes. Nature nourishes all creatures. The great man \nfosters and takes care of superior men, in order to take care of all men \nthrough them. Mencius says about this:\n\nIf we wish to know whether anyone is superior or not, we need only observe \nwhat part of his being he regards as especially important. The body has \nsuperior and inferior, important and unimportant parts. We must not injure \nimportant parts for the sake of the unimportant, nor must we injure the \nsuperior parts for the sake of the inferior. He who cultivates the inferior parts \nof his nature is an inferior man. He who cultivates the superior parts of his \nnature is a superior man.\n\t",
				"image": {
					"oracle": "\n\n\t\n\tAt the foot of the mountain, thunder:\n\tThe image of PROVIDING NOURISHMENT.\n\tThus the superior man is careful of his words\n\tAnd temperate in eating and drinking.",
					"image": "\n\n\"God comes forth in the sign of the Arousing\": when in the spring the life \nforces stir again, all things comes into being anew. \"He brings to perfection in \nthe sign of Keeping Still\": thus in the early spring, when the seeds fall to \nearth, all things are made ready. This is an image of providing nourishment \nthrough movement and tranquillity.  The superior man takes it as a pattern \nfor the nourishment and cultivation of his character. Words are a movement \ngoing form within outward. Eating and drinking are movements from \nwithout inward. Both kinds of movement can be modified by tranquillity. \nFor tranquillity keeps the words that come out of the mouth from exceeding \nproper measure, and keeps the food that goes into the mouth from exceeding \nits proper measure. Thus character is cultivated.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nYou let your magic tortoise go,\nAnd look at me with the corners of your mouth drooping.\nMisfortune.",
						"expl": "The magic tortoise is a creature possessed of such supernatural powers that it lives on air and needs no earthly nourishment. The image means that a man fitted by nature and position to live freely and independently renounces this self-reliance and instead looks with envy and discontent at others who are outwardly in better circumstances. But such base envy only arouses derision and contempt in those others. This has bad results."
					},
					{
						"poem": "Six in the second place means:\nTurning to the summit for nourishment,\nDeviating from the path\nTo seek nourishment from the hill.\nContinuing to do this brings misfortune.",
						"expl": "Normally a person either provides his own means of nourishment or is supported in a proper way by those whose duty of privilege it is to provide for him. If, owing to weakness of spirit, a man cannot support himself, a feeling of uneasiness comes over him; this is because in shirking the proper way of obtaining a living, he accepts support as a favor from those in higher place. This is unworthy, for he is deviating from his true nature. Kept up indefinitely, this course leads to misfortune."
					},
					{
						"poem": "Six in the third place means:\nTurning away from nourishment.\nPerseverance brings misfortune.\nDo not act thus for ten years.\nNothing serves to further.",
						"expl": "\tHe who seeks nourishment that does not nourish reels from desire to gratification and in gratification craves desire. Mad pursuit of pleasure for the satisfaction of the senses never brings one to the goal. One should never (ten years is a complete cycle of time) follow this path, for nothing good can come of it."
					},
					{
						"poem": "Six in the fourth place means:\nTurning to the summit\nFor provision of nourishment\nBrings good fortune.\nSpying about with sharp eyes\nLike a tiger with insatiable craving.\nNo blame.",
						"expl": "In contrast to the six in the second place, which refers to a man bent exclusively on his own advantage, this line refers to one occupying a high position and striving to let his light sine forth. To do this he needs helpers, because he cannot attain his lofty aim alone. With the greed of a hungry tiger he is on the lookout for the right people. Since he is not working for himself but for the good of all, there is no wrong in such zeal."
					},
					{
						"poem": "Six in the fifth place means:\nTurning away from the path.\nTo remain persevering brings good fortune.\nOne should not cross the great water.",
						"expl": "A man may be conscious of a deficiency in himself. He should be undertaking the nourishment of the people, but he has not the strength to do it. Thus he must turn from his accustomed path and beg counsel and help from a man who is spiritually his superior but undistinguished outwardly. If he maintains this attitude of mind perseveringly, success and good fortune are his. But he must remain aware of his dependence. He must not put his own person forward nor attempt great labors, such as crossing the great water."
					}
				]
			}
		},
		{
			"number": 28,
			"name": "Ta Kuo",
			"description": "Preponderance of the Great",
			"trigrams": {
				"above": {
					"title": "tui",
					"description": "THE JOYOUS, LAKE"
				},
				"below": {
					"title": "sun",
					"description": "THE GENTLE, WIND, WOOD"
				}
			},
			"interpretation": {
				"oracle": "\tPREPONDERANCE OF THE GREAT.\n\tThe ridgepole sags to the breaking point.\n\tIt furthers one to have somewhere to go.\n\tSuccess.",
				"resume": "\n\nThis hexagram consists of four strong lines inside and two weak lines outside. \nWhen the strong are outside and the weak inside, all is well and there is \nnothing out of balance, nothing extraordinary in the situation. Here, \nhowever, the opposite is the case. The hexagram represents a beam that is \nthick and heavy in the middle but too weak at the ends. This is a condition \nthat cannot last; it must be changed, must pass, or misfortune will result.\n\t",
				"judgment": "\n\nThe weight of the great is excessive. The load is too heavy for the strength of \nthe supports. The ridgepole on which the whole roof rests, sags to the \nbreaking point, because its supporting ends are too weak for the load they \nbear. It is an exceptional time and situation; therefore extraordinary measures \nare demanded. It is necessary to find a way of transition as quickly as possible, \nand to take action. This promises success. For although the strong element is \nin excess, it is in the middle, that is, at the center of gravity, so that a \nrevolution is not to be feared. Nothing is to be achieved by forcible measures. \nThe problem must be solved by gently penetration to the meaning of the \nsituation (as is suggested by the attribute of the inner trigram, Sun); then the \nchange-over to other conditions will be successful. It demands real \nsuperiority; therefore the time when the great preponderates is a momentous \ntime.\n\t",
				"image": {
					"oracle": "\tThe lake rises above the trees:\n\tThe image of PREPONDERANCE OF THE GREAT.\n\tThus the superior man, when he stands alone,\n\tIs unconcerned,\n\tAnd if he has to renounce the world,\n\tHe is undaunted.",
					"image": "\n\nExtraordinary times when the great preponderates are like flood times when \nthe lake rises over the treetops. But such conditions are temporary. The two \ntrigrams indicate the attitude proper to such exceptional times: the symbol of \nthe trigram Sun is the tree, which stands firm even though it stands alone, \nand the attribute of Tui is joyousness, which remains undaunted even if it \nmust renounce the world.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nTo spread white rushes underneath.\nNo blame.",
						"expl": "When a man wishes to undertake an enterprise in extraordinary times, he must be extraordinarily cautious, just as when setting a heavy thing down on the floor, one takes care to put rushes under it, so that nothing will break. This caution, though it may seem exaggerated, is not a mistake. Exceptional enterprises cannot succeed unless utmost caution is observed in their beginnings and in the laying of their foundations."
					},
					{
						"poem": "Nine in the second place means:\nA dry poplar sprouts at the root.\nAn older man takes a young wife.\nEverything furthers.",
						"expl": "Wood is near water; hence the image of an old poplar sprouting at the root. This means an extraordinary situation arises when an older man marries a young girl who suits him. Despite the unusualness of the situation, all goes well.  From the point of view of politics, the meaning is that in exceptional times one does well to join with the lowly, for this affords a possibility of renewal.\t\tNine in the third place means:\tThe ridgepole sags to the breaking point.\tMisfortune.\tThis indicates a type of man who in times of preponderance of the great insists on pushing ahead. He accepts no advice from others, and therefore they in turn are not willing to lend him support. Because of this the burden grows, until the structure of things bends or breaks. Plunging willfully ahead in times of danger only hastens the catastrophe."
					},
					{
						"poem": "Nine in the fourth place means:\nThe ridgepole is braced. Good fortune.\nIf there are ulterior motives, it is humiliating.",
						"expl": "Through friendly relations with people of lower rank, a responsible man succeeds in becoming master of the situation. But if, instead of working for the rescue of the whole, he were to misuse his connections to obtain personal power and success, it would lead to humiliation."
					},
					{
						"poem": "Nine in the fifth place means:\nA withered poplar puts forth flowers.\nAn older woman takes a husband. \nNo blame. No praise.",
						"expl": "A withered poplar that flowers exhausts its energies thereby and only hastens its end. An older woman may marry once more, but no renewal takes place. Everything remains barren. Thus, though all the amenities are observed, the net result is only the anomaly of the situation.  Applied to politics, the metaphor means that if in times of insecurity we give up alliance with those below us and keep up only the relationships we have with people of higher rank, an unstable situation is created."
					}
				]
			}
		},
		{
			"number": 29,
			"name": "Kan",
			"description": "The Abysmal (Water)",
			"trigrams": {
				"above": {
					"title": "kan",
					"description": "THE ABYSMAL, WATER"
				},
				"below": {
					"title": "kan",
					"description": "THE ABYSMAL, WATER"
				}
			},
			"interpretation": {
				"oracle": "\tThe Abysmal repeated.\n\tIf you are sincere, you have success in your heart,\n\tAnd whatever you do succeeds.",
				"resume": "\n\nThis hexagram consists of a doubling of the trigram K'an. It is one of the \neight hexagrams in which doubling occurs. The trigram K'an means a \nplunging in. A yang line has plunged in between two yin lines and is closed \nin by them like water in a ravine. The trigram K'an is also the middle son. \nThe Receptive has obtained the middle line of the Creative, and thus K'an \ndevelops. As an image it represents water, the water that comes from above \nand is in motion on earth in streams and rivers, giving rise to all life on \nearth.\n\n  In man's world K'an represents the heart, the soul locked up within the \nbody, the principle of light inclosed in the dark—that is, reason. The name of \nthe hexagram, because the trigram is doubled, has the additional meaning, \n\"repetition of danger.\" Thus the hexagram is intended to designate an \nobjective situation to which one must become accustomed, not a subjective \nattitude. For danger due to a subjective attitude means either foolhardiness \nor guile. Hence too a ravine is used to symbolize danger; it is a situation in \nwhich a man is in the same pass as the water in a ravine, and, like the water, \nhe can escape if he behaves correctly.\n\t",
				"judgment": "\n\nThrough repetition of danger we grow accustomed to it. Water sets the \nexample for the right conduct under such circumstances. It flows on and on, \nand merely fills up all the places through which it flows; it does not shrink \nfrom any dangerous spot nor from any plunge, and nothing can make it lose \nits own essential nature. It remains true to itself under all conditions. Thus \nlikewise, if one is sincere when confronted with difficulties, the heart can \npenetrate the meaning of the situation. And once we have gained inner \nmastery of a problem, it will come about naturally that the action we take will \nsucceed. In danger all that counts is really carrying out all that has to be done-\n-thoroughness—and going forward, in order not to perish through tarrying in \nthe danger.\n\n  Properly used, danger can have an important meaning as a protective \nmeasure. Thus heaven has its perilous height protecting it against every \nattempt at invasion, and earth has its mountains and bodies of water, \nseparating countries by their dangers. Thus also rulers make use of danger to \nprotect themselves against attacks from without and against turmoil within.\n\t",
				"image": {
					"oracle": "\tWater flows on uninterruptedly and reaches its foal:\n\tThe image of the Abysmal repeated.\n\tThus the superior man walks in lasting virtue\n\tAnd carries on the business of teaching.",
					"image": "\n\nWater reaches its goal by flowing continually. It fills up every depression \nbefore it flows on. The superior man follows its example; he is concerned \nthat goodness should be an established attribute of character rather than an \naccidental and isolated occurrence. So likewise in teaching others everything \ndepends on consistency, for it is only through repetition that the pupil makes \nthe material his own.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nRepetition of the Abysmal.\nIn the abyss one falls into a pit.\nMisfortune.",
						"expl": "By growing used to what is dangerous, a man can easily allow it to become part of him. He is familiar with it and grows used to evil. With this he has lost the right way, and misfortune is the natural result."
					},
					{
						"poem": "Nine in the second place means:\nThe abyss is dangerous.\nOne should strive to attain small things only.",
						"expl": "When we are in danger we ought not to attempt to get out of it immediately, regardless of circumstances; at first we must content ourselves with not being overcome by it. We must calmly weigh the conditions of the time and by satisfied with small gains, because for the time being a great success cannot be attained. A spring flows only sparingly at first, and tarries for some time before it makes its way in to the open."
					},
					{
						"poem": "Six in the third place means:\nForward and backward, abyss on abyss.\nIn danger like this, pause at first and wait,\nOtherwise you will fall into a pit in the abyss.\nDo not act this way.",
						"expl": "Here every step, forward or backward, leads into danger. Escape is out of the question. Therefore we must not be misled into action, as a result of which we should only bog down deeper in the danger; disagreeable as it may be to remain in such a situation, we must wait until a way out shows itself."
					},
					{
						"poem": "Six in the fourth place means:\nA jug of wine, a bowl of rice with it;\nEarthen vessels\nSimply handed in through the Window.\nThere is certainly no blame in this.",
						"expl": "In times of danger ceremonious forms are dropped. What matters most is sincerity. Although as a rule it is customary for an official to present certain introductory gifts and recommendations before he is appointed, here everything is simplified to the utmost. The gifts are insignificant, there is no one to sponsor him, he introduces himself; yet all this need not be humiliating if only there is the honest intention of mutual help in danger. Still another idea is suggested. The window is the place through which light enters the room. If in difficult times we want to enlighten someone, we must begin with that which is in itself lucid and proceed quite simply from that point on."
					},
					{
						"poem": "Nine in the fifth place means:\nThe abyss is not filled to overflowing,\nIt is filled only to the rim.\nNo blame.",
						"expl": "Danger comes because one is too ambitious. In order to flow out of a ravine, water does not rise higher than the lowest point of the rim. So likewise a man when in danger has only to proceed along the line of least resistance; thus he reaches the goal. Great labors cannot be accomplished in such times; it is enough to get out of the danger."
					}
				]
			}
		},
		{
			"number": 30,
			"name": "Li",
			"description": "The Clinging, Fire",
			"trigrams": {
				"above": {
					"title": "li",
					"description": "THE CLINGING, FIRE"
				},
				"below": {
					"title": "li",
					"description": "THE CLINGING, FIRE"
				}
			},
			"interpretation": {
				"oracle": "\tTHE CLINGING. Perseverance furthers.\n\tIt brings success.\n\tCare of the cow brings good fortune.",
				"resume": "\n\nThis hexagram is another double sign. The trigram Li means \"to cling to \nsomething,\" and also \"brightness.\" A dark line clings to two light lines, one \nabove and one below—the image of an empty space between two strong lines, \nwhereby the two strong lines are made bright. The trigram represents the \nmiddle daughter. The Creative has incorporated the central line of the \nReceptive, and thus Li develops. As an image, it is fire. Fire has no definite \nform but clings to the burning object and thus is bright. As water pours down \nfrom heaven, so fire flames up from the earth. While K'an means the soul \nshut within the body, Li stands for nature in its radiance.\n\t",
				"judgment": "\n\nWhat is dark clings to what is light and so enhances the brightness of the \nlatter. A luminous thing giving out light must have within itself something \nthat perseveres; otherwise it will in time burn itself out. Everything that gives \nlight is dependent on something to which it clings, in order that it may \ncontinue to shine.\n\n  Thus the sun and moon cling to heaven, and grain, grass, and trees cling to \nthe earth. So too the twofold clarity of the dedicated man clings to what is \nright and thereby can shape the world. Human life on earth is conditioned \nand unfree, and when man recognizes this limitation and makes himself \ndependent upon the harmonious and beneficent forces of the cosmos, he \nachieves success. The cow is the symbol of extreme docility. By cultivating in \nhimself an attitude of compliance and voluntary dependence, man acquires \nclarity without sharpness and finds his place in the world.\n\t",
				"image": {
					"oracle": "\tThat which is bright rises twice:\n\tThe image of FIRE.\n\tThus the great man, by perpetuating this brightness,\n\tIllumines the four quarters of the world.",
					"image": "\n\nEach of the two trigrams represents the sun in the course of a day. The two \ntogether represent the repeated movement of the sun, the function of light \nwith respect to time. The great man continues the work of nature in the \nhuman world. Through the clarity of his nature he causes the light to spread \nfarther and farther and to penetrate the nature of man ever more deeply. \n\t\t\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nThe footprints run crisscross.\nIf one is seriously intent, no blame.",
						"expl": "It is early morning and work begins. The mind has been closed to the outside world in sleep; now its connections with the world begin again. The traces of one's impressions run crisscross. Activity and haste prevail. It is important then to preserve inner composure and not to allow oneself to be swept along by the bustle of life. If one is serious and composed, he can acquire the clarity of mind needed for coming to terms with the innumerable impressions that pour in. It is precisely at the beginning that serious concentration is important, because the beginning holds the seed of all that is to follow."
					},
					{
						"poem": "Six in the second place means:\nYellow light. Supreme good fortune.",
						"expl": "Midday has come; the sun shines with a yellow light. Yellow is the color of measure and mean. Yellow light is therefore a symbol of the highest culture and art, whose consummate harmony consists in holding to the mean."
					},
					{
						"poem": "Nine in the third place means:\nIn the light of the setting sun,\nMen either beat the pot and sing\nOr loudly bewail the approach of old age.\nMisfortune.",
						"expl": "Here the end of the day has come. The light of the setting sun calls to mind the fact that life is transitory and conditional. Caught in this external bondage, men are usually robbed of their inner freedom as well. The sense of the transitoriness of life impels them to uninhibited revelry in order to enjoy life while it lasts, or else they yield to melancholy and spoil the precious time by lamenting the approach of old age. Both attitudes are wrong. To the superior man it makes no difference whether death comes early or late. He cultivates himself, awaits his allotted time, and in this way secures his fate."
					},
					{
						"poem": "Nine in the fourth place means:\nIts coming is sudden;\nIt flames up, dies down, is thrown away.",
						"expl": "Clarity of mind has the same relation to life that fire has to wood. Fire clings to wood, but also consumes it. Clarity of mind is rooted in life but can also consume it. Everything depends upon how the clarity functions. Here the image used is that of a meteor or a straw fire. A man who is excitable and restless may rise quickly to prominence but produces no lasting effects. Thus matters end badly when a man spends himself too rapidly and consumes himself like a meteor."
					}
				]
			}
		},
		{
			"number": 31,
			"name": "Hsien",
			"description": "Influence (Wooing)",
			"trigrams": {
				"above": {
					"title": "tui",
					"description": "THE JOYOUS, LAKE"
				},
				"below": {
					"title": "kên",
					"description": "KEEPING STILL, MOUNTAIN"
				}
			},
			"interpretation": {
				"oracle": "\tInfluence. Success.\n\tPerseverance furthers.\n\tTo take a maiden to wife brings good fortune.",
				"resume": "\n\nThe name of the hexagram means \"universal,\" \"general,\" and in a figurative \nsense \"to influence,\" \"to stimulate.\" The upper trigram is Tui, the Joyous; the \nlower is Kên, Keeping still. By its persistent, quiet influence, the lower, rigid \ntrigram stimulates the upper, weak trigram, which responds to this \nstimulation cheerfully and joyously. Kên, the lower trigram, is the youngest \nson; the upper, Tui, is the youngest daughter. Thus the universal mutual \nattraction between the sexes is represented. In courtship, the masculine \nprinciple must seize the initiative and place itself below the feminine \nprinciple.\n\n  Just as the first part of book 1 begins with the hexagrams of heaven and \nearth, the foundations of all that exists, the second part begins with the \nhexagrams of courtship and marriage, the foundations of all social \nrelationships.\n\t",
				"judgment": "\n\nThe weak element is above, the strong below; hence their powers attract each \nother, so that they unite. This brings about success, for all success depends on \nthe effect of mutual attraction. By keeping still within while experiencing joy \nwithout, one can prevent the joy from going to excess and hold it within \nproper bounds. This is the meaning of the added admonition, \"Perseverance \nfurthers,\" for it is perseverance that makes the difference between seduction \nand courtship; in the latter the strong man takes a position inferior to that of \nthe weak girl and shows consideration for her. This attraction between \naffinities is a general law of nature. Heaven and earth attract each other and \nthus all creatures come into being. Through such attraction the sage \ninfluences men's hearts, and thus the world attains peace. From the \nattractions they exert we can learn the nature of all beings in heaven and on \nearth.\n\t",
				"image": {
					"oracle": "\tA lake on the mountain:\n\tThe image of influence.\n\tThus the superior man encourages people to approach him\n\tBy his readiness to receive them.",
					"image": "\n\nA mountain with a lake on its summit is stimulated by the moisture from \nthe lake. It has this advantage because its summit does not jut out as a peak \nbut is sunken. The image counsels that the mind should be kept humble and \nfree, so that it may remain receptive to good advice. People soon give up \ncounseling a man who thinks that he knows everything better than anyone \nelse.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nThe influence shows itself in the big toe.",
						"expl": "A movement, before it is actually carried out, shows itself first in the toes. The idea of an influence is already present, but is not immediately apparent to others. As long as the intention has no visible effect, it is of no importance to the outside world and leads neither to good nor to evil."
					},
					{
						"poem": "Six in the second place means:\nThe influence shows itself in the calves of the legs.\nMisfortune.\nTarrying brings good fortune.",
						"expl": "In movement, the calf of the leg follows the foot; by itself it can neither go forward nor stand still. Since the movement is not self-governed, it bodes ill. One should wait quietly until one is impelled to action by a real influence. Then one remains uninjured."
					},
					{
						"poem": "Nine in the third place means:\nThe influence shows itself in the thighs.\nHolds to that which follows it.\nTo continue is humiliating.",
						"expl": "\tEvery mood of the heart influences us to movement. What the heart desires, the thighs run after without a moment's hesitation; they hold to the heart, which they follow. In the life of man, however, acting on the spur of every caprice is wrong and if continued leads to humiliation. Three considerations suggest themselves here. First, a man should not run precipitately after all the persons whom he would like to influence, but must be able to hold back under certain circumstances. As little should he yield immediately to every whim of those in whose service he stands. Finally, where the moods of his own heart are concerned, he should never ignore the possibility of inhibition, for this is the basis of human freedom."
					},
					{
						"poem": "Nine in the fourth place means:\nPerseverance brings good fortune.\nRemorse disappears.\nIf a man is agitated in mind,\nAnd his thoughts go hither and thither,\nOnly those friends \nOn whom he fixes his conscious thoughts\nWill follow.",
						"expl": "Here the place of the heart is reached. The impulse that springs from this source is the most important of all. It is of particular concern that this influence be constant and good; then, in spite of the danger arising from the great susceptibility of the human heart, there will be no cause for remorse. When the quiet power of a man's own character is at work, the effects produced are right. All those who are receptive to the vibrations of such a spirit will then be influenced. Influence over others should not express itself as a conscious and willed effort to manipulate them. Through practicing such conscious incitement, one becomes wrought up and is exhausted by the eternal stress and strain. Moreover, the effects produced are then limited to those on whom one's thoughts are consciously fixed."
					},
					{
						"poem": "Nine in the fifth place means:\nThe influence shows itself in the back of the neck.\nNo remorse.",
						"expl": "The back of the neck is the most rigid part of the body. When the influence shows itself there, the will remains firm and the influence does not lead to confusion. Hence remorse does not enter into consideration here. What takes place in the depths of one's being, in the unconscious mind. It is true that if we cannot be influenced ourselves, we cannot influence the outside world."
					}
				]
			}
		},
		{
			"number": 32,
			"name": "Hêng",
			"description": "Duration",
			"trigrams": {
				"above": {
					"title": "chên",
					"description": "THE AROUSING, THUNDER"
				},
				"below": {
					"title": "sun",
					"description": "THE GENTLE, WIND"
				}
			},
			"interpretation": {
				"oracle": "\tDURATION. Success. No blame.\n\tPerseverance furthers.\n\tIt furthers one to have somewhere to go.",
				"resume": "\n\nThe strong trigram Chên is above, the weak trigram Sun below. This \nhexagram is the inverse of the preceding one. In the latter we have influence, \nhere we have union as an enduring condition. The two images are thunder \nand wind, which are likewise constantly paired phenomena. The lower \ntrigram indicates gentleness within; the upper, movement without.\n\n  In the sphere of social relationships, the hexagram represents the institution \nof marriage as the enduring union of the sexes. During courtship the young \nman subordinates himself to the girl, but in marriage, which is represented by \nthe coming together of the eldest son and the eldest daughter, the husband is \nthe directing and moving force outside, while the wife, inside, is gentle and \nsubmissive.\n\t",
				"judgment": "\n\nDuration is a state whose movement is not worn down by hindrances. It is \nnot a state of rest, for mere standstill is regression. Duration is rather the self-\ncontained and therefore self-renewing movement of an organized, firmly \nintegrated whole, taking place in accordance with immutable laws and \nbeginning anew at every ending. The end is reached by an inward \nmovement, by inhalation, systole, contraction, and this movement turns into \na new beginning, in which the movement is directed outward, in exhalation, \ndiastole, expansion.\n\n  Heavenly bodies exemplify duration. They move in their fixed orbits, and \nbecause of this their light-giving power endures. The seasons of the year \nfollow a fixed law of change and transformation, hence can produce effects \nthat endure.\n\n  So likewise the dedicated man embodies an enduring meaning in his way \nof life, and thereby the world is formed. In that which gives things their \nduration, we can come to understand the nature of all beings in heaven and \non earth.\n\t",
				"image": {
					"oracle": "\tThunder and wind: the image of DURATION.\n\tThus the superior man stands firm \n\tAnd does not change has direction.",
					"image": "\n\nThunder rolls, and the wind blows; both are examples of extreme mobility \nand so are seemingly the very opposite of duration, but the laws governing \ntheir appearance and subsidence, their coming and going, endure. In the same \nway the independence of the superior man is not based on rigidity and \nimmobility of character. He always keeps abreast of the time and changes \nwith it. What endures is the unswerving directive, the inner law of his \nbeing, which determines all his actions.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nSeeking duration too hastily brings misfortune persistently.\nNothing that would further.",
						"expl": "Whatever endures can be created only gradually by long-continued work and careful reflection. In the same sense Lao-tse says: \"If we wish to compress something, we must first let it fully expand.\" He who demands too much at once is acting precipitately, and because he attempts too much, he ends by succeeding in nothing."
					},
					{
						"poem": "Nine in the second place means:\nRemorse disappears.",
						"expl": "\t The situation is abnormal. A man's force of character is greater than the available material power. Thus he might be afraid of allowing himself to attempt something beyond his strength. However, since it is the time of DURATION, it is possible for him to control his inner strength and so to avoid excess. Cause for remorse then disappears."
					},
					{
						"poem": "Nine in the third place means:\nHe who does not give duration to his character\nMeets with disgrace.\nPersistent humiliation.",
						"expl": "If a man remains at the mercy of moods of hope or fear aroused by the outer world, he loses his inner consistency of character. Such inconsistency invariably leads to distressing experiences. These humiliations often come from an unforeseen quarter. Such experiences are not merely effects produced by the external world, but logical consequences evoked by his own nature."
					},
					{
						"poem": "Nine in the fourth place means:\nNo game in the field.",
						"expl": "If we are in pursuit of game and want to get a shot at a quarry, we must set about it in the right way. A man who persists in stalking game in a place where there is none may wait forever without finding any. Persistence in search is not enough. What is not sought in the right way is not found."
					},
					{
						"poem": "Six in the fifth place means:\nGiving duration to one's character through perseverance.\nThis is good fortune for a woman, misfortune for a man.",
						"expl": "A woman should follow a man her whole life long, but a man should at all times hold to what is his duty at the given moment. Should he persistently seek to conform to the woman, it would be a mistake for him. Accordingly it is altogether right for a woman to hold conservatively to tradition, but a  man must always be flexible and adaptable and allow himself to be guided solely by what his duty requires of him at the moment."
					}
				]
			}
		},
		{
			"number": 33,
			"name": "TUN",
			"description": "Retreat",
			"trigrams": {
				"above": {
					"title": "chien",
					"description": "THE CREATIVE, HEAVEN"
				},
				"below": {
					"title": "kên",
					"description": "KEEPING STILL, MOUNTAIN"
				}
			},
			"interpretation": {
				"oracle": "\tRETREAT. Success.\n\tIn what is small, perseverance furthers.",
				"resume": "\n\nThe power of the dark is ascending. The light retreats to security, so that the \ndark cannot encroach upon it. This retreat is a matter not of man's will but of \nnatural law. Therefore in this case withdrawal is proper; it is the correct way \nto behave in order not to exhaust one's forces.\n\n  In the calendar this hexagram is linked with the sixth month (July-August), \nin which the forces of winter are already showing their influence.\n\t",
				"judgment": "\n\nConditions are such that the hostile forces favored by the time are advancing. \nIn this case retreat is the right course, and it is not to be confused with flight. \nFlight means saving oneself under any circumstances, whereas retreat is a \nsign of strength. We must be careful not to miss the right moment while we \nare in full possession of power and position. Then we shall be able to \ninterpret the signs of the time before it is too late and to prepare for \nprovisional retreat instead of being drawn into a desperate life-and-death \nstruggle. Thus we do not simple abandon the field to the opponent; we make \nit difficult for him to advance by showing perseverance in single acts of \nresistance. In this way we prepare, while retreating, for the counter-\nmovement. Understanding the laws of a constructive retreat of this sort is \nnot easy. The meaning that lies hidden in such a time is important.\n\t",
				"image": {
					"oracle": "\tMountain under heaven: the image of RETREAT.\n\tThus the superior man keeps the inferior man at a distance,\n\tNot angrily but with reserve.",
					"image": "\n\nThe mountain rises up under heaven, but owing to its nature it finally comes \nto a stop. Heaven on the other hand retreats upward before it into the \ndistance and remains out of reach. This symbolizes the behavior of the \nsuperior man toward a climbing inferior; he retreats into his own thoughts as \nthe inferior man comes forward. He does not hate him, for hatred is a form \nof subjective involvement by which we are bound to the hated object. The \nsuperior man shows strength (heaven) in that he brings the inferior man to a \nstandstill (mountain) by his dignified reserve.\n\t\t"
				},
				"lines": [
					{
						"poem": "°Six at the beginning means:\nAt the tail in retreat. This is dangerous.\nOne must not wish to undertake anything.",
						"expl": "Since the hexagram is the picture of something that is retreating, the lowest line represents the tail and the top line the head. In a retreat it is advantageous to be at the front. Here one is at the back, in immediate contact with the pursuing enemy. This is dangerous, and under such circumstances it is not advisable to undertake anything. Keeping still is the easiest way of escaping from the threatening danger."
					},
					{
						"poem": "Six in the second place means:\nhe holds him fast with yellow oxhide.\nNo one can tear him loose.",
						"expl": "Yellow is the color of the middle. It indicates that which is correct and in line with duty. Oxhide is strong and not to be torn.  While the superior men retreat and the inferior press after them, the inferior man represented here holds on so firmly and tightly to the superior man that the latter cannot shake him off. And because he is in quest of what is right an so strong in purpose, he reaches his goal. Thus the line confirms what is said in the Judgment: \"In what is small\" —here equivalent to \"in the inferior man\" — \"perseverance furthers.\""
					},
					{
						"poem": "Nine in the third place means:\nA halted retreat \nIs nerve-wracking and dangerous.\nTo retain people as men- and maidservants\nBrings good fortune.",
						"expl": "When it is time to retreat it is both unpleasant and dangerous to be held back, because then one no longer has freedom of action. In such a case the only expedient is to take into one's service, so to speak, those who refuse to let one go, so that one may at least keep one's initiative and not fall helplessly under their domination. But even with this expedient the situation is far from satisfactory—for what can one hope to accomplish with such servants?"
					},
					{
						"poem": "Nine in the fourth place means:\nVoluntary retreat brings good fortune to the superior man\nAnd downfall to the inferior man.",
						"expl": "In retreating the superior man is intent on taking his departure willingly and in all friendliness. He easily adjusts his mind to retreat, because in retreating he does not have to do violence to his convictions. The only one who suffers is the inferior man from whom he retreats, who will degenerate when deprived of the guidance of the superior man."
					},
					{
						"poem": "Nine in the fifth place means:\nFriendly retreat. Perseverance brings good fortune.",
						"expl": "It is the business of the superior man to recognize in time that the moment for retreat has come. If the right moment is chosen, the retreat can be carried out within the forms of perfect friendliness, without the necessity of disagreeable discussions. Yet, for all the observance of amenities, absolute firmness of decision is necessary if one is not to be led astray by irrelevant considerations."
					}
				]
			}
		},
		{
			"number": 34,
			"name": "Ta Chuang",
			"description": "The Power of the Great",
			"trigrams": {
				"above": {
					"title": "chên",
					"description": "THE AROUSING, THUNDER"
				},
				"below": {
					"title": "chien",
					"description": "THE CREATIVE, HEAVEN"
				}
			},
			"interpretation": {
				"oracle": "\tTHE POWER OF THE GREAT. Perseverance furthers.",
				"resume": "\n\nThe great lines, that is, the light, strong lines, are powerful. Four light lines \nhave entered the hexagram from below and are about to ascend higher. The \nupper trigram is Chên, the Arousing; the lower is ch'ien, the Creative. \nCh'ien is strong, Chên produces movement. The union of movement and \nstrength gives the meaning of THE POWER OF THE GREAT. The hexagram \nis linked with the second month (March-April).\n\t",
				"judgment": "\n\nThe hexagram points to a time when inner worth mounts with great force \nand comes to power. But its strength has already passed beyond the median \nline, hence there is danger that one may rely entirely on one's own power \nand forget to ask what is right. There is danger too that, being intent on \nmovement, we may not wait for the right time. Therefore the added \nstatement that perseverance furthers. For that is truly great power which does \nnot degenerate into mere force but remains inwardly united with the \nfundamental principles of right and of justice. When we understand this \npoint—namely, that greatness and justice must be indissolubly united—we \nunderstand the true meaning of all that happens in heaven and on earth.\n\t",
				"image": {
					"oracle": "\tThunder in heaven above:\n\tThe image of THE POWER OF THE GREAT.\n\tThus the superior man does not tread upon paths\n\tThat do not accord with established order.",
					"image": "\n\nThunder—electrical energy—mounts upward in the spring. The direction of \nthis movement is in harmony with that of the movement of heaven. It is \ntherefore a movement in accord with heaven, producing great power. \nHowever, true greatness depends on being in harmony with what is right. \nTherefore in times of great power the superior man avoids doing anything \nthat is not in harmony with the established order.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nPower in the toes.\nContinuing brings misfortune.\nThis is certainly true.",
						"expl": "The toes are in the lowest place and are ready to advance. So likewise great power in lowly station is inclined to effect advance by force. This, if carried further, would certainly lead to misfortune, and therefore by way of advice a warning is added."
					},
					{
						"poem": "Nine in the second place means:\nPerseverance brings good fortune.",
						"expl": "The premise here is that the gates to success are beginning to open. Resistance gives way and we forge ahead. This is the point at which, only too easily, we become the prey of exuberant self-confidence. This is why the oracle says that perseverance (i.e., perseverance in inner equilibrium, without excessive use of power) brings good fortune."
					},
					{
						"poem": "Nine in the third place means:\nThe inferior man works through power.\nThe superior man does not act thus.\nTo continue is dangerous.\nA goat butts against a hedge\nAnd gets its horns entangled.",
						"expl": "Making a boast of power leads to entanglements, just as a goat entangles its horns when it butts against a hedge. Whereas an inferior man revels in power when he comes into possession of it, the superior man never makes this mistake. He is conscious at all times of the danger of pushing ahead regardless of circumstances, and therefore renounces in good time the empty display of force."
					},
					{
						"poem": "Nine in the fourth place means:\nPerseverance brings good fortune.\nRemorse disappears.\nThe hedge opens; there is no entanglement.\nPower depends upon the axle of a big cart.",
						"expl": "If a man goes on quietly and perseveringly working at the removal of resistances, success comes in the end. The obstructions give way and all occasion for remorse arising from excessive use of power disappears.Such a man's power does not show externally, yet it can move heavy loads, like a big cart whose real strength lies in its axle. The less that power is applied outwardly, the greater its effect."
					},
					{
						"poem": "Six in the fifth place means:\nLoses the goat with ease.\nNo remorse.",
						"expl": "The goat is noted for hardness outwardly and weakness within. Now the situation is such that everything is easy; there is no more resistance. One can give up a belligerent, stubborn way of acting and will not have to regret it."
					}
				]
			}
		},
		{
			"number": 35,
			"name": "Chin",
			"description": "Progress",
			"trigrams": {
				"above": {
					"title": "li",
					"description": "THE CLINGING, FIRE"
				},
				"below": {
					"title": "kun",
					"description": "THE RECEPTIVE, EARTH"
				}
			},
			"interpretation": {
				"oracle": "\tPROGRESS. The powerful prince\n\tIs honored with horses in large numbers.\n\tIn a single day he is granted audience three times.",
				"resume": "\n\nThe hexagram represents the sun rising over the earth. It is therefore the \nsymbol of rapid, easy progress, which at the same time means ever widening \nexpansion and clarity.\n\t",
				"judgment": "\n\nAs an example of progress, this pictures a time when a powerful feudal lord \nrallies the other lords around the sovereign and pledges fealty and peace. The \nsovereign rewards him richly and invites him to a closer intimacy.\n\n\n  A twofold idea is set forth here. The actual effect of the progress emanates \nfrom a man who is in a dependent position and whom the others regard as \ntheir equal and are therefore willing to follow. This leader has enough clarity \nof vision not to abuse his great influence but to use it rather for the benefit of \nhis ruler. His ruler in turn is free of all jealousy, showers presents on the \ngreat man, and invites him continually to his court. An enlightened ruler \nand an obedient servant—this is the condition on which great progress \ndepends.\n\t",
				"image": {
					"oracle": "\tThe sun rises over the earth:\n\tThe image of PROGRESS.\n\tThus the superior man himself\n\tBrightens his bright virtue.",
					"image": "\n\nThe light of the sun rises over the earth is by nature clear. The higher the sun \nrises, the more it emerges from the dark mists, spreading the pristine purity \nof its rays over an ever widening area. The real nature of man is likewise \noriginally good, but it becomes clouded by contact with earthly things and \ntherefore needs purification before it can shine forth in its native clarity.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nProgressing, but turned back.\nPerseverance brings good fortune.\nIf one meets with no confidence, one should remain calm.\nNo mistake.",
						"expl": "At a time when all elements are pressing for progress, we are still uncertain whether in the course of advance we may not meet with a rebuff. Then the thing to do is simply continue in what is right; in the end this will bring good fortune. It may be that we meet with no confidence. In this case we ought not to try to win confidence regardless of the situation, but should remain calm and cheerful and refuse to be roused to anger. Thus we remain free of mistakes."
					},
					{
						"poem": "Six in the second place means:\nProgressing, but in sorrow.\nPerseverance brings good fortune.\nThen one obtains great happiness from one's ancestress.",
						"expl": "Progress is halted; an individual is kept from getting in touch with the man in authority with whom he has a connection. When this happens, he must remain persevering, although he is grieved; then with a maternal gentleness the man in question will bestow great happiness upon him. This happiness comes to him-and is well deserved-because in this case mutual attraction does not rest on selfish or partisan motives but on firm and correct principles."
					},
					{
						"poem": "Six in the third place means:\nAll are in accord. Remorse disappears.",
						"expl": "A man strives onward, in association with others whose backing encourages him. This dispels any cause for regret over the fact that he does not have enough independence to triumph unaided over every hostile turn of fate."
					},
					{
						"poem": "Nine in the fourth place means:\nProgress like a hamster.\nPerseverance brings danger.",
						"expl": "In times of progress it is easy for strong men in the wrong places to amass great possessions. But such conduct shuns the light. And since times of progress are inevitably brought to the light, perseverance in such action always leads to danger."
					}
				]
			}
		},
		{
			"number": 36,
			"name": "Ming I",
			"description": "Darkening of the light",
			"trigrams": {
				"above": {
					"title": "kun",
					"description": "THE RECEPTIVE, EARTH"
				},
				"below": {
					"title": "li",
					"description": "THE CLINGING, FIRE"
				}
			},
			"interpretation": {
				"oracle": "\tDARKENING OF THE LIGHT. In adversity\n\tIt furthers one to be persevering.",
				"resume": "\n\nHere the sun has sunk under the earth and is therefore darkened. The name \nof the hexagram means literally \"wounding of the bright\"; hence the \nindividual lines contain frequent references to wounding. The situation is \nthe exact opposite of that in the foregoing hexagram. In the latter a wise man \nat the head of affairs has able helpers, and in company with them makes \nprogress; here a man of dark nature is in a position of authority and brings \nharm to the wise and able man.\n\t",
				"judgment": "\t\nOne must not unresistingly let himself be swept along by unfavorable \ncircumstances, nor permit his steadfastness to be shaken. He can avoid this by \nmaintaining his inner light, while remaining outwardly yielding and \ntractable. With this attitude he can overcome even the greatest adversities.\n\n  In some situations indeed a man must hide his light, in order to make his \nwill prevail inspite of difficulties in his immediate environment. \nPerseverance must dwell in inmost consciousness and should not be \ndiscernible from without. Only thus is a man able to maintain his will in the \nface of difficulties.\n\t",
				"image": {
					"oracle": "\n\n\t\n\tThe light has sunk into the earth:\n\tThe image of DARKENING OF THE LIGHT.\n\tThus does the superior man live with the great mass:\n\tHe veils his light, yet still shines.",
					"image": "\n\nIn a time of darkness it is essential to be cautious and reserved. One should \nnot needlessly awaken overwhelming enmity by inconsiderate behavior. In \nsuch times one ought not to fall in with the practices of others; neither \nshould one drag them censoriously into the light.  In social intercourse one \nshould not try to be all-knowing. One should let many things pass, without \nbeing duped.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nDarkening of the light during flight.\nHe lowers his wings.\nThe superior man does not eat for three days\nOn his wanderings.\nBut he has somewhere to go.\nThe host has occasion to gossip about him.",
						"expl": "With grandiose resolve a man endeavors to soar above all obstacles, but thus encounters a hostile fate. He retreats and evades the issue. The time is difficult. Without rest, he must hurry along, with no permanent abiding place. If he does not want to make compromises within himself, but insists on remaining true to his principles, he suffers deprivation. Never the less he has a fixed goal to strive for even though the people with whom he lives do not understand him and speak ill of him."
					},
					{
						"poem": "Six in the second place means:\nDarkening of the light injures him in the left thigh.\nHe gives aid with the strength of a horse.\nGood fortune.",
						"expl": "Here the Lord of Light is in a subordinate place and is wounded by the Lord of Darkness. But the injury is not fatal; it is only a hindrance. Rescue is still possible. The wounded man gives no thought to himself; he thinks only of saving the others who are also in danger. Therefore he tries with all his strength to save all that can be saved. There is good fortune in thus acting according to duty."
					},
					{
						"poem": "Nine in the third place means:\nDarkening of the light during the hunt in the south.\nTheir great leader is captured.\nOne must not expect perseverance too soon.",
						"expl": "It seems as if chance were at work. While the strong, loyal man is striving eagerly and in good faith to create order, he meets the ringleader of the disorder, as if by accident, and seizes him. Thus victory is achieved. But in abolishing abuses one must not be too hasty.  This would turn out badly because the abuses have been in existence so long."
					},
					{
						"poem": "Six in the fourth place means:\nHe penetrates the left side of the belly.\nOne gets at the very heart of the darkening of the light.",
						"expl": "We find ourselves close to the commander of darkness and so discover his mot secret thoughts. In this way we realize that there is no longer any hope of improvement, and thus we are enabled to leave the scene of disaster before the storm breaks."
					},
					{
						"poem": "Six in the fifth place means:\nDarkening of the light as with Prince Chi.\nPerseverance furthers.",
						"expl": "Prince Chi lived at the court of the evil tyrant Chou Hsin, who, although not mentioned by name, furnished the historical example on which this whole situation is based. Prince Chi was a relative of the tyrant and could not withdraw from the court; therefore he concealed his true sentiments and feigned insanity. Although he was held a slave, he did not allow external misery to deflect him from his convictions.  This provides a teaching for those who cannot leave their posts in times of darkness. In order to escape danger, they need invincible perseverance of spirit and redoubled caution in their dealings with the world."
					}
				]
			}
		},
		{
			"number": 37,
			"name": "Chia Jên",
			"description": "The Family [The Clan]",
			"trigrams": {
				"above": {
					"title": "sun",
					"description": "THE GENTLE, WIND"
				},
				"below": {
					"title": "li",
					"description": "THE CLINGING, FIRE"
				}
			},
			"interpretation": {
				"oracle": "\tTHE FAMILY. The perseverance of the woman furthers.",
				"resume": "\n\nThe hexagram represents the laws obtaining within the family. The strong \nline at the top represents the father, the lowest the son. The strong line in the \nfifth place represents the husband, the yielding second line the wife. On the \nother hand, the two strong lines in the fifth and the third place represent two \nbrothers, and the two weak lines correlated with them in the fourth and the \nsecond place stand for their respective wives. Thus all the connections and \nrelationships within the family find their appropriate expression. Each \nindividual line has the character according with its place. The fact that a \nstrong line occupies the sixth place-where a weak line might be expected-\nindicates very clearly the strong leadership that must come from the head of \nthe family. The line is to be considered here not in its quality as the sixth but \nin its quality as the top line. THE FAMILY shows the laws operative within \nthe household that, transferred to outside life, keep the state and the world in \norder. The influence that goes out from within the family is represented by \nthe symbol of the wind created by fire.\n\t",
				"judgment": "\n\nThe foundation of the family is the relationship between husband and wife. \nThe tie that hold the family together lies in the loyalty and perseverance of \nthe wife. The tie that holds the family together lies in the loyalty and \nperseverance of the wife. Her place is within (second line), while that of the \nhusband is without (fifth line). It is in accord with the great laws of nature \nthat husband and wife take their proper places. Within the family a strong \nauthority is needed; this is represented by the parents. If the father is really a \nfather and the son a son, if the elder brother fulfills his position, and the \nyounger fulfills his, if the husband is really a husband and the wife a wife, \nthen the family is in order. When the family is in order, all the social \nrelationships of mankind will be in order.\n\n  Three of the five social relationships are to be found within the family-that \nbetween father and son, which is the relation of love, that between the \nhusband and wife, which is the relation of chaste conduct, and that between \nelder and younger brother, which is the relation of correctness. The loving \nreverence of the son is then carried over to the prince in the form of \nfaithfulness to duty; the affection and correctness of behavior existing \nbetween the two brothers are extended to a friend in the form of loyalty, and \nto a person of superior rank in the form of deference. The family is society in \nthe embryo; it is the native soil on which performance of moral duty is made \nearly through natural affection, so that within a small circle a basis of moral \npractice is created, and this is later widened to include human relationships \nin general.\n\t",
				"image": {
					"oracle": "\tWind comes forth from fire:\n\tThe image of THE FAMILY.\n\n \tThus the superior man has substance in his words\n\tAnd duration in his way of life.",
					"image": "\n\nHeat creates energy: this is signified by the wind stirred up by the fire and \nissuing forth form it. This represents influence working from within \noutward. The same thing is needed in the regulation of the family. Here too \nthe influence on others must proceed form one's own person. In order to be \ncapable of producing such an influence, one's words must have power, and \nthis they can have only if they are based on something real, just as flame \ndepends on its fuel Words have influence only when they are pertinent and \nclearly related to definite circumstances. General discourses and admonitions \nhave no effect whatsoever. Furthermore, the words must be supported by \none's entire conduct, just as the wind is made effective by am impression on \nothers that they can adapt and conform to it. If words and conduct are not in \naccord and consistent, they will have no effect.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nFirm seclusion within the family.\nRemorse disappears.",
						"expl": "The family must form a well-defined unit within which each member knows his place. From the beginning each child must be accustomed to firmly established rules of order, before ever its will is directed to other things. If we begin too late to enforce order, when the will of the child has already been overindulged, the whims and passions, grown stronger with the years, offer resistance and give cause for remorse. If we insist on order from the outset, occasions for remorse may arise-in general social life these are unavoidable-but the remorse always disappears again, and everything rights itself. For there is nothing easily avoided and more difficult to carry through than \"breaking a child's will.\""
					},
					{
						"poem": "Six in the second place means:\nShe should not follow her whims.\nShe must attend within to the food.\nPerseverance brings good fortune.",
						"expl": "The wife must always be guided by the will of the master of the house, be he father, husband, or grown son. There, without having to look for them, she has great and important duties.  She must attend to the nourishment of her family and to the food for the sacrifice. IN this way she becomes the center of the social and religious life of the family, and her perseverance in this position brings good fortune to the whole house.   In relation to general conditions, the counsel here is to seek nothing by means of force, but quietly to confine oneself to the duties at hand."
					},
					{
						"poem": "Nine in the third place means:\nWhen tempers flare up in the family,\nToo great severity brings remorse.\nGood fortune nonetheless.\nWhen woman and chile dally and laugh\nIt leads in the end to humiliation.",
						"expl": "In the family the proper mean between severity and indulgence ought to prevail. Too great severity toward one's own flesh and blood leads to remorse. The wise thing is to build strong dikes within which complete freedom of movement is allowed each individual. But in doubtful instances too great severity, despite occasional mistakes, is preferable, because it preserves discipline in the family, whereas too great weakness leads to disgrace."
					},
					{
						"poem": "Six in the fourth place means:\nShe is the treasure of the house.\nGreat good fortune.",
						"expl": "It is upon the woman of the house that the well-being of the family depends. Well-being prevails when expenditures and income are soundly balanced. This leads to great good fortune. In the sphere of public life, this line refers to the faithful steward whose measures further the general welfare."
					},
					{
						"poem": "Nine in the fifth place means:\nAs a king he approaches his family.\nFear not.\nGood fortune.",
						"expl": "A king is the symbol of a fatherly man who is richly endowed in mind. He does nothing to make himself feared; on the contrary, the whole family can trust him, because love governs their intercourse. His character of itself exercises the right influence."
					}
				]
			}
		},
		{
			"number": 38,
			"name": "Kuei",
			"description": "Opposition",
			"trigrams": {
				"above": {
					"title": "li",
					"description": "THE CLINGING, FLAME"
				},
				"below": {
					"title": "tui",
					"description": "THE JOYOUS, LAKE"
				}
			},
			"interpretation": {
				"oracle": "\tOPPOSITION. In small matters, good fortune.",
				"resume": "\n\nThis hexagram is composed of the trigram Li above, i.e., flame, which burns \nupward, and Tui below, i.e., the lake, which seeps downward. These two \nmovements are indirect contrast. Furthermore, LI is the second daughter and \nTui the youngest daughter, and although they live in the same house they \nbelong to different men; hence their wills are not the same but are \ndivergently directed.\n\t",
				"judgment": "\n\nWhen people live in opposition and estrangement they cannot carry out a \ngreat undertaking in common; their points of view diverge too widely. In \nsuch circumstances one should above all not proceed brusquely, for that \nwould only increase the existing opposition; instead, one should limit oneself \nto producing gradual effects in small matters. Here success can still be \nexpected, because the situation is such that the opposition does not preclude \nall agreement.\n\n  In general, opposition appears as an obstruction, but when it represents \npolarity within a comprehensive whole, it has also its useful and important \nfunctions. The oppositions of heaven and earth, spirit and nature, man and \nwoman, when reconciled, bring about the creation and reproduction of life. \nIn the world of visible things, the principle of opposites makes possible the \ndifferentiation by categories through which order is brought into the world.\n\t",
				"image": {
					"oracle": "\tAbove, fire; below. The lake.\n\tThe image of OPPOSITION.\n\tThus amid all fellowship \n\tThe superior man retains his individuality.",
					"image": "\n\nThe two elements, fire and water, never mingle but even when in contact \nretain their own natures. So the sutured man is never led into baseness or \nvulgarity through intercourse or community of interests with persons of \nanother sort; regardless of all commingling, he will always preserve his \nindividuality.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nRemorse disappears.\nIf you lose your horse, do not run after it;\nIt will come back of its own accord.\nWhen you see evil people,\nGuard yourself against mistakes.",
						"expl": "Even in times when oppositions prevail, mistakes can be avoided, so that remorse disappears. When opposition begins to manifest itself, a man must not try to bring about unity by force, for by so doing he would only achieve the contrary, just as a horse goes farther and farther away if one runs after it. It it is one's won horse, one can safely let it go; it will come back of its own accord. So too when someone who belongs with us is momentarily estranged because of a misunderstanding, he will return of his own accord if we leave matters to him. One the other hand, it is well to be cautious when evil men who do not belong with us force themselves upon us, again as the result of a misunderstanding. Here the important thing is to avoid mistakes. We must not try to shake off these evil men by force; this would give rise to real hostility. We must simply endure them. They will eventually withdraw of their own accord."
					},
					{
						"poem": "Nine in the second place means:\nOne meets his lord in a narrow street.\nNo blame.",
						"expl": "As a result of misunderstandings, it has become impossible for people who by nature belong together to meet in the correct way. This being so, an accidental meeting under informal circumstances may serve the purpose, provided there is an inner affinity between them."
					},
					{
						"poem": "Six in the third place means:\nOne sees the wagon dragged back,\nThe oxen halted,\nA man's hair and nose cut off.\nNot a good beginning, but a good end.",
						"expl": "Often it seems tot a man as though everything were conspiring against him. He sees himself checked and hindered in his progress, insulted and dishonored. However, he must not let himself be misled; despite this opposition, he must cleave to the man with whom he knows he belongs. Thus, notwithstanding the bad beginning, the matter will end well."
					},
					{
						"poem": "Nine in the fourth place means:\nIsolated through opposition,\nOne meets a like-minded man\nWith whom one can associate in good faith.\nDespite the danger, no blame.",
						"expl": "If a man finds himself in a company of people from whom he is separated by an inner opposition, he becomes isolated. But if in such a situation a man meets someone who fundamentally by the very law of his being, is kin to him, and whom he can trust completely, he overcomes all the dangers of isolation. His will achieves its aim, and he becomes free of faults."
					},
					{
						"poem": "Six in the fifth place means:\nRemorse disappears.\nThe companion bits his way through the wrappings.\nIf one goes to him,\nHow could it be a mistake?",
						"expl": "Coming upon a sincere man, one fails to recognize him at first because of the general estrangement. However, he bites his way through the wrappings that are causing the separation. When such a companion thus reveals himself in his true character, it is one's duty to go to meet him and to work with him."
					}
				]
			}
		},
		{
			"number": 39,
			"name": "Chien",
			"description": "Obstruction",
			"trigrams": {
				"above": {
					"title": "kan",
					"description": "THE ABYSMAL, WATER"
				},
				"below": {
					"title": "kên",
					"description": "KEEPING STILL, MOUNTAIN"
				}
			},
			"interpretation": {
				"oracle": "\tOBSTRUCTION. The southwest furthers.\n\tThe northeast does not further.\n\tIt furthers one to see the great man.\n\tPerseverance brings good fortune.",
				"resume": "\n\nThe hexagram pictures a dangerous abyss lying before us and a steep, \ninaccessible mountain rising behind us. We are surrounded by obstacles; at \nthe same time, since the mountain has the attribute of keeping still, there is \nimplicit a hint as to how we can extricate ourselves. The hexagram represents \nobstructions that appear in the course of time but that can and should be \novercome. Therefore all the instruction given is directed to overcoming \nthem.\n\t",
				"judgment": "\n\nThe southwest is the region of retreat, the northeast that of advance. Here an \nindividual is confronted by obstacles that cannot be overcome directly. In \nsuch a situation it is wise to pause in view of the danger and to retreat. \nHowever, this is merely a preparation for overcoming the obstructions. One \nmust join forces with friends of like mind and put himself under the \nleadership of a man equal to the situation: then one will succeed in \nremoving the obstacles. This requires the will to persevere just when one \napparently must do something that leads away from his goal. This \nunswerving inner purpose brings good fortune in the end. An obstruction \nthat lasts only for a time is useful for self-development. This is the value of \nadversity. \n\t\n\t",
				"image": {
					"oracle": "\tWater on the mountain:\n\tThe image of OBSTRUCTION.\n\tThus the superior man turns his attention to himself\n\tAnd molds his character.",
					"image": "\n\nDifficulties and obstructions throw a man back upon himself. While the \ninferior man seeks to put the blame on other persons, bewailing his fate, the \nsuperior man seeks the error within himself, and through this introspection \nthe external obstacle becomes for him an occasion for inner enrichment and \neducation.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nGoing leads to obstructions,\nComing meets with praise.",
						"expl": "When one encounters an obstruction, the important thing is to reflect on how best to deal with it. When threatened with danger, one should not strive blindly to go ahead, for this only leads to complications. The correct thing is, on the contrary, to retreat for the time being, not in order to give up the struggle but to await the right moment for action."
					},
					{
						"poem": "Six in the second place means:\nThe King's servant is beset by obstruction upon obstruction,\nBut it is not his own fault.",
						"expl": "Ordinarily it is best to go around an obstacle and try to overcome it along the line of least resistance. But there is one instance in which a man must go out to meet the trouble, even though difficulty piles upon difficulty: this is when the path of duty leads directly to it-in other words, when he cannot act of his own volition but is duty bound to go and seek out danger in the service of a higher cause. Then he may do it without compunction, because it is not through any fault of his that he is putting himself in this difficult situation."
					},
					{
						"poem": "Nine in the third place means:\nGoing leads to obstructions;\nHence he comes back.",
						"expl": "While the preceding line shows the official compelled by duty to follow the way of danger, this line shows the man who must act as father of a family or as head of his kin. If he were to plunge recklessly in to danger, it would be a useless act, because those entrusted to his care cannot get along by themselves. But if he withdraws and turns back to his own, they welcome him with great joy."
					},
					{
						"poem": "Six in the fourth place means:\nGoing leads to obstructions,\nComing leads to union.",
						"expl": "This too describes a situation that cannot be managed single-handed. In such a case the direct way is not the shortest. If a person were to forge ahead on his own strength and without the necessary preparations, he would not find the support he needs and would realize too late that he has been mistaken in his calculations, inasmuch as the conditions on which he hoped he could rely would prove to be inadequate. In this case it is better, therefore, to hold back for the time being and to gather together trustworthy companions who can be counted upon for help in overcoming the obstructions."
					},
					{
						"poem": "Nine in the fifth place means:\nIn the midst of the greatest obstructions,\nFriends come.",
						"expl": "Here we see a man who is called to help in an emergency. He should not seek to evade the obstructions, no matter how dangerously they pile up before him. But because he is really called to the task, the power of his spirit is strong enough to attract helpers whom he can effectively organize, so that through the well-directed co-operation of all participants the obstruction is overcome."
					}
				]
			}
		},
		{
			"number": 40,
			"name": "Hsieh",
			"description": "Deliverance",
			"trigrams": {
				"above": {
					"title": "chên",
					"description": "THE AROUSING, THUNDER"
				},
				"below": {
					"title": "kan",
					"description": "THE ABYSMAL, WATER"
				}
			},
			"interpretation": {
				"oracle": "\tDELIVERANCE. The southwest furthers.\n\tIf there is no longer anything where one has to go,\n\tReturn brings good fortune.\n\tIf there is still something where one has to go,\n\tHastening brings good fortune.",
				"resume": "\n\nHere the movement goes out of the sphere of danger. The obstacle has been \nremoved, the difficulties are being resolved. Deliverance is not yet achieved; \nit is just in its beginning, and the hexagram represents its various stages.\n\t",
				"judgment": "\n\nThis refers to a time in which tensions and complications begin to be eased. \nAt such times we ought to make our way back to ordinary conditions as soon \nas possible; this is the meaning of \"the southwest.\" These periods of sudden \nchange have great importance. Just as rain relieves atmospheric tension, \nmaking all the buds burst open, so a time of deliverance from burdensome \npressure has a liberating and stimulating effect on life.  One thing is \nimportant, however: in such times we must not overdo our triumph. The \npoint is not to push on farther than is necessary. Returning to the regular \norder of life as soon as deliverance is achieved brings good fortune. If there \nare any residual matters that ought to be attended to, it should be done as \nquickly as possible, so that a clean sweep is made and no retardations occur.\n\t",
				"image": {
					"oracle": "\tThunder and rain set in:\n\tThe image of DELIVERANCE.\n\tThus the superior man pardons mistakes \n\tAnd forgives misdeeds.",
					"image": "\n\nA thunderstorm has the effect of clearing the air; the superior man produces \na similar effect when dealing with mistakes and sins of men that induce a \ncondition of tension. Through clarity he brings deliverance. However, when \nfailings come to light, he does not dwell on them; he simply passes over \nmistakes, the unintentional transgressions, just as thunder dies away. He \nforgives misdeeds, the intentional transgressions, just as water washes \neverything clean.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nWithout blame.",
						"expl": "In keeping with the situation, few words are needed. The hindrance is past, deliverance has come. One recuperates in peace and keeps still. This is the right thing to do in times when difficulties have been overcome."
					},
					{
						"poem": "Nine in the second place means:\nOne kills three foxes in the field\nAnd receives a yellow arrow.\nPerseverance brings good fortune.",
						"expl": "The image is taken from the hunt. The hunter catches three cunning foxes and receives a yellow arrow as a reward. The obstacles in public life are the designing foxes who try to influence the ruler through flattery. They must be removed before there can be any deliverance. But the struggle must not be carried on with the wrong weapons. The yellow color points to measure and mean in proceeding against the enemy; the arrow signifies the straight course. If one devotes himself wholeheartedly to the task of deliverance, he develops so much inner strength from his rectitude that it acts as a weapon against all that is false and low."
					},
					{
						"poem": "Six in the third place means:\nIf a man carries a burden on his back\nAnd nonetheless rides in a carriage,\nHe thereby encourages robbers to draw near.\nPerseverance leads to humiliation.",
						"expl": "This refers to a man who has come out of needy circumstances in to comfort and freedom from want. If now, in the manner of an upstart, he tries to take his ease in comfortable surroundings that do not suit his nature, he thereby attracts robbers. If he goes on thus he is sure to bring disgrace upon himself. Confucius says about this line:Carrying a burden on the back is the business of common man; a carriage is the appurtenance of a man of rank. Now, when a common man uses the appurtenance of man of rank, robbers plot to take it away from him. If a man is insolent toward those above him and hard toward those below him, robbers plot to attack him. Carelessness in guarding things tempts thieves to steal. Sumptuous ornaments worn by a maiden are an enticement to rob her of her virtue."
					},
					{
						"poem": "Nine in the fourth place means:\nDeliver yourself from your great toe.\nThen the companion comes,\nAnd him you can trust.",
						"expl": "In times of standstill it will happen that inferior people attach themselves to a superior man, and through force of daily habit they may grow very close to him and become indispensable, just as the big toe is indispensable to the foot because it makes walking easier. But when the time of deliverance draws near, with its call to deeds, a man must free himself from such chance acquaintances with whim he has no inner connection. For otherwise the friends who share his views, on whom he could really rely and together with whom he could accomplish something, mistrust him and stay away."
					},
					{
						"poem": "Six in the fifth place means:\nIf only the superior man can deliver himself,\nIt brings good fortune.\nThus he proves to inferior men that he is in earnest.",
						"expl": "Times of deliverance demand inner resolve. Inferior people cannot be driven off by prohibitions or any external means. If one desires to be rid of them, he must first break completely with them in his own mind; they will see for themselves that he is in earnest and will withdraw."
					}
				]
			}
		},
		{
			"number": 41,
			"name": "Sun",
			"description": "Decrease",
			"trigrams": {
				"above": {
					"title": "kên",
					"description": "KEEPING STILL, MOUNTAIN"
				},
				"below": {
					"title": "tui",
					"description": "THE JOYOUS, LAKE"
				}
			},
			"interpretation": {
				"oracle": "\tDECREASE combined with sincerity\n\tBrings about supreme good fortune\n\tWithout blame.\n\tOne may be persevering in this.\n\tIt furthers one to undertake something.\n\tHow is this to be carried out?\n\tOne may use two small bowls for the sacrifice.",
				"resume": "\n\nThis hexagram represents a decrease of the lower trigram in favor of the \nupper, because the third line, originally strong, has moved up to the top, and \nthe top line, originally weak, has replaced it. What is below is decreased to \nthe benefit of what is above. This is out-and-out decrease. If the foundations \nof a building are decreased in strength and the upper walls are strengthened, \nthe whole structure loves its stability. Likewise, a decrease in the prosperity of \nthe people in favor of the government is out-and-out decrease. And the \nentire theme of the hexagram is directed to showing how this shift of wealth \ncan take place without causing the sources of wealth can take place without \ncausing the sources of wealth in the nation and its lower classes to fail.\n\t",
				"judgment": "\n\nDecrease does not under all circumstances mean something bad. Increase \nand decrease come in their own time. What matters here is to understand \nthe time and not to try to cover up poverty with empty pretense. If a time of \nscanty resources brings out an inner truth, one must not feel ashamed of \nsimplicity. For simplicity is then the very thing needed to provide inner \nstrength for further undertakings. Indeed, there need by no concern if the \noutward beauty of the civilization, even the elaboration of religious forms, \nshould have to suffer because of simplicity. One must draw on the strength \nof the inner attitude to compensate for what is lacking in externals; then the \npower of the content makes up for the simplicity of form.  There is no need \nof presenting false appearances to God. Even with slender means, the \nsentiment of the heart can be expressed.\n\t",
				"image": {
					"oracle": "\tAt the foot of the mountain, the lake:\n\tThe image of DECREASE.\n\tThus the superior man controls his anger\n\tAnd restrains his instincts.",
					"image": "\n\nThe lake at the foot of the mountain evaporates. In this way it decreases to \nthe benefit of the mountain, which is enriched by its moisture. The \nmountain stands as the symbol of stubborn strength that can harden into \nanger. The lake is the symbol of unchecked gaiety that can develop into \npassionate drives at the expense of the life forces. Therefore decrease is \nnecessary; anger must be decreased by keeping still, the instincts must be \ncurbed by restriction. By this decrease of the lower powers of the psyche, the \nhigher aspects of the soul are enriched/\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nGoing quickly when one's tasks are finished\nIs without blame.\nBut one must reflect on how much one may decrease others.",
						"expl": "It is unselfish and good when a man, after completing his own urgent tasks, uses his strength in the service of others, and without bragging or making much of it, helps quickly where help is needed. But the man in a superior position who is thus aided must weigh carefully how much he can accept without doing the helpful servant or friend real harm. Only where such delicacy of feeling exists can one give oneself unconditionally and without hesitation."
					},
					{
						"poem": "Nine in the second place means:\nPerseverance furthers.\nTo undertake something brings misfortune.\nWithout decreasing oneself,\nOne is able to bring increase to others.",
						"expl": "A high-minded self-awareness and a consistent seriousness with no forfeit of dignity are necessary if a man wants to be of service to others. He who throw himself away in order to do the bidding of a superior diminishes his own position without thereby giving lasting benefit to the other. This is wrong. To render true service of lasting value to another, one must serve him without relinquishing oneself."
					},
					{
						"poem": "°Six in the third place means:\nWhen three people journey together,\nTheir number increases by one.\nWhen one man journeys alone,\nHe finds a companion.",
						"expl": "When there are three people together, jealousy arises. One of them will have to go. Avery close bond is possible only between two people. But when one man is lonely, he is certain to find a companion who complements him."
					},
					{
						"poem": "Six in the fourth place means:\nIf a man deceases his faults,\nIt makes the other hasten to come and rejoice.\nNo blame.",
						"expl": "A man's faults often prevent even well-disposed people from coming closer to him. His faults are sometimes reinforced by the environment in which he lives. But if in humility he can bring himself to the point of giving them up, he frees his well-disposed friends from an inner pressure and causes them to approach the more quickly, and there is mutual joy."
					},
					{
						"poem": "Six in the fifth place means:\nSomeone does indeed increase him.\nTen pairs of tortoises cannot oppose it.\nSupreme good fortune.",
						"expl": "\tIf someone is marked out by fate for good fortune, it comes without fail. All oracles-as for instance those that are read from the shells of tortoises-are bound to concur in giving him favorable signs. He need fear nothing, because his luck is ordained from on high."
					}
				]
			}
		},
		{
			"number": 42,
			"name": "I",
			"description": "Increase",
			"trigrams": {
				"above": {
					"title": "sun",
					"description": "THE GENTLE, WIND"
				},
				"below": {
					"title": "chên",
					"description": "THE AROUSING, THUNDER"
				}
			},
			"interpretation": {
				"oracle": "\n\n\t\n\tINCREASE. It furthers one\n\tTo undertake something.\n\tIt furthers one to cross the great water.",
				"resume": "\n\nThe idea of increase is expressed in the fact that the strong lowest line of the \nupper trigram has sunk down and taken its place under the lower trigram. \nThis conception also expresses the fundamental idea on which the Book of \nChanges is based. To rule truly is to serve.\n\n  A sacrifice of the higher element that produces an increase of the lower is \ncalled an out-and-out increase: it indicates the spirit that alone has power to \nhelp the world.\n\t",
				"judgment": "\n\nSacrifice on the part of those above for the increase of those below fills the \npeople with a sense of joy and gratitude that is extremely valuable for the \nflowering of the commonwealth. When people are thus devoted to their \nleaders, undertakings are possible, and even difficult and dangerous \nenterprises will succeed. Therefore in such times of progress and successful \ndevelopment it is necessary to work and make the best use of time. This time \nresembles that of the marriage of heaven and earth, when the earth partakes \nof the creative power of heaven, forming and bringing forth living beings. \nThe time of INCREASE does not endure, therefore it must be utilized while it \nlasts.\n\t",
				"image": {
					"oracle": "\tWind and thunder: the image of INCREASE.\n\tThus the superior man:\n\tIf he sees good, he imitates it;\n\tIf he has faults, he rids himself of them.",
					"image": "\n\nWhile observing how thunder and wind increase and strengthen each other, \na man can not the way to self-increase and self-improvement. When he \ndiscovers good in others, he should imitate it and thus make everything on \nearth his own. If he perceives something bad in himself, let him rid himself \nof it. In this way he becomes free of evil. This ethical change represents the \nmost important increase of personality.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nIt furthers one to accomplish great deeds.\nSupreme good fortune. No blame.",
						"expl": "If great help comes to a man from on high, this increased strength must be used to achieve something great for which he might otherwise never have found energy, or readiness to take responsibility. Great good fortune is produced by selflessness, and in bringing about great good fortune, he remains free of reproach."
					},
					{
						"poem": "Six in the second place means:\nSomeone does indeed increase him; \nTen pairs of tortoises cannot oppose it.\nConstant perseverance brings good fortune.\nThe king presents him before God.\nGood fortune.",
						"expl": "A man brings about real increase by producing in himself the conditions for it, that it, through receptivity to and love of the good. Thus the thing for which he strives comes of itself, with the inevitability of natural law. Where increase is thus in harmony with the highest laws of the universe, it cannot be prevented by any constellation of accidents. But everything depends on his not letting unexpected good fortune make him heedless; he must make it his own through inner strength an steadfastness. Then he acquires meaning before God and man, and can accomplish something for the good of the world."
					},
					{
						"poem": "Six in the third place means:\nOne is enriched through unfortunate events.\nNo blame, if you are sincere\nAnd walk in the middle,\nAnd report with a seal to the prince.",
						"expl": "A time of blessing and enrichment has such powerful effects that even events ordinarily unfortunate must turn out to the advantage of those affected by them. These persons become free of error, and by acting in harmony with truth they gain such inner authority that they exert influence as if sanctioned by the letter and seal."
					},
					{
						"poem": "Six in the fourth place means:\nIf you walk in the middle \nAnd report the prince,\nHe will follow.\nIt furthers one to be used\nIn the removal of the capital.",
						"expl": "It is important that there should be men who mediate between leaders and followers. These should be disinterested people, especially in times of increase, since the benefit is to spread from the leader to the people. Nothing of this benefit should be held back in a selfish way; it should really reach those for whom it is intended. This sort of intermediary, who also exercises a good influence on the leader, is especially important in times when it is a matter of great undertakings, decisive for the future and requiring the inner assent of all concerned."
					},
					{
						"poem": "Nine in the fifth place means:\nIf in truth you have a kind heart, ask not.\nSupreme good fortune.\nTruly, kindness will be recognized as your virtue. ",
						"expl": "True kindness does not count upon nor ask about merit and gratitude but acts from inner necessity. And such a truly kind heart finds itself rewarded in being recognized, and thus the beneficent influence will spread unhindered."
					}
				]
			}
		},
		{
			"number": 43,
			"name": "Kuai",
			"description": "Break-through (Resoluteness)",
			"trigrams": {
				"above": {
					"title": "tui",
					"description": "THE JOYOUS, LAKE"
				},
				"below": {
					"title": "chien",
					"description": "THE CREATIVE, HEAVEN"
				}
			},
			"interpretation": {
				"oracle": "\tBREAK-THROUGH. One must resolutely make the matter known\n\tAt the court of the king.\n\tIt must be announced truthfully. Danger.\n\tIt is necessary to notify one's own city.\n\tIt does not further to resort to arms.\n\tIt furthers one to undertake something.",
				"resume": "\n\nThis hexagram signifies on the one hand a break-through after a long \naccumulation of tension, as a swollen river breaks through its dikes, or in the \nmanner of a cloudburst. On the other hand, applied to human conditions, it \nrefers to the time when inferior people gradually begin to disappear. Their \ninfluence is on the wane; as a result of resolute action, a change in conditions \noccurs, a break-through. The hexagram is linked with the third month \n[April-May].\n\t",
				"judgment": "\n\nEven if only one inferior man is occupying a ruling position in a city, he is \nable to oppress superior men. Even a single passion still lurking in the heart \nhas power to obscure reason. Passion and reason cannot exist side by side-\ntherefore fight without quarter is necessary if the good is to prevail.\n\n  In a resolute struggle of the good against evil, there are, however, definite \nrules that must not be disregarded, if it is to succeed. First, resolution must be \nbased on a union of strength and friendliness. Second, a compromise with \nevil is not possible; evil must under all circumstances be openly discredited. \nNor must our own passions and shortcomings be glossed over. Third, the \nstruggle must not be carried on directly by force. If evil is branded, it thinks of \nweapons, and if we do it the favor of fighting against it blow for blow, we lose \nin the end because thus we ourselves get entangled in hatred and passion. \nTherefore it is important to begin at home, to be on guard in our own persons \nagainst the faults we have branded. In this way, finding no opponent, the \nsharp edges of the weapons of evil becomes dulled. For the same reasons we \nshould not combat our own faults directly. As long as we wrestle with them, \nthey continue victorious. Finally, the best way to fight evil is to make \nenergetic progress in the good.\n\t",
				"image": {
					"oracle": "\t\n\n\tThe lake has risen up to heaven:\n\tThe image of BREAK-THROUGH.\n\tThus the superior man\n\tDispenses riches downward\n\tAnd refrains from resting on his virtue.",
					"image": "\n\nWhen the water of a lake has risen up to heaven, there is reason to fear a \ncloudburst. Taking this as a warning, the superior man forestalls a violent \ncollapse. If a man were to pile up riches for himself alone, without \nconsidering others, he would certainly experience a collapse. If a man were to \npile up riches for himself alone, without considering others, he would \ncertainly experience a collapse. For all gathering is followed by dispersion. \nTherefore the superior man begins to distribute while he is accumulating. In \nthe same way, in developing his character he takes care not to become \nhardened in obstinacy but to remain receptive to impressions by help of strict \nand continuous self-examination.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nMighty in the forward-striding toes.\nWhen one goes and is not equal to the task,\nOne makes a mistake.",
						"expl": "In times of resolute advance, the beginning is especially difficult. We feel inspired to press forward but resistance is still strong; therefore we ought to gauge our own strength and venture only so far as we can go with certainty of success. To plunge blindly ahead is wrong, because it is precisely at the beginning that an unexpected setback can have the most disastrous results."
					},
					{
						"poem": "Nine in the second place means:\nA cry of alarm. Arms at evening and at night.\nFear nothing.",
						"expl": "Readiness is everything. Resolution is indissolubly bound up with caution. If an individual is careful and keeps his wits about him, he need not become excited or alarmed. If he is watchful at all times, even before danger is present, he is armed when danger approaches and need not be afraid. The superior man is on his guard against what is not yet in sight and on the alert for what is not yet within hearing; therefore he dwells in the midst of difficulties as thought hey did not exist. If a man develops his character, people submit to him of their own accord. If reason triumphs, the passions withdraw of themselves. To be circumspect and not to forget one's armor is the right way to security."
					},
					{
						"poem": "Nine in the third place means:\nTo be powerful in the cheekbones \nBrings misfortune.\nThe superior man is firmly resolved.\nHe walks alone and is caught in the rain.\nHe is bespattered,\nAnd people murmur against him.\nNo blame.",
						"expl": "Here we have a man in an ambiguous situation. While all others are engaged in a resolute fight against all that is inferior, he alone has a certain relationship with an inferior man. If he were to show strength outwardly and turn against this man before the time is ripe, he would only endanger the entire situation, because the inferior man would too quickly have recourse to countermeasures. The task of the superior man becomes extremely difficult here. He must be firmly resolved within himself and, while maintaining association with the inferior man, avoid any participation in his evilness. He will of course be misjudged. It will be thought that he belong to the party of the inferior man. He will be lonely because no one will understand him. His relations with the inferior man will sully him in the eyes of the multitude, and they will turn against him, grumbling. But he can endure this lack of appreciation and makes no mistake, because he remains true to himself."
					},
					{
						"poem": "Nine in the fourth place means:\nThere is no skin on his thighs,\nAnd walking comes hard.\nIf a man were to let himself be led like a sheep,\nRemorse would disappear.\nBut if these words are heard\nThey will not be believed.",
						"expl": "Here a man is suffering from inner restlessness and cannot abide in his place. He would like to push forward under any circumstances, but encounters insuperable obstacles. Thus his situation entails an inner conflict. This is due to the obstinacy with which he seeks to enforce his will.  If he would desist from this obstinacy, everything would go well. But this advice, like so much other good counsel, will be ignored. For obstinacy makes a man unable to hear, for all that he has ears."
					},
					{
						"poem": "Nine in the fifth place means:\nIn dealing with weeds,\nFirm resolution is necessary.\nWalking in the middle\nRemains free of blame.",
						"expl": "Weeds always grow back again and are difficult to exterminate. So too the struggle against an inferior man in a high position demands firm resolution. One has certain relations with him, hence there is danger that one may give up the struggle as hopeless. But this must not be. One must go on resolutely and not allow himself to be deflected from him course. Only in this way does one remain free of blame."
					}
				]
			}
		},
		{
			"number": 44,
			"name": "Kou",
			"description": "Coming to Meet",
			"trigrams": {
				"above": {
					"title": "chien",
					"description": "THE CREATIVE, HEAVEN"
				},
				"below": {
					"title": "sun",
					"description": "THE GENTLE, WIND"
				}
			},
			"interpretation": {
				"oracle": "\tCOMING TO MEET. The maiden is powerful.\n\tOne should not marry such a maiden.",
				"resume": "\n\nThis hexagram indicates a situation in which the principle of darkness, after \nhaving been eliminated, furtively and unexpectedly obtrudes again from \nwithin and below. Of its own accord the female principle comes to meet the \nmale. It is an unfavorable and dangerous situation, and we must understand \nand promptly prevent the possible consequences.\n\n  The hexagram is linked with the fifth month [June-July], because at the \nsummer solstice the principle of darkness gradually becomes ascendant again. \n\n\t",
				"judgment": "\n\nThe rise of the inferior element is pictured here in the image of a bold girl \nwho lightly surrenders herself and thus seizes power. This would not be \npossible if the strong and light-giving element had not in turn come halfway. \nThe inferior thing seems so harmless and inviting that a man delights in it; it \nlooks so small and weak that he imagines he may dally with it and come to \nno harm.\n\n  The inferior man rises only because the superior man does not regard him \nas dangerous and so lends him power. If he were resisted from the fist, he \ncould never gain influence.\n\n  The time of COMING TO MEET is important in still another way. \nAlthough as a general rule the weak should not come to meet the strong, \nthere are times when this has great significance. When heaven and earth \ncome to meet each other, all creatures prosper; when a prince and his official \ncome to meet each other, the world is put in order. It is necessary for \nelements predestined to be joined and mutually dependent to come to meet \none another halfway. But the coming together must be free of dishonest \nulterior motives, otherwise harm will result.\n\t",
				"image": {
					"oracle": "\tUnder heaven, wind:\n\tThe image of COMING TO MEET.\n\tThus does the prince act when disseminating his commands\n\tAnd proclaiming them to the four quarters of heaven.",
					"image": "\n\nThe situation here resembles that in hexagram 20, Kuan, CONTEMPLATION \n( VIEW). In the latter the wind blows over the earth, here it blows under \nheaven; in both cases it goes everywhere. There the wind is on the earth and \nsymbolizes the ruler taking note of the conditions in his kingdom; here the \nwind blows from above and symbolizes the influence exercised by the ruler \nthrough his commands. Heaven is far from the things of earth, but it sets \nthem in motion by means of the wind. The ruler is far form his people, but \nhe sets them in motion by means of his commands and decrees.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nIt must be checked with a brake of bronze.\nPerseverance brings good fortune.\nIf one lets it take its course, one experiences misfortune.\nEven a lean pig has it in him to rage around.",
						"expl": "If an inferior element has wormed its way in, it must be energetically checked at once. By consistently checking it, bad effects can be avoided. If it is allowed to take its course, misfortune is bound to result; the insignificance of that which creeps in should not be a temptation to underrate it. A pig that is still young and lean cannot rage around much, but after it has eaten its fill and become strong, its true nature comes out if it has not previously been curbed."
					},
					{
						"poem": "Nine in the second place means:\nThere is a fish in the tank. No blame.\nDoes not further guests.",
						"expl": "The inferior element is not overcome by violence but is kept under gentle control. Then nothing evil is to be feared. But care must be taken not to let it come in contact with those further away, because once free it would unfold its evil aspects unchecked."
					},
					{
						"poem": "Nine in the third place means: \n There is no skin on his thighs,\nAnd walking comes hard.\nIf one is mindful of the danger,\nNo great mistake is made.",
						"expl": "There is a temptation to fall in with the evil element offering itself-a very dangerous situation. Fortunately circumstances prevent this; one would like to do it, but cannot. This leads to painful indecision in behavior. But if we gain clear insight into the danger of the situation, we shall at least avoid more serious mistakes."
					},
					{
						"poem": "Nine in the fourth place means:\nNo fish in the tank.\nThis leads to misfortune.",
						"expl": "Insignificant people must be tolerated in order to keep them well disposed. Then we can make use of them if we should need them. If we become alienated from them and do not meet them halfway, they turn their backs on us and are not at our disposal when we need them. But this is our own fault."
					},
					{
						"poem": "Nine in the fifth place means:\nA melon covered with willow leaves.\nHidden lines.\nThen it drops down to one from heave.",
						"expl": "The melon, like the fish, is a symbol of the principle of darkness. It is sweet but spoils easily and for this reason is protected with a cover of willow leaves. This is a situation in which a strong, superior, well-poised man tolerates and protects the inferiors in his charge.  He has the firm lines of order an beauty within himself but he does not lay stress upon them. He does not bother his subordinates with outward show or tiresome admonitions but leaves them quite free, putting his trust in the transforming power of a strong and upright personality. And behold! Fate is favorable. His inferiors respond to his influence and fall to his disposition like ripe fruit."
					}
				]
			}
		},
		{
			"number": 45,
			"name": "Tsui",
			"description": "Gathering Together [Massing]",
			"trigrams": {
				"above": {
					"title": "tui",
					"description": "THE JOYOUS, LAKE"
				},
				"below": {
					"title": "kun",
					"description": "THE RECEPTIVE, EARTH"
				}
			},
			"interpretation": {
				"oracle": "\tGATHERING TOGETHER. Success.\n\tThe king approaches his temple.\n\tIt furthers one to see the great man.\n\tThis brings success. Perseverance furthers.\n\tTo bring great offerings creates good fortune.\n\tIt furthers one to undertake something.",
				"resume": "\n\nThis hexagram is related in form and meaning to Pi, HOLDING TOGETHER (8). \nIn the latter, water is over the earth; here a lake is over the earth. But \nsince the lake is a place where water collects, the idea of gathering together is \neven more strongly expressed here than in the other hexagram. The same \nidea also arises from the fact that in the present case it is two strong lines (the \nfourth and the fifth) that bring about the gather together, whereas in the \nformer case one strong line (the fifth) stands in the midst of weak lines.\n\t",
				"judgment": "\n\nThe gathering together of people in large communities is either a natural \noccurrence, as in the case of the family, or an artificial one, as in the case of \nthe state. The family gathers about the father as its head. The perpetuation of \nthis gathering in groups is achieved through the sacrifice to the ancestors, at \nwhich the whole clan is gathered together. Through the collective piety of \nthe living members of the family, the ancestors become so integrated in the \nspiritual life of the family that it cannot be dispersed or dissolved.\n\n  Where men are to be gathered together, religious forces are needed. But \nthere must also be a human leader to serve as the center of the group. In \norder to be able to bring others together, this leader must first of all be \ncollected within himself. Only collective moral force can unite the world. \nSuch great times of unification will leave great achievements behind them. \nThis is the significance of the great offerings that are made. In the secular \nsphere likewise there is no need of great deeds in the time of GATHERING \nTOGETHER.\n\t",
				"image": {
					"oracle": "\tOver the earth, the lake:\n\tThe image of GATHERING TOGETHER.\n\tThus the superior man renews his weapons\n\tIn order to meet the unforeseen.",
					"image": "\n\nIf the water in the lake gathers until it rises above the earth, there is danger of \na break-through. Precautions must be taken to prevent this. Similarly where \nmen gather together in great numbers, strife is likely to arise; where \npossessions are collected, robbery is likely to occur. Thus in the time of \nGATHERING TOGETHER we must arm promptly to ward off the unexpected. \nHuman woes usually come as a result of unexpected events against which we \nare not forearmed. If we are prepared, they can be prevented.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nIf you are sincere, but not to the end,\nThere will sometimes be confusion, sometimes gathering together.\nIf you call out, \nThen after one grasp of the hand you can laugh again.\nRegret not. Going is without blame.",
						"expl": "The situation is this:  People desire to gather around a leader to whom they look up. But they are in a large group, by which they allow themselves to be influenced, so that they waver in their decision. Thus they lack a firm center around which to gather. But if expression is given to this need, and if they call for help, one grasp of the hand from the leader is enough to turn away all distress. Therefore they must not allow themselves to be led astray. It is undoubtedly right that they should attach themselves to this leader."
					},
					{
						"poem": "Six in the second place means:\nLetting oneself be drawn\nBrings good fortune and remains blameless.\nIf one is sincere,\nIt furthers one to bring even a small offering.",
						"expl": "In the time of GATHERING TOGETHER, we should make no arbitrary choice of the way. There are secret forces at work, leading together those who belong together. We must yield to this attraction; then we make no mistakes. Where inner relationships exist, no great preparations and formalities are necessary. People understand one another forthwith, just as the Divinity graciously accepts a small offering if it comes from the heart."
					},
					{
						"poem": "Six in the third place means:\nGathering together amid sighs.\nNothing that would further.\nGoing is without blame.\nSlight humiliation.",
						"expl": "Often a man feels an urge to unite with others, but the individuals around him have already formed themselves into a group, so that he remains isolated. The whole situation proves untenable. Then he ought to choose the way of progress, resolutely allying himself with a man who stands nearer to the center of the group, and can help him to gain admission to the closed circle. This is not a mistake, even though at first his position as an outsider is somewhat humiliating."
					},
					{
						"poem": "Nine in the fourth place means:\nGreat good fortune. No blame.",
						"expl": "This describes a man who gathers people around him in the name of his ruler. Since he is not striving for any special advantages for himself but is working unselfishly to bring about general unity, his work is crowned with success, and everything becomes as it should be."
					},
					{
						"poem": "Nine in the fifth place means:\nIf in gathering together one has position,\nThis brings no blame.\nIf there are some who are not yet sincerely in the work,\nSublime and enduring perseverance is needed.\nThen remorse disappears.",
						"expl": "When people spontaneously gather around a man, it is only a good. It gives him a certain influence that can be altogether useful.. But of course there is also the possibility that many may gather around him not because of a feeling of confidence but merely because of his influential position. This is certainly to be regretted. The only means of dealing with such people is to gain their confidence through steadfastness an intensified, unswerving devotion to duty. In this way secret mistrust will gradually be overcome, and there will be no occasion for regret."
					}
				]
			}
		},
		{
			"number": 46,
			"name": "Shêng",
			"description": "Pushing Upward",
			"trigrams": {
				"above": {
					"title": "kun",
					"description": "THE RECEPTIVE, EARTH"
				},
				"below": {
					"title": "sun",
					"description": "THE GENTLE, WIND, WOOD"
				}
			},
			"interpretation": {
				"oracle": "\tPUSHING UPWARD has supreme success.\n\tOne must see the great man.\n\tFear not.\n\tDeparture toward the south\n\tBrings good fortune.",
				"resume": "\n\nThe lower trigram, Sun, represents wood, and the upper, K'un, means the \nearth. Linked with this is the idea that wood in the earth grows upward. In \ncontrast to the meaning of Chin, PROGRESS (35), this pushing upward is \nassociated with effort, just as a plant needs energy for pushing upward \nthrough the earth. That is why this hexagram, although it is connected with \nsuccess, is associated with effort of the will. In PROGRESS the emphasis is on \nexpansion; PUSHING UPWARD indicates rather a vertical ascent-direct rise \nfrom obscurity and lowliness to power and influence.\n\t",
				"judgment": "\n\nThe pushing upward of the good elements encounters no obstruction and is \ntherefore accompanied by great success. The pushing upward is made \npossible not by violence but by modesty and adaptability. Since the individual \nis borne along by the propitiousness of the time, he advances.  He must go to \nsee authoritative people. He need not be afraid to do this, because success is \nassured. But he must set to work, for activity (this is the meaning of \"the \nsouth\") brings good fortune.\n\t",
				"image": {
					"oracle": "\tWithin the earth, wood grows:\n\tThe image of PUSHING UPWARD.\n\tThus the superior man of devoted character\n\tHeaps up small things\n\tIn order to achieve something high and great.",
					"image": "\n\nAdapting itself to obstacles and bending around them, wood in the earth \ngrows upward without haste and without rest. Thus too the superior man is \ndevoted in character and never pauses in his progress.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nPushing upward that meets with confidence\nBrings great good fortune.",
						"expl": "This situation at the beginning of ascent. Just as wood draws strength for its upward push from the root, which in itself is in the lowest place, so the power to rise comes from this low and obscure station. But there is a spiritual affinity with the rulers above, and this solidarity creates the confidence needed to accomplish something."
					},
					{
						"poem": "Nine in the second place means:\nIf one is sincere,\nIt furthers one to bring even a small offering.\nNo blame.",
						"expl": "Here a strong man is presupposed. It is true that he does not fit in with his environment, inasmuch as he is too brusque and pays too little attention to form. But as he is upright in character, he meets with response, and his lack of outward form does no harm. Here uprightness is the outcome of sound qualities of character, whereas in the corresponding line of the preceding hexagram it is the result of innate humility."
					},
					{
						"poem": "Nine in the third place means:\nOne pushes upward into an empty city.",
						"expl": "\tAll obstructions that generally block progress fall away here. Things proceed with remarkable ease. Unhesitatingly one follows this road, in order to profit by one's success. Seen from without, everything seems to be in the best of order. However, no promise of good fortune is added.  It is a question how long such unobstructed success can last. But it is wise not to yield to such misgivings, because they only inhibit one's power. Instead, the point is to profit by the propitiousness of time."
					},
					{
						"poem": "Six in the fourth place means:\nThe king offers him Mount Ch'i.\nGood fortune. No blame.",
						"expl": "Mount Ch'i is in the western China, the homeland of King Wên, whose son, the Duke of Chou, added the words to the individual lines. The pronouncement takes us back to a time when the Chou dynasty was coming into power. At that time King Wên introduced his illustrious helpers to the god of his native mountain, and they received their places in the halls of the ancestors by the side of the ruler. This indicates a stage in which pushing upward attains its goal. One acquires fame in the sight of gods and men, is received into the circle of those who foster the spiritual life of the nation, and thereby attains a significance that endures beyond time."
					},
					{
						"poem": "Six in the fifth place means:\nPerseverance brings good fortune.\nOne pushes upward by steps.",
						"expl": "When a man is advancing farther and farther, it is important for him not to become intoxicated by success. Precisely when he experiences great success it is necessary to remain sober and not to try to skip any stages; he must go on slowly, step by step, as though hesitant. Only such calm, steady progress, overleaping nothing, leads to the goal."
					}
				]
			}
		},
		{
			"number": 47,
			"name": "Kun",
			"description": "Oppression (Exhaustion)",
			"trigrams": {
				"above": {
					"title": "tui",
					"description": "THE JOYOUS, LAKE"
				},
				"below": {
					"title": "kan",
					"description": "THE ABYSMAL, WATER"
				}
			},
			"interpretation": {
				"oracle": "\tOPPRESSION. Success. Perseverance.\n\tThe great man brings about good fortune.\n\tNo blame.\n\tWhen one has something to say,\n\tIt is not believed.",
				"resume": "\n\nThe lake is above, water below; the lake is empty, dried up. Exhaustion is \nexpressed in yet another way: at the top, a dark line is holding down two light \nlines below, a light line is hemmed in between two dark ones. The upper \ntrigram belongs to the principle of darkness, the lower to the principle of \nlight. Thus everywhere superior men are oppressed and held in restraint by \ninferior men.\n\t",
				"judgment": "\n\nTimes of adversity are the reverse of times of success, but they can lead to \nsuccess if they befall the right man. When a strong man meets with \nadversity, he remains cheerful despite all danger, and this cheerfulness is the \nsource of later successes; it is that stability which is stronger than fate. He who \nlets his spirit be broken by exhaustion certainly has no success. But if \nadversity only bends a man, it creates in him a power to react that is bound in \ntime to manifest itself. No inferior man is capable of this. Only the great \nman brings about good fortune and remains blameless. It is true that for the \ntime being outward influence is denied him, because his words have no \neffect. Therefore in times of adversity it is important to be strong within and \nsparing of words.\n\t",
				"image": {
					"oracle": "\tThere is not water in the lake:\n\tThe image of EXHAUSTION.\n\tThus the superior man stakes his life\n\tOn following his will.",
					"image": "\n\nWhen the water has flowed out below, the lake must dry up and become \nexhausted. That is fate. This symbolizes an adverse fate in human life. In \nsuch times there is nothing a man can do but acquiesce in his fate and remain \ntrue to himself. This concerns the deepest stratum of his being, for this alone \nis superior to all external fate.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nOne sits oppressed under a bare tree\nAnd strays into a gloomy valley.\nFor three years one sees nothing.",
						"expl": "When adversity befalls a man, it is important above all things for him to be strong and to overcome the trouble inwardly. If he is weak, the trouble overwhelms him. Instead of proceeding on his way, he remains sitting under a bare tree and falls ever more deeply into gloom and melancholy. This makes the situation only more and more hopeless. Such an attitude comes from an inner delusion that he must by all means overcome."
					},
					{
						"poem": "Nine in the second place means:\nOne is oppressed while at meat and drink.\nThe man with the scarlet knee bands is just coming.\nIt furthers one to offer sacrifice.\nTo set forth brings misfortune.\nNo blame.",
						"expl": "This pictures a state of inner oppression. Externally, all is well, one has meat and drink. But one is exhausted by the commonplaces of life, and there seems to be no way of escape. Then help comes from a high place. A prince-in ancient China princes wore scarlet knee bands- is in search of able helpers. But there are still obstructions to be overcome. Therefore it is important to meet these obstructions in the visible realm by offerings and prayer. To set forth without being prepared would be disastrous, though not morally wrong. Here a disagreeable situation must be overcome by patience of spirit."
					},
					{
						"poem": "Six in the third place means:\nA man permits himself to be oppressed by stone,\nAnd leans on thorns and thistles.\nHe enters the house and does not see his wife.\nMisfortune.",
						"expl": "This shows a man who is restless and indecisive in times of adversity. At first he wants to push ahead, then he encounters obstructions that, it is true, mean oppression only when recklessly dealt with. He butts his head against a wall and in consequence feels himself oppressed by the wall. Then he leans on things that have in themselves no stability and that are merely a hazard for him who leans on them.  Thereupon he turns back irresolutely and retires into his house, only to find, as a fresh disappointment, that his wife is not there. Confucius says about this line: If a man permits himself to be oppressed by something that ought not to oppress him, his name will certainly be disgraced. If he leans on things upon which one cannot lean, his life will certainly be endangered. For him who is in disgrace and danger, the hour of death draws near; how can he then still see his wife?"
					},
					{
						"poem": "Nine in the fourth place means:\nHe comes very quietly, oppressed in a golden carriage.\nHumiliation, but the end is reached.",
						"expl": "A well-to-do man sees the need of the lower classes and would like very much to be of help. But instead of proceeding with speed and energy where their is need, he begins in a hesitant and measured way. Then he encounters obstructions. Powerful and wealthy acquaintances draw him into their circle; he has to do as they do and cannot withdraw from them. Hence he finds himself in great embarrassment. But the trouble is transitory. The original strength of his nature offsets the mistake he has made, and the goal is reached."
					},
					{
						"poem": "Nine in the fifth place means:\nHis nose and feet are cut off.\nOppression at the hands of the man with the purple knee bands.\nJoy comes softly.\nIt furthers one to make offerings and libations.",
						"expl": "An individual who has the good of mankind at heart is oppressed from above and below (this is the meaning of the cutting off of nose an defeat). He finds no help among the people whose duty it would be to aid in the work of rescue (ministers wore purple knee bands). But little by little, things take a turn for the better. Until that time, he should turn to God, firm in his inner composure, and pray and offer sacrifice for the general well-being."
					}
				]
			}
		},
		{
			"number": 48,
			"name": "Ching",
			"description": "The Well",
			"trigrams": {
				"above": {
					"title": "kan",
					"description": "THE ABYSMAL, WATER"
				},
				"below": {
					"title": "sun",
					"description": "THE GENTLE, WIND, WOOD"
				}
			},
			"interpretation": {
				"oracle": "\tTHE WELL. The town may be changed,\n\tBut the well cannot be changed.\n\tIt neither decreases nor increases.\n\tThey come and go and draw from the well.\n\tIf one gets down almost to the water\n\tAnd the rope does not go all the way,\n\tOr the jug breaks, it brings misfortune.",
				"resume": "\n\nWood is below, water above. The wood goes down into the earth to bring up \nwater. The image derives from the pole-and-bucket well of ancient China. \nThe wood represents not the buckets, which in ancient times were made of \nclay, but rather the wooden poles by which the water is hauled up from the \nwell. The image also refers to the world of plants, which lift water out of the \nearth by means of their fibers.\n\n  The well from which water is drawn conveys the further idea of an \ninexhaustible dispensing of nourishment.\n\t",
				"judgment": "\n\nIn ancient China the capital cities were sometimes moved, partly for the sake \nof more favorable location, partly because of a change in dynasties. The style \nof architecture changed in the course of centuries, but the shape of the well \nhas remained the same from ancient times to this day. Thus the well is the \nsymbol of that social structure which, evolved by mankind in meeting its \nmost primitive needs, is independent of all political forms. Political \nstructures change, as do nations, but the life of man with its needs remains \neternally the same-this cannot be changed. Life is also inexhaustible. It grows \nneither less not more; it exists for one and for all. The generations come and \ngo, and all enjoy life in its inexhaustible abundance.\n\n  However, there are two prerequisites for a satisfactory political or social \norganization of mankind. We must go down to the very foundations of life. \nFor any merely superficial ordering of life that leaves its deepest needs \nunsatisfied is as ineffectual as if no attempt at order had ever been made. \nCarelessness-by which the jug is broken-is also disastrous. If for instance the \nmilitary defense of a state is carried to such excess that it provokes wars by \nwhich the power of the state is annihilated, this is a breaking of the jug.\n\n  This hexagram applies also to the individual. However men may differ in \ndisposition and in education, the foundations of human nature are the same \nin everyone. And every human being can draw in the course of his \neducation from the inexhaustible wellspring of the divine in man's nature. \nBut here likewise two dangers threaten: a man may fail in his education to \npenetrate to the real roots of humanity and remain fixed in convention-a \npartial education of this sort is as bad as none- or he may suddenly collapse \nand neglect his self-development.\n\t",
				"image": {
					"oracle": "\tWater over wood: the image of THE WELL.\n\tThus the superior man encourages the people at their work,\n\tAnd exhorts them to help one another.",
					"image": "\n\nThe trigram Sun, wood, is below, and the trigram K'an, water, is above it. \nWood sucks water upward. Just as wood as an organism imitates the action \nof the well, which benefits all parts of the plant, the superior man organizes \nhuman society, so that, as in a plant organism, its parts co-operate for the \nbenefit of the whole.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nOne does not drink the mud of the well.\nNo animals come to an old well.",
						"expl": "If a man wanders around in swampy lowlands, his life is submerged in mud. Such a man loses all significance for mankind. He who throws himself away is no longer sought out by others. In the end no one troubles about him any more."
					},
					{
						"poem": "Nine in the second place means:\nAt the well hole one shoots fishes.\nThe jug is broken and leaks.",
						"expl": "The water itself is clear, but it is not being used. Thus the well is a place where only fish will stay, and whoever comes to it, comes only to catch fish. But the jug is broken, so that the fish cannot be kept in it.  This describes the situation of a person who possesses good qualities but neglects them. No one bothers about him. As a result he deteriorates in mind. He associates with inferior men and can no longer accomplish anything worth while."
					},
					{
						"poem": "Nine in the third place means:\nThe well is cleaned, but no one drinks from it.\nThis is my heart's sorrow,\nFor one might draw from it.\nIf the king were clear-minded,\nGood fortune might be enjoyed in common.",
						"expl": "An able man is available. He is like a purified well whose water is drinkable. But no use is made of him. This is the sorrow of those who know him. One wishes that the prince might learn about it; this would be good fortune for all concerned."
					},
					{
						"poem": "Six in the fourth place means:\nThe well is being lined. No blame.",
						"expl": "True, if a well is being lined with sone, it cannot be used while the work is going on. But the work is not in vain; the result is that the water stays clear. In life also there are times when a man must put himself in order. During such a time he can do nothing for others, but his work is nonetheless valuable, because by enhancing his powers and abilities through inner development, he can accomplish all the more later on."
					},
					{
						"poem": "Nine in the fifth place means:\nIn the well there is a clear, cold spring\nFrom which one can drink.",
						"expl": "A well that is fed by a spring of living water is a good well. A man who has virtues like a well of this sort is born to be a leader and savior of men, for he has the water of life. Nevertheless, the character for \"good fortune\" is left out here. The all-important thing about a well is that its water be drawn. The best water is only a potentiality for refreshment as long as it is not brought up. So too with leaders of mankind: it is all-important that one should drink from the spring of their words and translate them into life."
					}
				]
			}
		},
		{
			"number": 49,
			"name": "Ko",
			"description": "Revolution (Molting)",
			"trigrams": {
				"above": {
					"title": "tui",
					"description": "THE JOYOUS, LAKE"
				},
				"below": {
					"title": "li",
					"description": "THE CLINGING, FIRE"
				}
			},
			"interpretation": {
				"oracle": "\tREVOLUTION. On your own day\n\tYou are believed.\n\tSupreme success,\n\tFurthering through perseverance.\n\tRemorse disappears.",
				"resume": "\n\nThe Chinese character for this hexagram means in its original sense an \nanimal's pelt, which is changed in the course of the year by molting. From \nthis word is carried over to apply to the \"moltings\" in political life, the great \nrevolutions connected with changes of governments.\n\n  The two trigrams making up the hexagram are the same two that appear in \nK'uei, OPPOSITION (38), that is, the two younger daughters, Li and Tui. But \nwhile there the elder of the two daughters is above, and what results is \nessentially only an opposition of tendencies, here the younger daughter is \nabove. The influences are in actual conflict, and the forces combat each other \nlike fire and water (lake), each trying to destroy the other. Hence the idea of \nrevolution.\n\t",
				"judgment": "\n\nPolitical revolutions are extremely grave matters. They should be undertaken \nonly under stress of direst necessity, when there is no other way out. Not \neveryone is called to this task, but only the man who has the confidence of \nthe people, and even he only when the time is ripe. He must then proceed in \nthe right way, so that he gladdens the people and, by enlightening them, \nprevents excesses. Furthermore, he must be quite free of selfish aims and \nmust really relieve the need of the people. Only then does he have nothing to \nregret.\n\n  Times change, and with them their demands. Thus the seasons change in \nthe course of the year. In the world cycle also there are spring and autumn in \nthe life of peoples and nations, and these call for social transformations.\n\t",
				"image": {
					"oracle": "\tFire in the lake: the image of REVOLUTION.\n\tThus the superior man\n\tSets the calendar in order\n\tAnd makes the seasons clear.",
					"image": "\n\nFire below and the lake above combat and destroy each other. So too in the \ncourse of the year a combat takes place between the forces of light and the \nforces of darkness, eventuating in the revolution of the seasons, and man is \nable to adjust himself in advance to the demands of the different times.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nWrapped in the hide of a yellow cow.",
						"expl": "Changes ought to be undertaken only when there is nothing else to be done. Therefore at first the utmost restraint is necessary. One must becomes firm in one's mind, control oneself-yellow is the color of the means, and the cow is the symbol of docility-and refrain from doing anything for the time being, because any premature offensive will bring evil results."
					},
					{
						"poem": "Six in the second place means:\nWhen one's own day comes, one may create revolution.\nStarting brings good fortune. No blame.",
						"expl": "When we have tried in every other way to bring about reforms, but without success, revolution becomes necessary. But such a thoroughgoing upheaval must be carefully prepared. There must be available a man who has the requisite abilities and who possesses public confidence. To such a man we may well turn. This brings good fortune and is not a mistake. The first thing to be considered is our inner attitude toward the new condition that will inevitably come. We have to go out to meet it, as it were. Only in this way can it be prepared for."
					},
					{
						"poem": "Nine in the third place means:\nStarting brings misfortune.\nPerseverance brings danger.\nWhen talk of revolution has gone the rounds three times,\nOne may commit himself,\nAnd men will believe him.",
						"expl": "When change is necessary, there are two mistakes to be avoided. One lies in excessive haste and ruthlessness, which bring disaster. The other lies in excessive hesitation and conservatism, which are also dangerous. Not every demand for change in the existing order should be heeded. On the other hand, repeated and well-founded complaints should not fail of a hearing. When talk of change has come to one's ears three times, and has been pondered well, he may believe and acquiesce in it. Then he will meet with belief and will accomplish something."
					},
					{
						"poem": "Nine in the fourth place means:\nRemorse disappears. Men believe him.\nChanging the form of government brings good fortune.",
						"expl": "Radical changes require adequate authority. A man must have inner strength as well as influential position. What he does must correspond with a higher truth and must not spring from arbitrary or petty motives; then it brings great good fortune. If a revolution is not founded on such inner truth, the results are bad, and it has no success. For in the end men will support only those undertakings which they feel instinctively to be just."
					},
					{
						"poem": "Nine in the fifth place means:\nThe great man changes like a tiger.\nEven before he questions the oracle\nHe is believed.",
						"expl": "A tigerskin, with its highly visible black stripes on a yellow ground, shows its distinct pattern from afar. It is the same with a revolution brought about by a great man: large, clear guiding lines become visible, understandable to everyone. Therefore he need not first consult the oracle, for he wins the spontaneous support of the people."
					}
				]
			}
		},
		{
			"number": 50,
			"name": "Ting",
			"description": "The Caldron",
			"trigrams": {
				"above": {
					"title": "li",
					"description": "THE CLINGING, FIRE"
				},
				"below": {
					"title": "sun",
					"description": "THE GENTLE, WIND, WOOD"
				}
			},
			"interpretation": {
				"oracle": "\tTHE CALDRON. Supreme good fortune.\n\tSuccess.",
				"resume": "\n\nThe six lines construct the image of Ting, THE CALDRON; at the bottom are \nthe legs, over them the belly, then come the ears (handles), and at the top the \ncarrying rings. At the same time, the image suggests the idea of nourishment. \nThe ting, cast of bronze, was the vessel that held the cooked viands in the \ntemple of the ancestors and at banquets. The heads of the family served the \nfood from the ting into the bowls of the guests.\n\n  THE WELL (48) likewise has the secondary meaning of giving nourishment, \nbut rather more in relation to the people. The ting, as a utensil pertaining to \na refined civilization, suggests the fostering and nourishing of able men, \nwhich redounded to the benefit of the state.\n\n  This hexagram and THE WELL are the only two in the Book of Changes that \nrepresent concrete, men-made objects. Yet here too the thought has its \nabstract connotation.\n\n  Sun, below, is wood and wind; Li, above, is flame. Thus together they stand \nfor the flame kindled by wood and wind, which likewise suggests the idea of \npreparing food.\n\t",
				"judgment": "\n\nWhile THE WELL relates to the social foundation of our life, and this \nfoundation is likened to the water that serves to nourish growing wood, the \npresent hexagram refers to the cultural superstructure of society. Here it is \nthe wood that serves as nourishment for the flame, the spirit. All that is \nvisible must grow beyond itself, extend into the realm of the invisible. \nThereby it receives its true consecration and clarity and takes firm root in the \ncosmic order.\n\n  Here we see civilization as it reaches its culmination in religion. The ting \nserves in offering sacrifice to God. The highest earthly values must be \nsacrificed to the divine. But the truly divine does not manifest itself apart \nfrom man. The supreme revelation of God appears in prophets and holy \nmen. To venerate them is true veneration of God. The will of God, as \nrevealed through them, should be accepted in humility; this brings inner \nenlightenment and true understanding of the world, and this leads to great \ngood fortune and success.\n\t",
				"image": {
					"oracle": "\tFire over wood:\n\tThe image of THE CALDRON.\n\tThus the superior man consolidates his fate \n\tBy making his position correct.",
					"image": "\n\nThe fate of fire depends on wood; as long as there is wood below, the fire \nburns above. It is the same in human life; there is in man likewise a fate that \nlends power to his life. And if he succeeds in assigning the right place to life \nand to fate, thus bringing the two into harmony, he puts his fate on a firm \nfooting. These words contain hints about fostering of life as handed on by \noral tradition in the secret teachings of Chinese yoga.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nA ting with legs upturned.\nFurthers removal of stagnating stuff.\nOne takes a concubine for the sake of her son.\nNo blame.",
						"expl": "If a ting is turned upside down before being used, no harm is done-on the contrary, this clears it of refuse. A concubine's position is lowly, but because she has a son she comes to be honored.  These two metaphors express the idea that in a highly developed civilization, such as that indicated by this hexagram, every person of good will can in some way or other succeed. No matter how lowly he may be, provided he is ready to purify himself, he is accepted. He attains a station in which he can prove himself fruitful in accomplishment, and as a result he gains recognition."
					},
					{
						"poem": "Nine in the second place means:\nThere is food in the ting.\nMy comrades are envious,\nBut they cannot harm me.\nGood fortune.",
						"expl": "In a period of advanced culture, it is of the greatest importance that one should achieve something significant. If a man concentrates on such real undertakings, he may indeed experience envy and disfavor, but that is not dangerous. The more he limits himself to his actual achievements, the less harm the envious inflict on him."
					},
					{
						"poem": "Nine in the third place means:\nThe handle of the ting is altered.\nOne is impeded in his way of life.\nThe fat of the pheasant is not eaten.\nOnce rain falls, remorse is spent.\nGood fortune comes in the end.",
						"expl": "The handle is the means for lifting up the ting. If the handle is altered, the ting cannot be lifted up and used, and, sad to say, the delicious food in it, such as pheasant fat, cannot be eaten by anyone.  This describes a man who, in a highly evolved civilization, finds himself in a place where no one notices or recognizes him. This is a severe block to his effectiveness. All of his good qualities and gifts of mind thus needlessly go to waste. But if he will only see to it that he is possessed of something truly spiritual, the time is bound to come, sooner or later, when the difficulties will be resolved and all will go well. The fall of rain symbolizes here, as in other instances, release of tension."
					},
					{
						"poem": "Nine in the fourth place means:\nThe legs of the ting are broken.\nThe prince's meal is spilled\nAnd his person is soiled.\nMisfortune.",
						"expl": "A man has a difficult and responsible task to which he is not adequate. Moreover, he does not devote himself to it with all his strength but goes about with inferior people; therefore the execution of the work fails. In this way he also incurs personal opprobrium.  Confucius says about this line:  \"Weak character coupled with honored place, meager knowledge with large plans, limited powers with heavy responsibility, will seldom escape disaster.\""
					},
					{
						"poem": "Six in the fifth place means:\nThe ting has yellow handles, golden carrying rings.\nPerseverance furthers.",
						"expl": "Here we have, in a ruling position, a man who is approachable and modest in nature. As a result of this attitude he succeeds in finding strong and able helpers who complement and aid him in his work. Having achieved this attitude, which requires constant self-abnegation, it is important for him to hold to it and not to let himself be led astray."
					}
				]
			}
		},
		{
			"number": 51,
			"name": "Chên",
			"description": "The Arousing (Shock, Thunder)",
			"trigrams": {
				"above": {
					"title": "chên",
					"description": "THE AROUSING, THUNDER"
				},
				"below": {
					"title": "chên",
					"description": "THE AROUSING, THUNDER"
				}
			},
			"interpretation": {
				"oracle": "\tSHOCK brings success.\n\tShock comes-oh, oh!\n\tLaughing words -ha, ha!\n\tThe shock terrifies for a hundred miles,\n\tAnd he does not let fall the sacrificial spoon and chalice.",
				"resume": "\n\nThe hexagram Chên represents the eldest son, who seizes rule with energy \nand power. A yang line develops below two yin lines and presses upward \nforcibly. This movement is so violent that it arouses terror. It is symbolized \nby thunder, which bursts forth from the earth and by its shock causes fear and \ntrembling.\n\t",
				"judgment": "\n\nThe shock that comes from the manifestation of God within the depths of the \nearth makes man afraid, but this fear of God is good, for joy and merriment \ncan follow upon it.\n\n  When a man has learned within his heart what fear and trembling mean, \nhe is safeguarded against any terror produced by outside influences. Let the \nthunder roll and spread terror a hundred miles around: he remains so \ncomposed and reverent in spirit that the sacrificial rite is not interrupted. \nThis is the spirit that must animate leaders and rulers of men-a profound \ninner seriousness from which all terrors glance off harmlessly.\n\t",
				"image": {
					"oracle": "\tThunder repeated: the image of SHOCK.\n\tThus in fear and trembling\n\tThe superior man sets his life in order\n\tAnd examines himself.",
					"image": "\n\nThe shock of continuing thunder brings fear and trembling. The superior \nman is always filled with reverence at the manifestation of God; he sets his \nlife in order and searches his heart, lest it harbor any secret opposition to the \nwill of God. Thus reverence is the foundation of true culture.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nShock comes-oh, oh!\nThen follow laughing words-ha, ha!\nGood fortune.",
						"expl": "The fear and trembling engendered by shock come to an individual at first in such a way that he sees himself placed at a disadvantage as against others. But this is only transitory. When the ordeal is over, he experiences relief, and thus the very terror he had to endure at the outset brings good fortune in the long run."
					},
					{
						"poem": "Six in the second place means:\nShock comes bringing danger.\nA hundred thousand times\nYou lose your treasures\nAnd must climb the nine hills.\nDo not go in pursuit of them.\nAfter seven days you will get them back again.",
						"expl": "This pictures a situation in which a shock endangers a man and he suffers great losses. Resistance would be contrary to the movement of the time and for this reason unsuccessful. Therefore he must simply retreat to heights inaccessible to the threatening forces of danger. He must accept his loss of property without worrying too much about it. When the time of shock and upheaval that has robbed him of his possessions has passed, he will get them back again without going in pursuit of them."
					},
					{
						"poem": "Six in the third place means:\nShock comes and makes one distraught.\nIf shock spurs to action\nOne remains free of misfortune.",
						"expl": "\tThere are three kinds of shock-the shock of heaven, which is thunder, the shock of fate, and, finally, the shock of the heart. The present hexagram refers less to inner shock than to the shock of fate. In such times of shock, presence of mind is all too easily lost: the individual overlooks all opportunities for action and mutely lets fate take its course. But if he allows the shocks of fate to induce movement within his mind, he will overcome these external blows with little effort."
					},
					{
						"poem": "Nine in the fourth place means:\nShock is mired.",
						"expl": "Movement within the mind depends for its success partly on circumstances. If there is neither a resistance that might be vigorously combated, nor yet a yielding that permits of victory-if, instead, everything is tough and inert like mire-movement is crippled."
					},
					{
						"poem": "Six in the fifth place means:\nShock goes hither and thither.\nDanger.\nHowever, nothing at all is lost.\nYet there are things to be done.",
						"expl": "This is a case not of a single shock but of repeated shocks with no breathing space between. Nonetheless, the shock causes no loss, because one takes care to stay in the center of movement and in this way to be spared the fate of being helplessly tossed hither and thither."
					}
				]
			}
		},
		{
			"number": 52,
			"name": "Kên",
			"description": "Keeping Still, Mountain",
			"trigrams": {
				"above": {
					"title": "kên",
					"description": "KEEPING STILL, MOUNTAIN"
				},
				"below": {
					"title": "kên",
					"description": "KEEPING STILL, MOUNTAIN"
				}
			},
			"interpretation": {
				"oracle": "\tKEEPING STILL. Keeping his back still\n\tSo that he no longer feels his body.\n\tHe goes into his courtyard\n\tAnd does not see his people.\n\tNo blame.",
				"resume": "\n\nThe image of this hexagram is the mountain, the youngest son of heaven and \nearth. The male principle is at the top because it strives upward by nature; the \nfemale principle is below, since the direction of its movement has come to its \nnormal end.\n\n  In its application to man, the hexagram turns upon the problem of \nachieving a quiet heart. It is very difficult to bring quiet to the heart. While \nBuddhism strives for rest through an ebbing away of all movement in \nnirvana, the Book of Changes holds that rest is merely a state of polarity that \nalways posits movement as its complement. Possibly the words of the text \nembody directions for the practice of yoga.\n\t",
				"judgment": "\n\nTrue quiet means keeping still when the time has come to keep still, and \ngoing forward when the time has come to go forward. In this way rest and \nmovement are in agreement with the demands of the time, and thus there is \nlight in life.\n\n  The hexagram signifies the end and the beginning of all movement. The \nback is named because in the back are located all the nerve fibers that mediate \nmovement. If the movement of these spinal nerves is brought to a standstill, \nthe ego, with its restlessness, disappears as it were. When a man has thus \nbecome calm, he may turn to the outside world. He no longer sees in it the \nstruggle and tumult of individual beings, and therefore he has that true peace \nof mind which is needed for understanding the great laws of the universe \nand for acting in harmony with them. Whoever acts from these deep levels \nmakes no mistakes.\n\t",
				"image": {
					"oracle": "\tMountains standing close together:\n\tThe image of KEEPING STILL.\n\tThus the superior man\n\tDoes not permit his thoughts \n\tTo go beyond his situation.",
					"image": "\n\nThe heart thinks constantly. This cannot be changed, but the movements of \nthe heart-that is, a man's thoughts-should restrict themselves to the \nimmediate situation. All thinking that goes beyond this only makes the heart \nsore.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nKeeping his toes still.\nNo blame.\nContinued perseverance furthers.",
						"expl": "Keeping the toes still means halting before one has even begun to move. The beginning is the time of few mistakes. At that time one is still in harmony with primal innocence. Not yet influenced by obscuring interests and desires, one sees things intuitively as they really are. A man who halts at the beginning, so long as he has not yet abandoned the truth, finds the right way. But persisting firmness is needed to keep one from drifting irresolutely.\t\tSix in e second place means:\tKeeping his calves still.\tHe cannot rescue him whom he follows.\tHis heart is not glad.The leg cannot move independently; it depends on the movement of the body. If a leg is suddenly stopped while the whole body is in vigorous motion, the continuing body movement will make one fall.  The same is true of a man who serves a master stronger than himself. He is swept along, and even though he may himself halt on the path of wrongdoing, he can no longer check the other in his powerful movement. Where the master presses forward, the servant, no matter how good his intentions, cannot save him."
					},
					{
						"poem": "Nine in the third place means:\nKeeping his hips still.\nMaking his sacrum stiff.\nDangerous. The heart suffocates.",
						"expl": "This refers to enforced quiet. The restless heart is to be subdued by forcible means. But fire when it is smothered changes into acrid smoke that suffocates as it spreads.  Therefore, in exercises in meditation and concentration, one ought not to try to force results. Rather, calmness must develop naturally out of a state of inner composure. If one tries to induce calmness by means of artificial rigidity, meditation will lead to very unwholesome results."
					},
					{
						"poem": "Six in the fourth place means:\nKeeping his trunk still.\nNo blame.",
						"expl": "As has been pointed out above in the comment on the Judgment, keeping the back at rest means forgetting the ego. This is the highest stage of rest. Here this stage has not yet been reached: the individual in this instance, though able to keep the ego, with its thoughts and impulses, in a state of rest, is not yet quite liberated from its dominance. Nonetheless, keeping the heart at rest is an important function, leading in the end to the complete elimination of egotistic drives. Even though at this point one does not yet remain free from all the dangers of doubt and unrest, this frame of mind is not a mistake, as it leads ultimately to that other, higher level."
					},
					{
						"poem": "Six in the fifth place means:\nKeeping his jaws still.\nThe words have order.\nRemorse disappears.",
						"expl": "A man in a dangerous situation, especially when he is not adequate to it, is inclined to be very free with talk and presumptuous jokes. But injudicious speech easily leads to situations that subsequently give much cause for regret. However, if a man is reserved in speech, his words take ever more definite form, and every occasion for regret vanishes."
					}
				]
			}
		},
		{
			"number": 53,
			"name": "Chien",
			"description": "Development (Gradual Progress)",
			"trigrams": {
				"above": {
					"title": "sun",
					"description": "THE GENTLE, WIND, WOOD"
				},
				"below": {
					"title": "kên",
					"description": "KEEPING STILL, MOUNTAIN"
				}
			},
			"interpretation": {
				"oracle": "\tDEVELOPMENT. The maiden\n\tIs given in marriage.\n\tGood fortune.\n\tPerseverance furthers.",
				"resume": "\n\nThis hexagram is made up of Sun (wood, penetration) above, i.e., without, \nand Kên (mountain, stillness) below, i.e., within. A tree on a mountain \ndevelops slowly according to the law of its being and consequently stands \nfirmly rooted. This gives the idea of a development that proceeds gradually, \nstep by step. The attributes of the trigrams also point to this: within is \ntranquillity, which guards against precipitate actions, and without is \npenetration, which makes development and progress possible.\n\t",
				"judgment": "\n\nThe development of events that leads to a girl's following a man to his home \nproceeds slowly. The various formalities must be disposed of before the \nmarriage takes place. This principle of gradual development can be applied to \nother situations as well; it is always applicable where it is a matter of correct \nrelationships of co-operation, as for instance in the appointment of an official. \nThe development must be allowed to take its proper course. Hasty action \nwould not be wise. This is also true, finally, of any effort to exert influence on \nothers, for here too the essential factor is a correct way of development \nthrough cultivation of one's own personality. No influence such as that \nexerted by agitators has a lasting effect.\n\n  Within the personality too, development must follow the same course if \nlasting results are to be achieved. Gentleness that is adaptable, but at the same \ntime penetrating, is the outer form that should proceed from inner calm.\n\n  The very gradualness of the development makes it necessary to have \nperseverance, for perseverance alone prevents slow progress from dwindling \nto nothing.\n\t",
				"image": {
					"oracle": "\tOn the mountain, a tree:\n\tThe image of DEVELOPMENT.\n\tThus the superior man abides in dignity and virtue,\n\tIn order to improve the mores.",
					"image": "\n\nThe tree on the mountain is visible from afar, and its development \ninfluences the landscape of the entire region. It does not shoot up like a \nswamp plant; its growth proceeds gradually. Thus also the work of \ninfluencing people can be only gradual. No sudden influence or awakening \nis of lasting effect. Progress must be quite gradual, and in order to obtain such \nprogress in public opinion and in the mores of the people, it is necessary for \nthe personality to acquire influence and weight. This comes about through \ncareful and constant work on one's own moral development.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nThe wild goose gradually draws near the shore. \nThe young son is in danger.\nThere is talk. No blame.",
						"expl": "All the individual lines in this hexagram symbolize the gradual flight of the wild goose. The wild goose is the symbol of conjugal fidelity, because it is believed that this bird never takes another mate after the death of the first.  The initial line suggests the first resting place in the flight of water birds from the water to the heights. The shore is reached. The situation is that of a lonely young man who is just starting out to make his way in life. Since no one comes to help him, his first steps are slow and hesitant, and he is surrounded by danger. Naturally he is subjected to much criticism. But these very difficulties keep him from being too hasty, and his progress is successful."
					},
					{
						"poem": "Six in the second place means:\nThe wild goose gradually draws near the cliff.\nEating and drinking in peace and concord.\nGood fortune.",
						"expl": "The cliff is a safe place on shore. The development has gone a step further. The initial insecurity has been overcome, and a safe position in life has been found, giving one enough to live on. This first success, opening up a path to activity, brings a certain joyousness of mood, and one goes to meet the future reassured.  It is said of the wild goose that it calls to its comrades whenever it finds food; this is the symbol of peace and concord in good fortune. A man does not want to keep his good luck for himself only, but is ready to share it with others."
					},
					{
						"poem": "Nine in the third place means:\nThe wild goose gradually draws near the plateau.\nThe man goes forth and does not return.\nThe woman carries a child but does not bring it forth.\nMisfortune. \nIt furthers one to fight off robbers.",
						"expl": "The high plateau is dry and unsuitable for the wild goose. If it goes there, it has lost its way and gone too far. This is contrary to the law of development.  It is the same in human life. If we do not let things develop quietly but plunge of our own choice too rashly into a struggle, misfortune results. A man jeopardizes his own life, and his family perishes thereby. However, this is not all necessary; it is only the result of transgressing the law of natural development. If one does not willfully provoke a conflict, but confines himself to vigorously maintaining his own position and to warding off unjustified attacks, all goes well."
					},
					{
						"poem": "Six in the fourth place means:\nThe wild goose goes gradually draws near the tree.\nPerhaps it will find a flat branch. No blame.",
						"expl": "A tree is not a suitable place for a wild goose. But if it is clever, it will find a flat branch on which it can get a footing. A man's life too, in the course of its development, often brings him into inappropriate situations, in which he finds it difficult to hold his own without danger. Then it is important to be sensible and yielding. This enables him to discover a safe place in which life can go on, although he may be surrounded by danger."
					},
					{
						"poem": "Nine in the fifth place means:\nThe wild goose gradually draws near the summit.\nFor three years the woman has no child.\nIn the end nothing can hinder her.\nGood fortune.",
						"expl": "The summit is a high place. In a high position one easily becomes isolated. One is misjudged by the very person on whom one is dependent-the woman by her husband, the official by his superior. This is the work of deceitful persons who have wormed their way in. The result is that relationships remain sterile, and nothing is accomplished. But in the course of further development, such misunderstandings are cleared away, and reconciliation is achieved after all."
					}
				]
			}
		},
		{
			"number": 54,
			"name": "Kuei Mei",
			"description": "The Marrying Maiden",
			"trigrams": {
				"above": {
					"title": "chên",
					"description": "THE AROUSING, THUNDER"
				},
				"below": {
					"title": "tui",
					"description": "THE JOYOUS, LAKE"
				}
			},
			"interpretation": {
				"oracle": "\tTHE MARRYING MAIDEN.\n\tUndertakings bring misfortune.\n\tNothing that would further.",
				"resume": "\n\nAbove we have Chên, the eldest son, and below, Tui, the youngest daughter. \nThe man leads and the girl follows him in gladness. The picture is that of the \nentrance of the girl into her husband's house. In all, there are four \nhexagrams depicting the relationship between husband and wife. Hsien, \nINFLUENCE, (31), describes the attraction that a young couple have for each \nother; Hêng, DURATION (32), portrays the permanent relationships of \nmarriage; Chien, DEVELOPMENT (53), reflects the protracted, ceremonious \nprocedures attending THE MARRYING MAIDEN, shows a young girl under \nthe guidance of an older man who marries her.\n\t",
				"judgment": "\n\nA girl who is taken into the family, but not as the chief wife, must behave \nwith special caution and reserve. She must not take it upon herself to \nsupplant the mistress of the house, for that would mean disorder and lead to \nuntenable relationships.\n\n  The same is true of all voluntary relationships between human beings. \nWhile legally regulated relationships based on personal inclination depend in \nthe long run entirely on tactful reserve.\n\n  Affection as the essential principle of relatedness is of the greatest \nimportance in all relationships in the world. For the union of heaven and \nearth is the origin of the whole of nature. Among human beings likewise, \nspontaneous affection is the all-inclusive principle of union.\n\t",
				"image": {
					"oracle": "\tThunder over the lake:\n\tThe image of THE MARRYING MAIDEN.\n\tThus the superior man\n\tUnderstands the transitory\n\tIn the light of the eternity of the end.",
					"image": "\n\nThunder stirs the water of the lake, which follows it in shimmering waves. \nThis symbolizes the girl who follows the man of her choice. But every \nrelationship between individuals bears within it the danger that wrong turns \nmay be taken, leading to endless misunderstandings and disagreements. \nTherefore it is necessary constantly to remain mindful of the end. If we \npermit ourselves to drift along, we come together and are parted again as the \nday may determine. If on the other hand a man fixes his mind on an end that \nendures, he will succeed in avoiding the reefs that confront the closer \nrelationships of people.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nThe marrying maiden as a concubine.\nA lame man who is able to tread.\nUndertakings bring good fortune.",
						"expl": "The princess of ancient China maintained a fixed order of rank among the court ladies, who were subordinated to the queen as are younger sisters to the eldest. Frequently they came from the family of the queen, who herself led them to her husband.  The meaning is that a girl entering a family with the consent of the wife will not rank outwardly as the equal of the latter but will withdraw modestly into the background. However, if she understands how to fit herself into the pattern of things, her position will be entirely satisfactory, and she will feel sheltered in the love of the husband to whom she bears children.  The same meaning is brought out in the relationships between officials. A man may enjoy the personal friendship of a prince and be taken into his confidence. Outwardly this man must keep tactfully in the background behind the official ministers of state, but, although he is hampered by this status, as if he were lame, he can nevertheless accomplish something through the kindliness of his nature."
					},
					{
						"poem": "Nine in the second place means:\nA one-eyed man who is able to see.\nThe perseverance of a solitary man furthers.",
						"expl": "Here the situation is that of a girl married to a man who has disappointed her. Man and wife ought to work together like a pair of eyes. Here the girl is left behind in loneliness; the man of her choice either has become unfaithful or has died. But she does not lost the inner light of loyalty. Thought the other eye is gone, she maintains her loyalty even in loneliness."
					},
					{
						"poem": "Six in the third place means:\nThe marrying maiden as a slave.\nShe marries as a concubine.",
						"expl": "A girl who is in a lowly position and finds no husband may, in some circumstances, still win shelter as a concubine.  This pictures the situation of a person who longs too much for joys that cannot be obtained in the usual way. He enters upon a situation not altogether compatible with self-esteem. Neither judgment nor warning is added to this line; it merely lays bare the actual situation, so that everyone may draw a lesson from it."
					},
					{
						"poem": "Nine in the fourth place means:\nThe marrying maiden draws out the allotted time.\nA late marriage comes in due course.",
						"expl": "The girl is virtuous. She does not wish to throw herself away, and allows the customary time for marriage to slip by. However, there is no harm in this; she is rewarded for her purity and, even though belatedly, finds the husband intended for her.\t"
					},
					{
						"poem": "Six in the fifth place means:\nThe sovereign I gave his daughter in marriage.\nThe embroidered garments of the princess\nWere not as gorgeous\nAs those of the serving maid.\nThe moon that is nearly full\nBrings good fortune.",
						"expl": "The sovereign I is T'ang the Completer. This ruler decreed that the imperial princesses should be subordinated to their husbands in the same manner as other women (cf. Hexagram 11, six in the fifth place). The emperor does not wait for a suitor to woo his daughter but gives her in marriage when he sees fit. Therefore it is in accord with custom for the girl's family to take the initiative here.  We see here a girl of aristocratic birth who marries a man of modest circumstances and understands how to adapt herself with grace to the new situation. She is free of all vanity of outer adornment, and forgetting her rank in her marriage, takes a place below that of her husband, just as the moon, before it is quite full, does not directly face the sun."
					}
				]
			}
		},
		{
			"number": 55,
			"name": "Fêng",
			"description": "Abundance [Fullness]",
			"trigrams": {
				"above": {
					"title": "chên",
					"description": "THE AROUSING, THUNDER"
				},
				"below": {
					"title": "li",
					"description": "THE CLINGING, FIRE"
				}
			},
			"interpretation": {
				"oracle": "\tABUNDANCE has success.\n\tThe king attains abundance.\n\tBe not sad.\n\tBe like the sun at midday.",
				"resume": "\n\nChên is movement; Li is flame, whose attribute is clarity. Clarity within, \nmovement without-this produces greatness and abundance. The hexagram \npictures a period of advanced civilization. However, the fact that \ndevelopment has reached a peak suggests that this extraordinary condition of \nabundance cannot be maintained permanently.\n\t",
				"judgment": "\n\nIt is not given to every mortal to bring about a time of outstanding greatness \nand abundance. Only a born ruler of men is able to do it, because his will is \ndirected to what is great. Such a time of abundance is usually brief. Therefore \na sage might well feel sad in view of the decline that must follow. But such \nsadness does not befit him. Only a man who is inwardly free of sorrow and \ncare can lead in a time of abundance. He must be like the sun at midday, \nilluminating and gladdening everything under heaven.\n\t",
				"image": {
					"oracle": "\tBoth thunder and lightning come:\n\tThe image of ABUNDANCE.\n\tThus the superior man decides lawsuits\n\tAnd carries out punishments.",
					"image": "\n\nThis hexagram has a certain connection with Shih Ho, BITING THROUGH \n(21), in which thunder and lightning similarly appear together, but in the \nreverse order. In BITING THROUGH, laws are laid down; here they are \napplied and enforced. Clarity [Li] within makes it possible to investigate the \nfacts exactly, and shock [Chên] without ensures a strict and precise carrying \nout of punishments.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nWhen a man meets his destined ruler,\nThey can be together ten days,\nAnd it is not a mistake.\nGoing meets with recognition.",
						"expl": "To bring about a time of abundance, a union of clarity with energetic movement is needed. Two individuals possessed of these two attributes are suited to each other, and even if they spend an entire cycle of time together during the period of abundance, it will not be too long, nor is it a mistake. Therefore one may go forth, in order to make one's influence felt; it will meet with recognition."
					},
					{
						"poem": "Six in the second place means:\nThe curtain is of such fullness\nThat the polestars can be seen at noon.\nThrough going one meets with mistrust and hate.\nIf one rouses him through truth,\nGood fortune comes.",
						"expl": "It often happens that plots and party intrigues, which have the darkening effect of an eclipse of the sun, come between a ruler intent on great achievement and the man who could effect great undertakings. Then, instead of the sun, we see the northern stars in the sky. The ruler is overshadowed by a party that has usurped power. If a man at such a time were to try to take energetic measures, he would encounter only mistrust and envy, which would prohibit all movement. The essential thing then is to hold inwardly to the power of truth, which in the end is so strong that it exerts an invisible influence on the ruler, so that all goes well."
					},
					{
						"poem": "Nine in the third place means:\nThe underbrush is of such abundance\nThat the small stars can be seen at noon.\nHe breaks his right arm . No blame.",
						"expl": "The image is that of a progressive covering over of the sun.  Here the eclipse reaches totality, therefore even the small stars can be seen at noon.  In the sphere of social relationships, this means that the prince is now so eclipsed that even the most insignificant persons can push themselves into the foreground. This makes it impossible for an able man, though he might be the right hand of the ruler, to undertake anything. It is as though his arm were broken, but he is not to blame for being thus hindered in action."
					},
					{
						"poem": "Nine in the fourth place means:\nThe curtain is of such fullness\nThat the polestars can be seen at noon.\nHe meets his ruler, who is of like kind.\nGood fortune.",
						"expl": "Here the darkness is already decreasing, therefore interrelated elements come together. Here too the complement must be found-the necessary wisdom to complement joy of action. Then everything will go well. The complementary factor postulated here is the reverse of the one in the first line. In the latter, wisdom is to be complemented by energy, while here energy is complemented by wisdom."
					},
					{
						"poem": "Six in the fifth place means:\nLines are coming,\nBlessing and fame draw near.\nGood fortune.",
						"expl": "The ruler is modest and therefore open to the counsel of able men. Thus he is surrounded by men who suggest to him the lines of action. This brings blessing, fame, and good fortune to him and all the people."
					}
				]
			}
		},
		{
			"number": 56,
			"name": "Lü",
			"description": "The Wanderer",
			"trigrams": {
				"above": {
					"title": "li",
					"description": "THE CLINGING, FIRE"
				},
				"below": {
					"title": "kên",
					"description": "KEEPING STILL, MOUNTAIN"
				}
			},
			"interpretation": {
				"oracle": "\tThe Wanderer. Success through smallness.\n\tPerseverence brings good fortune\n\tTo the wanderer.",
				"resume": "\n\nThe mountain, Kên, stands still; above it fire, Li, flames up and does not tarry. \nTherefore the two trigrams do not stay together. Strange lands and separation \nare the wanderer's lot. When a man is a wanderer and stranger, he should \nnot be gruff nor overbearing. He has no large circle of acquaintances, \ntherefore he should not give himself airs. He must be cautious and reserved; \nin this way he protects himself from evil. If he is obliging toward others, he \nwins success.\n\t",
				"judgment": "\n\n\n\n  A wanderer has no fixed abode; his home is the road. Therefore he must \ntake care to remain upright and steadfast, so that he sojourns only in the \nproper places, associating only with good people. Then he has good fortune \nand can go his way unmolested.\n\t",
				"image": {
					"oracle": "\tFire on the mountain:\n\tThe image of THE WANDERER.\n\tThus the superior man\n\tIs clear-minded and cautious\n\tIn imposing penalties,\n\tAnd protracts no lawsuits.",
					"image": "\n\nWhen grass on a mountain takes fire, there is bright light. However, the fire \ndoes not linger in one place, but travels on to new fuel. It is a phenomenon \nof short duration. This is what penalties and lawsuits should be like. They \nshould be a quickly passing matter, and must not be dragged out indefinitely. \nPrisons ought to be places where people are lodged only temporarily, as guests \nare. They must not become dwelling places.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nIf the wanderer busies himself with trivial things, \nHe draws down misfortune upon himself.",
						"expl": "A wanderer should not demean himself or busy himself with inferior things he meets with along the way. The humbler and more defenseless his outward position, the more should he preserve his inner dignity. For a stranger is mistaken if he hopes to find a friendly reception through lending himself to jokes and buffoonery. The result will be only contempt and insulting treatment."
					},
					{
						"poem": "Six in the second place means:\nThe wanderer comes to an inn.\nHe has his property with him.\nHe wins the steadfastness of a young servant.",
						"expl": "\tThe wanderer her described is modest and reserved. He does not lose touch with his inner being, hence he finds a resting place. In the outside world he does not lose the liking of other people, hence all persons further him, so that he can acquire property. Moreover, he wins the allegiance of a faithful and trustworthy servant-a thing of inestimable value to a wanderer."
					},
					{
						"poem": "Nine in the third place means:\nThe wanderer's inn burns down.\nHe loses the steadfastness of his young servant.\nDanger.",
						"expl": "A truculent stranger does not know how to behave properly. He meddles in affairs and controversies that do not concern him; thus he loses his resting place. He treats his servant with aloofness and arrogance; thus he loses the man's loyalty. When a stranger in a strange land has no one left on whom he can rely, the situation becomes very dangerous."
					},
					{
						"poem": "Nine in the fourth place means:\nThe wanderer rests in a shelter.\nHe obtains his property and an ax.\nMy heart is not glad.",
						"expl": "This describes a wanderer who knows how to limit his desires outwardly, though he is inwardly strong and aspiring. Therefore he finds at least a place of shelter in which he can stay. He also succeeds in acquiring property, but even with this he is not secure. He must be always on guard, ready to defend himself with arms. Hence he is not at ease. He is persistently conscious of being a stranger in a strange land."
					},
					{
						"poem": "Six in the fifth place means:\nHe shoots a pheasant.\nIt drops with the first arrow.\nIn the end this brings both praise and office.",
						"expl": "Traveling statesman were in the habit of introducing themselves to local princes with the gift of a pheasant, killing it at the first shot. Thus he finds friends who praise and recommend him, and in the end the prince accepts him and confers an office upon him.  Circumstances often cause a man to seek a home in foreign parts. If he knows how to meet the situation and how to introduce himself in the right way, he may find a circle of friends and a sphere of activity even in a strange country."
					}
				]
			}
		},
		{
			"number": 57,
			"name": "Sun",
			"description": "The Gentle (The Penetrating, Wind)",
			"trigrams": {
				"above": {
					"title": "sun",
					"description": "THE GENTLE, WIND, WOOD"
				},
				"below": {
					"title": "sun",
					"description": "THE GENTLE, WIND, WOOD"
				}
			},
			"interpretation": {
				"oracle": "\tTHE GENTLE. Success through what is small.\n\tIt furthers one to have somewhere to go.\n\tIt furthers one to see the great man.",
				"resume": "\n\nSun is one of the eight doubled trigrams. It is the eldest daughter and \nsymbolizes wind or wood; it has for its attribute gentleness, which \nnonetheless penetrates like the wind or like growing wood with its roots.\n\n  The dark principle, in itself rigid and immovable, is dissolved by the \npenetrating light principle, to which it subordinates itself in gentleness. In \nnature, it is the wind that disperses the gathered clouds, leaving the sky clear \nand serene. In human life it is penetrating clarity of judgment that thwarts \nall dark hidden motives. In the life of the community it is the powerful \ninfluence of a great personality that uncovers and breaks up those intrigues \nwhich shun the light of day.\n\t",
				"judgment": "\n\nPenetration produces gradual and inconspicuous effects. It should be effected \nnot by an act of violation but by influence that never lapses. Results of this \nkind are less striking to the eye than those won by surprise attack, but they are \nmore enduring and more complete. If one would produce such effects, one \nmust have a clearly defined goal, for only when the penetrating influence \nworks always in the same direction can the object be attained. Small strength \ncan achieve its purpose only by subordinating itself to an eminent man who \nis capable of creating order.\n\t",
				"image": {
					"oracle": "\tWinds following one upon the other:\n\tThe image of THE GENTLY PENETRATING.\n\tThus the superior man \n\tSpreads his commands abroad\n\tAnd carries out his undertakings.",
					"image": "\n\nThe penetrating quality of the wind depends upon its ceaselessness. This is \nwhat makes it so powerful; time is its instrument. In the same way the \nruler's thought should penetrate the soul of the people. This too requires a \nlasting influence brought about by enlightenment and command. Only when \nthe command has been assimilated by the people is action in accordance with \nit possible. Action without preparation of the ground only frightens and \nrepels.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nIn advancing and in retreating,\nThe perseverance of a warrior furthers.",
						"expl": "In born gentleness is often carried to the point of indecisiveness. One does not feel strong enough to advance resolutely. A thousand doubts crop up; one is, however, not minded to withdraw but drifts indecisively to and fro. In such a situation, a military decisiveness is the proper thing, so that one resolutely does what order demands. Resolute discipline is far better than irresolute license."
					},
					{
						"poem": "Nine in the second place means:\nPenetration under the bed.\nPriests and magicians are used in great number.\nGood fortune. No blame.",
						"expl": "At times one has to deal with hidden enemies, intangible influences that slink into dark corners and from this hiding affect people by suggestion. In instances like this, it is necessary to trace these things back to the most secret recesses, in order to determine the nature of the influences to be dealt with. This is the task of the priests; removing the influences is the task of the magicians. The very anonymity of such plotting requires an especially vigorous and indefatigable effort, but this is well worth while. For when such elusive influences are brought into the light and branded, they lose their power over people."
					},
					{
						"poem": "Nine in the third place means:\nRepeated penetration. Humiliation.",
						"expl": "Penetrating reflection must not be pushed too far, lest it cripple the power of decision. After a matter has been thoroughly pondered, it is essential to form a decision and to act. Repeated deliberation brings fresh doubts and scruples, and thereby humiliation, because one shows oneself unable to act."
					},
					{
						"poem": "Six in the fourth place means:\nRemorse vanishes.\nDuring the hunt\nThree kinds of game are caught.",
						"expl": "When a responsible position and accumulated experience lead one to combine innate modesty with energetic action, great success is assured. The three kinds of animals referred to served for offerings to the gods, for feasting guests, and for everyday consumption. When the catch answered all three purposes, the hunt was considered especially successful."
					},
					{
						"poem": "Nine in the fifth place means:\nPerseverance brings good fortune.\nRemorse vanishes.\nNothing that does not further.\nNo beginning, but an end.\nBefore the change, three days.\nAfter the change, three days.\nGood fortune.",
						"expl": "In the situation described in Ku, WORK ON WHAT HAS BEEN SPOILED (18), an entirely new point of departure must be set up, whereas here it is only a question of reforms. The beginning has not been good, but the moment has been reached when a new direction can be taken. Change and improvement are called for. Such steps must be undertaken with steadfastness, that is, with a firm and correct attitude of mind; then they will succeed, and remorse will disappear. But it must be remembered that such improvements require careful consideration. Before a change is made, it must be pondered over again and again. After the change is made, it is necessary to note carefully for some time after how the improvements bear the test of actuality. Such careful work is accompanied by good fortune."
					}
				]
			}
		},
		{
			"number": 58,
			"name": "Tui",
			"description": "The Joyous, Lake",
			"trigrams": {
				"above": {
					"title": "tui",
					"description": "THE JOYOUS, LAKE"
				},
				"below": {
					"title": "tui",
					"description": "THE JOYOUS, LAKE"
				}
			},
			"interpretation": {
				"oracle": "\tTHE JOYOUS. Success.\n\tPerseverance is favorable.",
				"resume": "\n\nThis hexagram, like sun, is one of the eight formed by doubling of a trigram. \nThe trigram Tui denotes the youngest daughter; it is symbolized by the \nsmiling lake, and its attribute is joyousness. Contrary to appearances, it is not \nthe yielding quality of the top line that accounts for joy here. The attribute of \nthe yielding or dark principle is not joy but melancholy. However, joy is \nindicated by the fact that there are two strong lines within, expressing \nthemselves through the medium of gentleness.\n\n  True joy, therefore, rests on firmness and strength within, manifesting itself \noutwardly as yielding and gentle.\n\t",
				"judgment": "\n\nThe joyous mood is infectious and therefore brings success. But joy must be \nbased on steadfastness if it is not to degenerate into uncontrolled mirth. \nTruth and strength must dwell in the heart, while gentleness reveals itself in \nsocial intercourse. In this way one assumes the right attitude toward God and \nman and achieves something. Under certain conditions, intimidation \nwithout gentleness may achieve something momentarily, but not for all \ntime. When, on the other hand, the hearts of men are won by friendliness, \nthey are led to take all hardships upon themselves willingly, and if need be \nwill not shun death itself, so great is the power of joy over men.\n\t",
				"image": {
					"oracle": "\tLakes resting one on the other:\n\tThe image of THE JOYOUS.\n\tThus the superior man joins with his friends\n\tFor discussion and practice.",
					"image": "\n\nA lake evaporates upward and thus gradually dries up; but when two lakes \nare joined they do not dry up so readily, for one replenishes the other. It is \nthe same in the field of knowledge. Knowledge should be a refreshing and \nvitalizing force. It becomes so only through stimulating intercourse with \ncongenial friends with whom one holds discussion and practices application \nof the truths of life. In this way learning becomes many-sided and takes on a \ncheerful lightness, whereas there is always something ponderous and one-\nsided about the learning of the self-taught.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nContented joyousness. Good fortune.",
						"expl": "A quiet, wordless, self-contained joy, desiring nothing from without and resting content with everything, remains free of all egotistic likes and dislikes. In this freedom lies good fortune, because it harbors the quiet security of a heart fortified within itself."
					},
					{
						"poem": "Nine in the second place means:\nSincere joyousness. Good fortune.\nRemorse disappears.",
						"expl": "We often find ourselves associating with inferior people in whose company we are tempted by pleasures that are inappropriate for the superior man. To participate in such pleasures would certainly bring remorse, for a superior man can find no real satisfaction in low pleasures. When, recognizing this, a man does not permit his will to swerve, so that he does not find such ways agreeable, not even dubious companions will venture to proffer any base pleasures, because he would not enjoy them. Thus every cause for regret is removed."
					},
					{
						"poem": "Six in the third place means:\nComing joyousness. Misfortune.",
						"expl": "True joy must spring from within. But if one is empty within and wholly given over to the world, idle pleasures come streaming in from without. This is what many people welcome as diversion. Those who lack inner stability and therefore need amusement, will always find opportunity of indulgence. They attract external pleasures by the emptiness of their natures. Thus they lose themselves more and more, which of course has bad results."
					},
					{
						"poem": "Nine in the fourth place means:\nJoyousness that is weighed is not at peace.\nAfter ridding himself of mistakes a man has joy.",
						"expl": "Often a man finds himself weighing the choice between various kinds of pleasures, and so long as he has not decided which kind he will choose, the higher or the lower, he has no inner peace. Only when he clearly recognizes that passion brings suffering, can he make up his mind to turn away from the lower pleasures and to strive for the higher. Once this decision is sealed, he finds true joy and peace, and inner conflict is overcome."
					},
					{
						"poem": "Nine in the fifth place means:\nSincerity toward disintegrating influences is dangerous.",
						"expl": "Dangerous elements approach even the far best of men. If a man permits himself to have anything to do with them, their disintegrating influence acts slowly but surely, and inevitable brings dangers in its train. But if he recognizes the situation and can comprehend the danger, he knows how to protect himself and remains unharmed."
					}
				]
			}
		},
		{
			"number": 59,
			"name": "Huan",
			"description": "Dispersion [Dissolution]",
			"trigrams": {
				"above": {
					"title": "sun",
					"description": "THE GENTLE, WIND"
				},
				"below": {
					"title": "kan",
					"description": "THE ABYSMAL, WATER"
				}
			},
			"interpretation": {
				"oracle": "\tDISPERSION. Success.\n\tThe king approaches his temple.\n\tIt furthers one to cross the great water.\n\tPerseverance furthers.",
				"resume": "\n\nWind blowing over water disperses it, dissolving it into foam and mist. This \nsuggests that when a man's vital energy is dammed up within him (indicated \nas a danger by the attribute of the lower trigram), gentleness serves to break \nup and dissolve the blockage.\n\t",
				"judgment": "\n\nThe text of this hexagram resembles that of Ts'ui, GATHERING TOGETHER (45). \nIn the latter, the subject is the bringing together of elements that have \nbeen separated, as water collects in lakes upon the earth. Here the subject is \nthe dispersing and dissolving of divisive egotism. DISPERSION shows the \nway, so to speak, that leads to gathering together. This explains the similarity \nof the two texts.\n\n  Religious forces are needed to overcome the egotism that divides men. The \ncommon celebration of the great sacrificial feasts and sacred rites, which gave \nexpression simultaneously to the interrelation and social articulation of the \nfamily and state, was the means of employed by the great ruler to unite men. \nThe sacred music and the splendor of the ceremonies aroused a strong tide of \nemotion that was shared by all hearts in unison, and that awakened a \nconsciousness of the common origin of all creatures. In this way disunity was \novercome and rigidity dissolved. A further means to the same end is co-\noperation in great general undertakings that set a high goal for the will of the \npeople; in the common concentration on this goal, all barriers dissolve, just \nas, when a boat is crossing a great stream, all hands must unite in a joint task.\n\n  But only a man who is himself free of all selfish ulterior considerations, and \nwho perseveres in justice and steadfastness, is capable of so dissolving the \nhardness of egotism.\n\t",
				"image": {
					"oracle": "\tThe wind drives over the water:\n\tThe image of DISPERSION.\n\tThus the kings of old sacrificed to the Lord\n\tAnd built temples.",
					"image": "\n\nIn the autumn and winter, water begins to freeze into ice. When the warm \nbreezes of spring come, the rigidity is dissolved, and the elements that have \nbeen dispersed in ice floes are reunited. It is the same with the minds of the \npeople. Through hardness and selfishness the heart grows rigid, and this \nrigidity leads to separation from all others. Egotism and cupidity isolate men. \nTherefore the hearts of men must be seized by a devout emotion. They must \nbe shaken by a religious awe in face of eternity-stirred with an intuition of the \nOne Creator of all living beings, and united through the strong feeling of \nfellowship experienced in the ritual of divine worship.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nHe brings help with the strength of a horse.\nGood fortune.",
						"expl": "It is important that disunion should be overcome at the outset, before it has become complete-that the clouds should be dispersed before they have brought storm and rain. At such times when hidden divergences in temper make themselves felt and lead to mutual misunderstandings we must take quick and vigorous action to dissolve the misunderstandings and mutual distrust."
					},
					{
						"poem": "Nine in the second place means:\nAt the dissolution\nHe hurries to that which supports him.\nRemorse disappears.",
						"expl": "When an individual discovers within himself the beginnings of alienation from others, of misanthropy and ill humor, he must set about dissolving these obstructions. He must rouse himself inwardly, hasten to that which supports him. Such support is never found in hatred, but always in a moderate and just judgment of men, linked with good will. If he regains this unobstructed outlook on humanity, while at the same time all saturnine ill humor is dissolved, all occasion for remorse disappears."
					},
					{
						"poem": "Six in the third place means:\nHe dissolves his self. No remorse.",
						"expl": "Under certain circumstances, a man's work may become so difficult that he can no longer think of himself. He must set aside all personal desires and disperse whatever the self gathers about it to serve as a barrier against others. Only on the basis of great renunciation can he obtain the strength for great achievements. By setting his goal in a great task outside himself, he can attain this standpoint."
					},
					{
						"poem": "Six in the fourth place means:\nHe dissolves his bond with his group.\nSupreme good fortune.\nDispersion leads in turn to accumulation.\nThis is something that ordinary men do not think of.",
						"expl": "When we are working at a task that affects the general welfare, we must leave all private friendships out of account. Only by rising above party interests can we achieve something decisive. He who has the courage thus to forego what is near wins what is afar. But in order to comprehend this standpoint, one must have a wide view of the interrelationships of life, such as only unusual men attain."
					}
				]
			}
		},
		{
			"number": 60,
			"name": "Chieh",
			"description": "Limitation",
			"trigrams": {
				"above": {
					"title": "kan",
					"description": "THE ABYSMAL, WATER"
				},
				"below": {
					"title": "tui",
					"description": "THE JOYOUS, LAKE"
				}
			},
			"interpretation": {
				"oracle": "\t\n\n\tLIMITATION. Success.\n\tGalling limitation must not be persevered in.",
				"resume": "\n\nA lake occupies a limited space. When more water comes into it, it \noverflows. Therefore limits must be set for the water. The image shows \nwater below and water above, with the firmament between them as a limit.\n\n  The Chinese word for limitation really denotes the joints that divide a \nbamboo stalk. In relation to ordinary life it means the thrift that sets fixed \nlimits upon expenditures. In relation to the moral sphere it means the fixed \nlimits that the superior man sets upon his actions-the limits of loyalty and \ndisinterestedness.\n\t",
				"judgment": "\n\nLimitations are troublesome, but they are effective. If we live economically \nin normal times, we are prepared for times of want. To be sparing saves us \nfrom humiliation. Limitations are also indispensable in the regulation of \nworld conditions. In nature there are fixed limits for summer and winter, \nday and night, and these limits give the year its meaning. In the same way, \neconomy, by setting fixed limits upon expenditures, acts to preserve property \nand prevent injury to the people.\n\n  But in limitation we must observe due measure. If a man should seek to \nimpose galling limitations upon his own nature, it would be injurious. And \nif he should go too far in imposing limitations on others, they would rebel. \nTherefore it is necessary to set limits even upon limitation.\n\t",
				"image": {
					"oracle": "\tWater over lake: the image of LIMITATION.\n\tThus the superior man\n\tCreates number and measure,\n\tAnd examines the nature of virtue and correct conduct.",
					"image": "\n\nA lake is something limited. Water is inexhaustible. A lake can contain only \na definite amount of the infinite quantity of water; this is its peculiarity. In \nhuman life too the individual achieves significance through discrimination \nand the setting of limits. Therefore what concerns us here is the problem of \nclearly defining these discriminations, which are, so to speak, the backbone of \nmorality. Unlimited possibilities are not suited to man; if they existed, his life \nwould only dissolve in the boundless. To become strong, a man's life needs \nthe limitations ordained by duty and voluntarily accepted. The individual \nattains significance as a free spirit only by surrounding himself with these \nlimitations and by determining for himself what his duty is.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nNot going out of the door and the courtyard\nIs without blame.",
						"expl": "Often a man who would like to undertake something finds himself confronted by insurmountable limitations. Then he must know where to stop. If he rightly understands this and does not go beyond the limits set for him, he accumulates an energy that enables him, when the proper time comes, to act with great force. Discretion is of prime importance in preparing the way for momentous things. Concerning this, Confucius says:Where disorder develops, words are the first steps. If the prince is not discreet, he loses his servant. If the servant is not discreet he loses his life. If germinating things are not handled with discretion, the perfecting of them is impeded. Therefore the superior man is careful to maintain silence and does not go forth."
					},
					{
						"poem": "Nine in the second place means:\nNot going out of the gate and the courtyard\nBrings misfortune.",
						"expl": "When the time for action has come, the moment must be quickly seized. Just as water first collects in a lake without flowing out, yet is certain to find an outlet when the lake is full, so it is in the life of man. It is a good thing to hesitate so long as the time for action has not come, but no longer. Once the obstacles to action have been removed, anxious hesitation is a mistake that is bound to bring disaster, because one misses one's opportunity."
					},
					{
						"poem": "Six in the third place means:\nHe who knows limitation\nWill have cause to lament.\nNo blame.",
						"expl": "If an individual is bent only on pleasures and enjoyment, it is easy for him to lose his sense of the limits that are necessary. If he gives himself over to extravagance, he will have to suffer the consequences, with accompanying regret. He must not seek to lay the blame on others. Only when we realize that our mistakes are of our own making will such disagreeable experiences free us of errors."
					},
					{
						"poem": "Six in the fourth place means:\nContented limitation. Success.",
						"expl": "Every limitation has its value, but a limitation that requires persistent effort entails a cost of too much energy. When, however, the limitation is a natural one (as for example, the limitation by which water flows only downhill), it necessarily leads to success, for then it means a saving of energy. The energy that otherwise would be consumed in a vain struggle with the object, is applied wholly to the benefit of the matter in hand, and success is assured."
					},
					{
						"poem": "Nine in the fifth place means:\nSweet limitation brings good fortune.\nGoing brings esteem.",
						"expl": "\tThe limitation must be carried out in the right way if it is to be effective. If we seek to impose restrictions on others only, while evading them ourselves, these restrictions will always be resented and will provoke resistance. If, however, a man in a leading position applies the limitation first to himself, demanding little from those associated with him, and with modest means manages to achieve something, good fortune is the result. Where such an example occurs, it meets with emulation, so that whatever is undertaken must succeed."
					}
				]
			}
		},
		{
			"number": 61,
			"name": "Chung Fu",
			"description": "Inner Truth",
			"trigrams": {
				"above": {
					"title": "sun",
					"description": "THE GENTLE, WIND"
				},
				"below": {
					"title": "tui",
					"description": "THE JOYOUS, LAKE"
				}
			},
			"interpretation": {
				"oracle": "\tINNER TRUTH. Pigs and fishes.\n\tGood fortune.\n\tIt furthers one to cross the great water.\n\tPerseverance furthers.",
				"resume": "\n\nThe wind blows over the lake and stirs the surface of the water. Thus visible \neffects of the invisible manifest themselves. The hexagram consists of firm \nlines above and below, while it is open in the center. This indicates a heart \nfree of prejudices and therefore open to truth. On the other hand, each of the \ntwo trigrams has a firm line in the middle; this indicates the force of inner \ntruth in the influences they present.\n\n  The attributes of the two trigrams are: above, gentleness, forbearance \ntoward inferiors; below, joyousness in obeying superiors. Such conditions \ncreate the basis of a mutual confidence that makes achievements possible.\n\n  The character of fu (\"truth\") is actually the picture of a bird's foot over a \nfledgling. It suggests the idea of brooding. An egg is hollow. The light-giving \npower must work to quicken it from outside, but there must be a germ of life \nwithin, if life is to be awakened. Far-reaching speculations can be linked with \nthese ideas.\n\t",
				"judgment": "\n\nPigs and fishes are the least intelligent of all animals and therefore the most \ndifficult to influence. The force of inner truth must grow great indeed before \nits influence can extend to such creatures. In dealing with persons as \nintractable and as difficult to influence as a pig or a fish, the whole secret of \nsuccess depends on finding the right way of approach. One must first rid \noneself of all prejudice and, so to speak, let the psyche of the other person act \non one without restraint. Then one will establish contact with him, \nunderstand and gain power over him. When a door has thus been opened, \nthe force of one's personality will influence him. If in this way one finds no \nobstacles insurmountable, one can undertake even the most dangerous \nthings, such as crossing the great water, and succeed.\n\n  But it is important to understand upon what the force inner truth depends. \nThis force is not identical with simple intimacy or a secret bond. Close ties \nmay exist also among thieves; it is true that such a bond acts as a force but, \nsince it is not invincible, it does not bring good fortune. All association on \nthe basis of common interests holds only up to a certain point. Where the \ncommunity of interest ceases, the holding together ceases also, and the closest \nfriendship often changes into hate. Only when the bond is based on what is \nright, on steadfastness, will it remain so firm that it triumphs over \neverything.\n\t",
				"image": {
					"oracle": "\tWind over lake: the image of INNER TRUTH.\n\tThus the superior man discusses criminal cases \n\tIn order to delay executions.",
					"image": "\n\nWind stirs water by penetrating it. Thus the superior man, when obliged to \njudge the mistakes of men, tries to penetrate their minds with understanding, \nin order to gain a sympathetic appreciation of the circumstances. In ancient \nChina, the entire administration of justice was guided by this principle. A \ndeep understanding that knows how to pardon was considered the highest \nform of justice. This system was not without success, for its aim was to make \nso strong a moral impression that there was no reason to fear abuse of such \nmildness. For it sprang not from weakness but from a superior clarity.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nBeing prepared brings good fortune.\nIf there are secret designs, it is disquieting.",
						"expl": "The force of inner truth depends chiefly on inner stability and preparedness. From this state of mind springs the correct attitude toward the outer world. But if a man should try to cultivate secret relationships of a special sort, it would deprive him of his inner independence. The more reliance he places on the support of others, the more uneasy and anxious he will become as to whether these secret ties are really tenable. In this way inner peace and the force of inner truth are lost."
					},
					{
						"poem": "Nine in the second place means:\nA crane calling in the shade.\nIts young answers it.\nI have a good goblet.\nI will share it with you.",
						"expl": "This refers to the involuntary influence of a man's inner being upon persons of kindred spirit. The crane need not show itself on a high hill. It may be quite hidden when it sounds its call; yet its young will hear its not, will recognize it and give answer. Where there is a joyous mood, there a comrade will appear to share a glass of wine.  This is the echo awakened in men through spiritual attraction. Whenever a feeling is voiced with truth and frankness, whenever a deed is the clear expression of sentiment, a mysterious and far-reaching influence is exerted. At first it acts on those who are inwardly receptive. But the circle grows larger and larger. The root of all influence lies in one's own inner being: given true and vigorous expression in word and deed, its effect is great. The effect is but the reflection of something that emanates from one's own heart. Any deliberate intention of an effect would only destroy the possibility of producing it. Confucius says about this line:The superior man abides in his room. If his words are well spoken, he meets with assent at a distance of more than a thousand miles. How much more then from near by! If the superior man abides in his room and his words are not well spoken, he meets with contradiction at a distance of more than a thousand miles. How much more then from near by! Words go forth from one's own person and exert their influence on men. Deeds are born close at hand and become visible far away. Words and deeds are the hinge and bowspring of the superior man. As hinge and bowspring move, they bring honor or disgrace. Through words and deeds the superior man moves heaven and earth . Must one not, then, be cautious?"
					},
					{
						"poem": "Six in the third place means:\nHe finds a comrade.\nNow he beats the drum, now he stops.\nNow he sobs, now he sings.",
						"expl": "Here the source of a man's strength lies not in himself but in his relation to other people. No matter how close to them he may be, if his center of gravity depends on them, he is inevitably tossed to and fro between joy and sorrow. Rejoicing to high heaven, then sad unto death-this is the fate of those who depend upon an inner accord with other persons whom they love. Here we have only the statement of the law that this is so. Whether this condition is felt to be an affliction of the supreme happiness of love, is left to the subjective verdict of the person concerned."
					},
					{
						"poem": "Six in the fourth place means:\nThe moon nearly at the full.\nThe team horse goes astray.\nNo blame.",
						"expl": "To intensify the power of inner truth, a man must always turn to his superior, from whom he can receive enlightenment as the moon receives light form the sun. However, this requires a certain humility, like that of the moon when it is not yet quite full. At the moment when the moon becomes full and stands directly opposite the sun, it begins to wane. Just as on the one hand we must be humble and reverent when face to face with the source of enlightenment, so likewise must we on the other renounce factionalism among men. Only be pursuing one's course like a horse that goes straight ahead without looking sidewise at its mate, can one retain the inner freedom that helps one onward."
					},
					{
						"poem": "Nine in the fifth place means:\nHe possesses truth, which links together.\nNo blame.",
						"expl": "This describes the ruler who holds all elements together by the power of his personality. Only when the strength of his character is so ample that he can influence all who are subject to him, is he as he needs to be. The power of suggestion must emanate from the ruler. It will firmly knit together and unite all his adherents. Without this central force, all external unity is only deception and breaks down at the decisive moment."
					}
				]
			}
		},
		{
			"number": 62,
			"name": "Hsiao Kuo",
			"description": "Preponderance of the Small",
			"trigrams": {
				"above": {
					"title": "chên",
					"description": "THE AROUSING, THUNDER"
				},
				"below": {
					"title": "kên",
					"description": "KEEPING STILL, MOUNTAIN"
				}
			},
			"interpretation": {
				"oracle": "\tPREPONDERANCE OF THE SMALL. Success.\n\tPerseverance furthers.\n\tSmall things may be done; great things should not be done.\n\tThe flying bird brings the message:\n\tIt is not well to strive upward,\n\tIt is well to remain below.\n\tGreat good fortune.",
				"resume": "\n\nWhile in the hexagram Ta Kuo, PREPONDERANCE OF THE GREAT (28), the \nstrong lines preponderate and are within, inclosed between weak lines at the \ntop and bottom, the present hexagram has weak lines preponderating, though \nhere again they are on the outside, the strong lines being within. This indeed \nis the basis of the exceptional situation indicated by the hexagram. When \nstrong lines are outside, we have the hexagram I, PROVIDING \nNOURISHMENT (27), or Chung Fu, INNER TRUTH, (61); neither represents \nand exceptional state. When strong elements within preponderate, they \nnecessarily enforce their will. This creates struggle and exceptional conditions \nin general. But in the present hexagram it is the weak element that perforce \nmust mediate with the outside world. If a man occupies a position of \nauthority for which he is by nature really inadequate, extraordinary prudence \nis necessary.\n\t",
				"judgment": "\n\nExceptional modesty and conscientiousness are sure to be rewarded with \nsuccess; however, if a man is not to throw himself away, it is important that \nthey should not become empty form and subservience but be combined \nalways with a correct dignity in personal behavior. We must understand the \ndemands of the time in order to find the necessary offset for its deficiencies \nand damages. In any event we must not count on great success, since the \nrequisite strength is lacking. In this lies the importance of the message that \none should not strive after lofty things but hold to lowly things.\n\n  The structure of the hexagram gives rise to the idea that this message is \nbrought by a bird. In Ta Kuo, PREPONDERANCE OF THE GREAT (28), the \nfour strong, heavy lines within, supported only by two weak lines without, \ngive the image of a sagging ridgepole. Here the supporting weak lines are \nboth outside and preponderant; this gives the image of a soaring bird. But a \nbird should not try to surpass itself and fly into the sun; it should descend to \nthe earth, where its nest is. In this way it gives the message conveyed by the \nhexagram.\n\t",
				"image": {
					"oracle": "\n\n\t\n\tThunder on the mountain:\n\tThe image of PREPONDERANCE OF THE SMALL.\n\tThus in his conduct the superior man gives preponderance to reverence.\n\tIn bereavement he gives preponderance to grief.\n\tIn his expenditures he gives preponderance to thrift.",
					"image": "\n\nThunder on the mountain is different from thunder on the plain. In the \nmountains, thunder seems much nearer; outside the mountains, it is less \naudible than the thunder of an ordinary storm. Thus the superior man \nderives an imperative from this image: he must always fix his eyes more \nclosely and more directly on duty than does the ordinary man, even though \nthis might make his behavior seem petty to the outside world. He is \nexceptionally conscientious in his actions. In bereavement emotion means \nmore to him than ceremoniousness. In all his personal expenditures he is \nextremely simple and unpretentious. In comparison with the man of the \nmasses, all this makes him stand out as exceptional. But the essential \nsignificance of his attitude lies in the fact that in external matters he is on the \nside of the lowly.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nThe bird meets with misfortune through flying.",
						"expl": "A bird ought to remain in the nest until it is fledged. If it tries to fly before this, it invites misfortune. Extraordinary measures should be resorted to only when all else fails. At first we ought to put up with traditional ways as long as possible; otherwise we exhaust ourselves and our energy and still achieve nothing."
					},
					{
						"poem": "Six in the second place means:\nShe passes by her ancestor\nAnd meets her ancestress.\nHe does not reach his prince\nAnd meets the official.\nNo blame.",
						"expl": "Two exceptional situations are instanced here. In the temple of ancestors, where alternation of generations prevails, the grandson stands on the same side as the grandfather. Hence his closest relations are with the grandfather. The present line designates the grandson's wife, who during the sacrifice passes by the ancestor and goes toward the ancestress. This unusual behavior is, however, an expression of her modesty. She ventures rather to approach the ancestress, for she feels related to her by their common sex. Hence here deviation from the rule is not a mistake.  Another image is that of the official who, in compliance with regulation, first seeks an audience with his prince. If he is not successful in this, he does not try to force anything but goes about conscientious fulfillment of his duty, taking his place among the other officials. This extraordinary restraint is likewise not a mistake in exceptional times. (The rule is that every official should first have an audience with the prince by whom he is appointed. Here the appointment is made by the minister.)"
					},
					{
						"poem": "Nine in the third place means:\nIf one is not extremely careful,\nSomebody may come up from behind and strike him.\nMisfortune.",
						"expl": "At certain times extraordinary caution is absolutely necessary. But it is just in such life situations that we find upright and strong personalities who, conscious of being in the right, disdain to hold themselves on guard, because they consider it petty. Instead, they go their way proud and unconcerned. But this self-confidence deludes them. There are dangers lurking for which they are unprepared. Yet such danger is not unavoidable; one can escape it if he understands that the time demands that he pay especial attention to small and insignificant thing."
					},
					{
						"poem": "Nine in the fourth place means:\nNo blame. He meets him without passing by.\nGoing brings danger. One must be on guard.\nDo not act. Be constantly persevering.",
						"expl": "Hardness of character is tempered by yielding position so that no mistakes are made. The situation here calls for extreme caution; one must make no attempt of one's own initiative to reach the desired end. And if one were to go on, endeavoring one must be on guard and not act but continue inwardly to persevere."
					},
					{
						"poem": "Six in the fifth place means:\nDense clouds,\nNo rain from our western territory.\nThe prince shoots and hits him who is in the cave.",
						"expl": "As a high place is pictured here, the image of a flying bird has become that of flying clouds. But dense as the clouds are, they race across the sky and give no rain. Similarly, in exceptional times there may be a born ruler who is qualified to set the world in order, but who cannot achieve anything or confer blessing on the people because he stands alone and has no helpers. Is such times a man must seek out helpers with whose aid he can carry out the task. But these helpers must be modestly sought out in the retirement to which they have withdrawn. It is not in the fame nor their great names but their genuine achievements that are important. Through such modesty the right man is found, and the exceptional task is carried out in spite of all difficulties."
					}
				]
			}
		},
		{
			"number": 63,
			"name": "Chi Chi",
			"description": "After Completion",
			"trigrams": {
				"above": {
					"title": "kan",
					"description": "THE ABYSMAL, WATER"
				},
				"below": {
					"title": "li",
					"description": "THE  CLINGING, FIRE"
				}
			},
			"interpretation": {
				"oracle": "\tAFTER COMPLETION. Success in small matters.\n\tPerseverance furthers.\n\tAt the beginning good fortune.\n\tAt the end disorder.",
				"resume": "\n\nThis hexagram is the evolution of T'ai PEACE (11). The transition from \nconfusion to order is completed, and everything is in its proper place even in \nparticulars. The strong lines are in the strong places, the weak lines in the \nweak places. This is a very favorable outlook, yet it gives reason for thought. \nFor it is just when perfect equilibrium has been reached that any movement \nmay cause order to revert to disorder. The one strong line that has moved to \nthe top, thus effecting complete order in details, is followed by the other lines. \nEach moving according to its nature, and thus suddenly there arises again the \nhexagram P'i, STANDSTILL (12).\n\n  Hence the present hexagram indicates the conditions of a time of climax, \nwhich necessitate the utmost caution.\n\t",
				"judgment": "\n\nThe transition from the old to the new time is already accomplished. In \nprinciple, everything stands systematized, and it si only in regard to details \nthat success is still to be achieved. In respect to this, however, we must be \ncareful to maintain the right attitude. Everything proceeds as if of its own \naccord, and this can all too easily tempt us to relax and let thing take their \ncourse without troubling over details. Such indifference is the root of all evil. \nSymptoms of decay are bound to be the result. Here we have the rule \nindicating the usual course of history. But this rule is not an inescapable law. \nHe who understands it is in position to avoid its effects by dint of unremitting \nperseverance and caution.\n\t",
				"image": {
					"oracle": "\tWater over fire: the image of the condition \n\tIn AFTER COMPLETION.\n\tThus the superior man \n\tTakes thought of misfortune\n\tAnd arms himself against it in advance.",
					"image": "\n\nWhen water in a kettle hangs over fire, the two elements stand in relation \nand thus generate energy (cf. the production of steam). But the resulting \ntension demands caution. If the water boils over, the fire is extinguished an \nits energy is lost. If the heat is too great, the water evaporates into the air. \nThese elements here brought in to relation and thus generating energy are by \nnature hostile to each other. Only the most extreme caution can prevent \ndamage. In life too there are junctures when all forces are in balance and \nwork in harmony, so that everything seems to be in the best of order. In such \ntimes only the sage recognizes the moments that bode danger and knows how \nto banish it by means of timely precautions.\n\t\t"
				},
				"lines": [
					{
						"poem": "Nine at the beginning means:\nHe breaks his wheels.\nHe gets his tail in the water.\nNo blame.",
						"expl": "In times following a great transition, everything is pressing forward, striving in the direction of development and progress. But this pressing forward at the beginning is not good; it overshoots the mark and leads with certainty to loss and collapse. Therefore a man of strong character does not allow himself to be infected by the general intoxication but checks his course in time. He may indeed not remain altogether untouched by the disastrous consequences of the general pressure, but he is hit only from behind like a fox that, having crossed the water, at the last minute gets its tail wet. He will not suffer any real harm, because his behavior has been correct."
					},
					{
						"poem": "Six in the second place means:\nThe woman loses the curtain of her carriage.\nDo not run after it;\nOn the seventh day you will get it.",
						"expl": "When a woman drove out in her carriage, she had a curtain that hid her from the glances of the curious. It was regarded as a breach of propriety to drive on if this curtain was lost.  Applied to public life, this means that a man who wants to achieve something is not receiving that confidence of the authorities which he needs, so to speak, for his personal protection. Especially in times \"after completion\" it may happen that those who have come to power grow arrogant and conceited and no longer trouble themselves about fostering new talent.  This as a rule results in office seeking. If a man's superiors withhold their trust from him, he will seek ways and means of getting it and of drawing attention to himself. We are warned against such an unworthy procedure: \"Do not seek it.\" Do not throw yourself away on the world, but wait tranquilly and develop your personal worth by your own efforts. Times change. When the six stages of the hexagram have passed, the new era dawns. That which is a man's own cannot be permanently lost. It comes to him of its own accord. He need only be able to wait."
					},
					{
						"poem": "Nine in the third place means:\nThe Illustrious Ancestor\nDisciplines the Devil's Country.\nAfter three years he conquers it.\nInferior people must not be employed.",
						"expl": "\"Illustrious Ancestor\" is the dynastic title of the Emperor Wu Ting of the Yin dynasty. After putting his realm in order with a strong hand, he waged long colonial wars for the subjection of the Huns who occupied the northern borderland with constant threat of incursions.  The situation described is as follows. After times of completion, when a new power has arisen and everything within the country has been set in order, a period of colonial expansion almost inevitably follows. Then as a rule long-drawn-out struggles must be reckoned with. For this reason, a correct colonial policy is especially important. The territory won at such bitter cost must not be regarded as an almshouse for people who in one way or another have hade themselves impossible at home, but who are thought to be quite good enough for the colonies. Such a policy ruins at the outset any chance of success. This holds true in small as well as large matters, because it is not only rising states that carry on a colonial policy; the urge to expand, with its accompanying dangers, is part and parcel of every ambitious undertaking."
					},
					{
						"poem": "Six in the fourth place means:\nThe finest clothes turn to rags.\nBe careful all day long.",
						"expl": "In a time of flowering culture, an occasional convulsion is bound to occur, uncovering a hidden evil within society and at first causing a great sensation. But since the situation is favorable on the whole, such evils can easily be glossed over and concealed from the public. Then everything is forgotten and peace apparently reigns complacently once more. However, to the thoughtful man, such occurrences are grave omens that he does not neglect. This is the only way of averting evil consequences."
					},
					{
						"poem": "Nine in the fifth place means:\nThe neighbor in the east who slaughters an ox\nDoes not attain as much real happiness\nAs the neighbor in the west\nWith his small offering.",
						"expl": "Religious attitudes are likewise influenced by the spiritual atmosphere prevailing in times after completion. In divine worship the simple old forms are replaced by an ever more elaborate ritual and an ever greater outward display. But inner seriousness is lacking in this show of magnificence; human caprice takes the place of conscientious obedience to the divine will. However, while man sees what is before his eyes, God looks into the heart. Therefore a simple sacrifice offered with real piety holds a greater blessing than an impressive service without warmth."
					}
				]
			}
		},
		{
			"number": 64,
			"name": "Wei Chi",
			"description": "Before Completion",
			"trigrams": {
				"above": {
					"title": "li",
					"description": "THE CLINGING, FLAME"
				},
				"below": {
					"title": "kan",
					"description": "THE ABYSMAL, WATER"
				}
			},
			"interpretation": {
				"oracle": "\tBEFORE COMPLETION. Success.\n\tBut if the little fox, after nearly completing the crossing,\n\tGets his tail in the water,\n\tThere is nothing that would further.",
				"resume": "\n\nThis hexagram indicates a time when the transition from disorder to order is \nnot yet completed. The change is indeed prepared for, since all the lines in \nthe upper trigram are in relation to those in the lower. However, they are not \nyet in their places. While the preceding hexagram offers an analogy to \nautumn, which forms the transition from summer to winter, this hexagram \npresents a parallel to spring, which leads out of winter's stagnation into the \nfruitful time of summer. With this hopeful outlook the Book of Changes \ncome to its close.\n\t",
				"judgment": "\n\nThe conditions are difficult. The task is great and full of responsibility. It is \nnothing less than that of leading the world out of confusion back to order. \nBut it is a task that promises success, because there is a goal that can unite the \nforces now tending in different directions. At first, however, one must move \nwarily, like an old fox walking over ice. The caution of a fox walking over ice \nis proverbial in China. His ears are constantly alert to the cracking of the ice, \nas he carefully and circumspectly searches out the safest spots. A young fox \nwho as yet has not acquired this caution goes ahead boldly, and it may happen \nthat he falls in and gets his tail wet when he is almost across the water. Then \nof course his effort has been all in vain. Accordingly, in times \"before \ncompletion,\" deliberation and caution are the prerequisites of success.\n\t",
				"image": {
					"oracle": "\n\n\t\n\tFire over water:\n\tThe image of the condition before transition.\n\tThus the superior man is careful\n\tIn the differentiation of things,\n\tSo that each finds its place.",
					"image": "\n\nWhen fire, which by nature flames upward, is above, and water, which flows \ndownward, is below, their effects take opposite directions and remain \nunrelated. If we wish to achieve an effect, we must first investigate the \nnature of the forces in question and ascertain their proper place. If we can \nbring these forces to bear in the right place, they will have the desired effect \nand completion will be achieved. But in order to handle external forces \nproperly, we must above all arrive at the correct standpoint ourselves, for \nonly from this vantage can we work correctly.\n\t\t"
				},
				"lines": [
					{
						"poem": "Six at the beginning means:\nHe gets his tail in the water.\nHumiliating.",
						"expl": "In times of disorder there is a temptation to advance oneself as rapidly as possible in order to accomplish something tangible. But this enthusiasm leads only to failure and humiliation if the time for achievement has not yet arrived. In such time it is wise to spare ourselves the opprobrium of failure by holding back."
					},
					{
						"poem": "Nine in the second place means:\nHe brakes his wheels.\nPerseverance brings good fortune.",
						"expl": "Here again the time to act has not yet come. But the patience needed is not that of idle waiting without thought of the morrow. Kept up indefinitely, this would not lead to any success. Instead, an individual must develop in himself the strength that will enable him to go forward. He must have a vehicle, as it were, to effect the crossing. But he must for the time being use the brakes. Patience in the highest sense means putting brakes on strength. Therefore he must not fall asleep and lose sight of the goal. If he remains strong and steadfast in his resolve, all goes well in the end."
					},
					{
						"poem": "Six in the third place means:\nBefore completion, attack brings misfortune.\nIt furthers one to cross the great water.",
						"expl": "The time of transition has arrived, but one lacks the strength to complete the transition. If one should attempt to force it, disaster would result, because collapse would then be unavoidable. What is to be done? A new situation must be created; one must engage the energies of able helpers and in this fellowship take the decisive step-cross the great water. Then completion will become possible."
					},
					{
						"poem": "Nine in the fourth place means:\nPerseverance brings good fortune.\nRemorse disappears.\nShock, thus to discipline the Devil's Country.\nFor three years, great realms are rewarded.",
						"expl": "Now it is the time of struggle. The transition must be completed. We must make ourselves strong in resolution; this brings good fortune. All misgivings that might arise in such grave times of struggle must be silenced. It is a question of a fierce battle to break and to discipline the Devil's Country, the forces of decadence. But the struggle also has its reward. Now is the time to lay the foundations of power and mastery for the future."
					},
					{
						"poem": "Six in the fifth place means:\nPerseverance brings good fortune.\nNo remorse.\nThe light of the superior man is true.\nGood fortune.",
						"expl": "The victory has been won. The power of steadfastness has not been routed. Everything has gone well. All misgivings have been overcome. Success has justified the deed. The light of a superior personality shines forth anew and makes its influence felt among men who have faith in it and rally around it. The new time has arrived, and with it good fortune. And just as the sun shines forth in redoubled beauty after rain, or as a forest grows more freshly green from charred ruins after a fire, so the new era appears all the more glorious by contrast with the misery of the old."
					}
				]
			}
		}
	];

/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.TrigramImage = exports.HexagramImage = exports.YangLine = exports.YinLine = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(168);
	
	var _lodash = __webpack_require__(473);
	
	var _ = _interopRequireWildcard(_lodash);
	
	var _lookup = __webpack_require__(478);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	// Single Line
	
	var YinLine = exports.YinLine = function (_Component) {
	  _inherits(YinLine, _Component);
	
	  function YinLine() {
	    _classCallCheck(this, YinLine);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(YinLine).apply(this, arguments));
	  }
	
	  _createClass(YinLine, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'yin' },
	        _react2.default.createElement('span', null)
	      );
	    }
	  }]);
	
	  return YinLine;
	}(_react.Component);
	
	// Double line
	
	
	var YangLine = exports.YangLine = function (_Component2) {
	  _inherits(YangLine, _Component2);
	
	  function YangLine() {
	    _classCallCheck(this, YangLine);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(YangLine).apply(this, arguments));
	  }
	
	  _createClass(YangLine, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        { className: 'yang' },
	        _react2.default.createElement('span', null),
	        _react2.default.createElement('span', null)
	      );
	    }
	  }]);
	
	  return YangLine;
	}(_react.Component);
	
	var HexagramImage = exports.HexagramImage = function (_Component3) {
	  _inherits(HexagramImage, _Component3);
	
	  function HexagramImage() {
	    _classCallCheck(this, HexagramImage);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(HexagramImage).apply(this, arguments));
	  }
	
	  _createClass(HexagramImage, [{
	    key: 'render',
	
	
	    /*
	     * Draw a hexagram image.
	     * Given `below` and `above`, as an array of kuas.
	     * Or `below` and `above`, as it trigram name
	     */
	    value: function render() {
	      var _props = this.props;
	      var below = _props.below;
	      var above = _props.above;
	
	      if (_.isString(below.title) || _.isString(above.title)) {
	        below = (0, _lookup.getTrigramByName)(below.title);
	        above = (0, _lookup.getTrigramByName)(above.title);
	      }
	
	      var below_image = _.chain(this.trigramImage(below)).reverse().value();
	      var above_image = _.chain(this.trigramImage(above)).reverse().value();
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'hex-img' },
	        above_image,
	        below_image
	      );
	    }
	
	    // Generate a single trigram
	
	  }, {
	    key: 'trigramImage',
	    value: function trigramImage(trigram) {
	      var image = _.chain(trigram.trigrams).map(this.kuaTag).value();
	      return image;
	    }
	
	    // Generate a single Yin or Yang line
	
	  }, {
	    key: 'kuaTag',
	    value: function kuaTag(kua, i) {
	      var klass = kua && 'yiang' || 'yin';
	      var lines = kua && _react2.default.createElement(YangLine, { key: i }) || _react2.default.createElement(YinLine, { key: i });
	
	      return lines;
	    }
	  }]);
	
	  return HexagramImage;
	}(_react.Component);
	
	/*
	 * Single trigram image
	 */
	
	
	var TrigramImage = exports.TrigramImage = function (_HexagramImage) {
	  _inherits(TrigramImage, _HexagramImage);
	
	  function TrigramImage() {
	    _classCallCheck(this, TrigramImage);
	
	    return _possibleConstructorReturn(this, Object.getPrototypeOf(TrigramImage).apply(this, arguments));
	  }
	
	  _createClass(TrigramImage, [{
	    key: 'render',
	    value: function render() {
	      var tri = this.props.tri;
	
	      if (_.isString(tri.title)) {
	        tri = (0, _lookup.getTrigramByName)(tri.title);
	      }
	
	      var tri_image = _.chain(this.trigramImage(tri)).reverse().value();
	
	      return _react2.default.createElement(
	        'div',
	        { className: 'tri-img' },
	        tri_image
	      );
	    }
	  }]);
	
	  return TrigramImage;
	}(HexagramImage);

/***/ },
/* 481 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _lodash = __webpack_require__(473);
	
	var _ = _interopRequireWildcard(_lodash);
	
	var _HexagramActions = __webpack_require__(298);
	
	var HexagramActions = _interopRequireWildcard(_HexagramActions);
	
	var _lookup = __webpack_require__(478);
	
	var IchingTable = _interopRequireWildcard(_lookup);
	
	var _HexagramImage = __webpack_require__(480);
	
	var _materialUi = __webpack_require__(300);
	
	var _reactRouter = __webpack_require__(240);
	
	var _reactRouter2 = _interopRequireDefault(_reactRouter);
	
	var _reactRedux = __webpack_require__(168);
	
	var _reduxRouter = __webpack_require__(285);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ListPage = _react2.default.createClass({
	  displayName: 'ListPage',
	  render: function render() {
	    var _this = this;
	
	    var hexNodes = _.chain(IchingTable.getAllHexagrams()).map(function (hex) {
	      return _react2.default.createElement(_materialUi.ListItem, {
	        onClick: _this.details.bind(_this, hex),
	        key: hex.number,
	        leftAvatar: _react2.default.createElement(
	          _materialUi.Avatar,
	          { className: 'avatar' },
	          _react2.default.createElement(_HexagramImage.HexagramImage, { below: hex.trigrams.below, above: hex.trigrams.above })
	        ),
	        primaryText: _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(
	            'b',
	            null,
	            hex.name
	          ),
	          ' - ',
	          hex.description
	        )
	      });
	    }).value();
	
	    return _react2.default.createElement(
	      'div',
	      { className: 'listpage-container' },
	      _react2.default.createElement(
	        _materialUi.List,
	        { subheader: 'The King Wen sequence' },
	        hexNodes
	      )
	    );
	  },
	  details: function details(hex) {
	    window.store.dispatch((0, _reduxRouter.pushState)(null, '/details/' + hex.name, ''));
	  }
	});
	
	exports.default = (0, _reactRedux.connect)(function (state) {
	  return {};
	}, { pushState: _reduxRouter.pushState })(ListPage);

/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _lodash = __webpack_require__(473);
	
	var _ = _interopRequireWildcard(_lodash);
	
	var _classnames = __webpack_require__(483);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _HexagramActions = __webpack_require__(298);
	
	var HexagramActions = _interopRequireWildcard(_HexagramActions);
	
	var _lookup = __webpack_require__(478);
	
	var IchingTable = _interopRequireWildcard(_lookup);
	
	var _HexagramInfoCard = __webpack_require__(476);
	
	var _HexagramInfoCard2 = _interopRequireDefault(_HexagramInfoCard);
	
	var _materialUi = __webpack_require__(300);
	
	var _reactRedux = __webpack_require__(168);
	
	var _reduxRouter = __webpack_require__(285);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var DetailPage = _react2.default.createClass({
	  displayName: 'DetailPage',
	  render: function render() {
	    var p = this.props.q;
	    var hex = IchingTable.getHexagram(p.name);
	    if (!hex) {
	      return _react2.default.createElement('div', null);
	    }
	
	    var lines = _.chain(hex.interpretation.lines).map(function (line, i) {
	      return _react2.default.createElement(
	        'div',
	        { className: 'line', key: i },
	        _react2.default.createElement(
	          'blockquote',
	          null,
	          line.poem
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          line.expl
	        )
	      );
	    }).value();
	
	    var tarot_class = (0, _classnames2.default)(_defineProperty({}, 'icon-Tao_' + hex.number, true));
	    return _react2.default.createElement(
	      'div',
	      { className: 'details' },
	      _react2.default.createElement(_HexagramInfoCard2.default, { hexagram: hex, trigrams: true }),
	      _react2.default.createElement(
	        'div',
	        { className: 'interpretation' },
	        _react2.default.createElement(
	          'div',
	          { className: 'highlight' },
	          _react2.default.createElement(
	            'div',
	            { className: 'tarot' },
	            _react2.default.createElement('div', { className: tarot_class })
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'oracle' },
	            _react2.default.createElement(
	              'blockquote',
	              null,
	              hex.interpretation.oracle
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          hex.interpretation.resume
	        ),
	        _react2.default.createElement(
	          'h3',
	          null,
	          'The Image'
	        ),
	        _react2.default.createElement(_materialUi.Divider, null),
	        _react2.default.createElement(
	          'pre',
	          null,
	          hex.interpretation.image.oracle
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          hex.interpretation.image.image
	        ),
	        _react2.default.createElement(
	          'h3',
	          null,
	          'The Judgement'
	        ),
	        _react2.default.createElement(_materialUi.Divider, null),
	        _react2.default.createElement(
	          'pre',
	          null,
	          hex.interpretation.oracle
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          hex.interpretation.judgment
	        ),
	        _react2.default.createElement(
	          'h3',
	          null,
	          'The Lines'
	        ),
	        _react2.default.createElement(_materialUi.Divider, null),
	        lines
	      )
	    );
	  }
	});
	
	exports.default = (0, _reactRedux.connect)(function (state) {
	  return {
	    q: state.router.params
	  };
	}, { pushState: _reduxRouter.pushState })(DetailPage);

/***/ },
/* 483 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 484 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _deprecate = __webpack_require__(257);
	
	var _deprecate2 = _interopRequireDefault(_deprecate);
	
	var _createLocation2 = __webpack_require__(253);
	
	var _createLocation3 = _interopRequireDefault(_createLocation2);
	
	var _createBrowserHistory = __webpack_require__(485);
	
	var _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);
	
	exports.createHistory = _createBrowserHistory2['default'];
	
	var _createHashHistory2 = __webpack_require__(242);
	
	var _createHashHistory3 = _interopRequireDefault(_createHashHistory2);
	
	exports.createHashHistory = _createHashHistory3['default'];
	
	var _createMemoryHistory2 = __webpack_require__(283);
	
	var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);
	
	exports.createMemoryHistory = _createMemoryHistory3['default'];
	
	var _useBasename2 = __webpack_require__(284);
	
	var _useBasename3 = _interopRequireDefault(_useBasename2);
	
	exports.useBasename = _useBasename3['default'];
	
	var _useBeforeUnload2 = __webpack_require__(486);
	
	var _useBeforeUnload3 = _interopRequireDefault(_useBeforeUnload2);
	
	exports.useBeforeUnload = _useBeforeUnload3['default'];
	
	var _useQueries2 = __webpack_require__(263);
	
	var _useQueries3 = _interopRequireDefault(_useQueries2);
	
	exports.useQueries = _useQueries3['default'];
	
	var _Actions2 = __webpack_require__(243);
	
	var _Actions3 = _interopRequireDefault(_Actions2);
	
	exports.Actions = _Actions3['default'];
	
	// deprecated
	
	var _enableBeforeUnload2 = __webpack_require__(487);
	
	var _enableBeforeUnload3 = _interopRequireDefault(_enableBeforeUnload2);
	
	exports.enableBeforeUnload = _enableBeforeUnload3['default'];
	
	var _enableQueries2 = __webpack_require__(488);
	
	var _enableQueries3 = _interopRequireDefault(_enableQueries2);
	
	exports.enableQueries = _enableQueries3['default'];
	var createLocation = _deprecate2['default'](_createLocation3['default'], 'Using createLocation without a history instance is deprecated; please use history.createLocation instead');
	exports.createLocation = createLocation;

/***/ },
/* 485 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _invariant = __webpack_require__(178);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _Actions = __webpack_require__(243);
	
	var _ExecutionEnvironment = __webpack_require__(244);
	
	var _DOMUtils = __webpack_require__(245);
	
	var _DOMStateStorage = __webpack_require__(246);
	
	var _createDOMHistory = __webpack_require__(247);
	
	var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);
	
	var _parsePath = __webpack_require__(254);
	
	var _parsePath2 = _interopRequireDefault(_parsePath);
	
	/**
	 * Creates and returns a history object that uses HTML5's history API
	 * (pushState, replaceState, and the popstate event) to manage history.
	 * This is the recommended method of managing history in browsers because
	 * it provides the cleanest URLs.
	 *
	 * Note: In browsers that do not support the HTML5 history API full
	 * page reloads will be used to preserve URLs.
	 */
	function createBrowserHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;
	
	  var forceRefresh = options.forceRefresh;
	
	  var isSupported = _DOMUtils.supportsHistory();
	  var useRefresh = !isSupported || forceRefresh;
	
	  function getCurrentLocation(historyState) {
	    historyState = historyState || window.history.state || {};
	
	    var path = _DOMUtils.getWindowPath();
	    var _historyState = historyState;
	    var key = _historyState.key;
	
	    var state = undefined;
	    if (key) {
	      state = _DOMStateStorage.readState(key);
	    } else {
	      state = null;
	      key = history.createKey();
	
	      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);
	    }
	
	    var location = _parsePath2['default'](path);
	
	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }
	
	  function startPopStateListener(_ref) {
	    var transitionTo = _ref.transitionTo;
	
	    function popStateListener(event) {
	      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.
	
	      transitionTo(getCurrentLocation(event.state));
	    }
	
	    _DOMUtils.addEventListener(window, 'popstate', popStateListener);
	
	    return function () {
	      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);
	    };
	  }
	
	  function finishTransition(location) {
	    var basename = location.basename;
	    var pathname = location.pathname;
	    var search = location.search;
	    var hash = location.hash;
	    var state = location.state;
	    var action = location.action;
	    var key = location.key;
	
	    if (action === _Actions.POP) return; // Nothing to do.
	
	    _DOMStateStorage.saveState(key, state);
	
	    var path = (basename || '') + pathname + search + hash;
	    var historyState = {
	      key: key
	    };
	
	    if (action === _Actions.PUSH) {
	      if (useRefresh) {
	        window.location.href = path;
	        return false; // Prevent location update.
	      } else {
	          window.history.pushState(historyState, null, path);
	        }
	    } else {
	      // REPLACE
	      if (useRefresh) {
	        window.location.replace(path);
	        return false; // Prevent location update.
	      } else {
	          window.history.replaceState(historyState, null, path);
	        }
	    }
	  }
	
	  var history = _createDOMHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: _DOMStateStorage.saveState
	  }));
	
	  var listenerCount = 0,
	      stopPopStateListener = undefined;
	
	  function listenBefore(listener) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);
	
	    var unlisten = history.listenBefore(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopPopStateListener();
	    };
	  }
	
	  function listen(listener) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);
	
	    var unlisten = history.listen(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopPopStateListener();
	    };
	  }
	
	  // deprecated
	  function registerTransitionHook(hook) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);
	
	    history.registerTransitionHook(hook);
	  }
	
	  // deprecated
	  function unregisterTransitionHook(hook) {
	    history.unregisterTransitionHook(hook);
	
	    if (--listenerCount === 0) stopPopStateListener();
	  }
	
	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    registerTransitionHook: registerTransitionHook,
	    unregisterTransitionHook: unregisterTransitionHook
	  });
	}
	
	exports['default'] = createBrowserHistory;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 486 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(210);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _ExecutionEnvironment = __webpack_require__(244);
	
	var _DOMUtils = __webpack_require__(245);
	
	var _deprecate = __webpack_require__(257);
	
	var _deprecate2 = _interopRequireDefault(_deprecate);
	
	function startBeforeUnloadListener(getBeforeUnloadPromptMessage) {
	  function listener(event) {
	    var message = getBeforeUnloadPromptMessage();
	
	    if (typeof message === 'string') {
	      (event || window.event).returnValue = message;
	      return message;
	    }
	  }
	
	  _DOMUtils.addEventListener(window, 'beforeunload', listener);
	
	  return function () {
	    _DOMUtils.removeEventListener(window, 'beforeunload', listener);
	  };
	}
	
	/**
	 * Returns a new createHistory function that can be used to create
	 * history objects that know how to use the beforeunload event in web
	 * browsers to cancel navigation.
	 */
	function useBeforeUnload(createHistory) {
	  return function (options) {
	    var history = createHistory(options);
	
	    var stopBeforeUnloadListener = undefined;
	    var beforeUnloadHooks = [];
	
	    function getBeforeUnloadPromptMessage() {
	      var message = undefined;
	
	      for (var i = 0, len = beforeUnloadHooks.length; message == null && i < len; ++i) {
	        message = beforeUnloadHooks[i].call();
	      }return message;
	    }
	
	    function listenBeforeUnload(hook) {
	      beforeUnloadHooks.push(hook);
	
	      if (beforeUnloadHooks.length === 1) {
	        if (_ExecutionEnvironment.canUseDOM) {
	          stopBeforeUnloadListener = startBeforeUnloadListener(getBeforeUnloadPromptMessage);
	        } else {
	          process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'listenBeforeUnload only works in DOM environments') : undefined;
	        }
	      }
	
	      return function () {
	        beforeUnloadHooks = beforeUnloadHooks.filter(function (item) {
	          return item !== hook;
	        });
	
	        if (beforeUnloadHooks.length === 0 && stopBeforeUnloadListener) {
	          stopBeforeUnloadListener();
	          stopBeforeUnloadListener = null;
	        }
	      };
	    }
	
	    // deprecated
	    function registerBeforeUnloadHook(hook) {
	      if (_ExecutionEnvironment.canUseDOM && beforeUnloadHooks.indexOf(hook) === -1) {
	        beforeUnloadHooks.push(hook);
	
	        if (beforeUnloadHooks.length === 1) stopBeforeUnloadListener = startBeforeUnloadListener(getBeforeUnloadPromptMessage);
	      }
	    }
	
	    // deprecated
	    function unregisterBeforeUnloadHook(hook) {
	      if (beforeUnloadHooks.length > 0) {
	        beforeUnloadHooks = beforeUnloadHooks.filter(function (item) {
	          return item !== hook;
	        });
	
	        if (beforeUnloadHooks.length === 0) stopBeforeUnloadListener();
	      }
	    }
	
	    return _extends({}, history, {
	      listenBeforeUnload: listenBeforeUnload,
	
	      registerBeforeUnloadHook: _deprecate2['default'](registerBeforeUnloadHook, 'registerBeforeUnloadHook is deprecated; use listenBeforeUnload instead'),
	      unregisterBeforeUnloadHook: _deprecate2['default'](unregisterBeforeUnloadHook, 'unregisterBeforeUnloadHook is deprecated; use the callback returned from listenBeforeUnload instead')
	    });
	  };
	}
	
	exports['default'] = useBeforeUnload;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 487 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _deprecate = __webpack_require__(257);
	
	var _deprecate2 = _interopRequireDefault(_deprecate);
	
	var _useBeforeUnload = __webpack_require__(486);
	
	var _useBeforeUnload2 = _interopRequireDefault(_useBeforeUnload);
	
	exports['default'] = _deprecate2['default'](_useBeforeUnload2['default'], 'enableBeforeUnload is deprecated, use useBeforeUnload instead');
	module.exports = exports['default'];

/***/ },
/* 488 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _deprecate = __webpack_require__(257);
	
	var _deprecate2 = _interopRequireDefault(_deprecate);
	
	var _useQueries = __webpack_require__(263);
	
	var _useQueries2 = _interopRequireDefault(_useQueries);
	
	exports['default'] = _deprecate2['default'](_useQueries2['default'], 'enableQueries is deprecated, use useQueries instead');
	module.exports = exports['default'];

/***/ },
/* 489 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _hexagram = __webpack_require__(490);
	
	var _redux = __webpack_require__(158);
	
	var _reduxRouter = __webpack_require__(285);
	
	exports.default = (0, _redux.combineReducers)({
	  kuas: _hexagram.kuaCreated,
	  hexagram: _hexagram.hexagramCreated,
	  router: _reduxRouter.routerStateReducer
	});

/***/ },
/* 490 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.generateKua = generateKua;
	exports.kuaCreated = kuaCreated;
	exports.hexagramCreated = hexagramCreated;
	
	var _ActionTypes = __webpack_require__(299);
	
	var _lodash = __webpack_require__(473);
	
	var _ = _interopRequireWildcard(_lodash);
	
	var _HexagramActions = __webpack_require__(298);
	
	var HexagramActions = _interopRequireWildcard(_HexagramActions);
	
	var _lookup = __webpack_require__(478);
	
	var IchingTable = _interopRequireWildcard(_lookup);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	window.IchingTable = IchingTable;
	
	function throwCoin() {
	  return Math.random() >= 0.5;
	}
	
	function kuaName(sum) {
	  switch (sum) {
	    case 9:
	      return 'old-yang'; // yang change to yin
	    case 8:
	      return 'young-yang';
	    case 7:
	      return 'young-yin';
	    case 6:
	      return 'old-yin'; // yin change to yang
	    default:
	      return 'shit';
	  }
	}
	
	/**
	 * Generate a single kua.  3 coins method.
	 *
	 * {value: 8 , name: 'young-yin'}
	 */
	function generateKua() {
	
	  // Throw 3 coins, head = 3, tails = 2
	  var coins = _.times(3, throwCoin);
	
	  var coinsValue = _.map(coins, function (coin) {
	    if (coin) return 3;
	    return 2;
	  });
	
	  /* Iching Coin Method
	  * 9 = 3 heads = Old Yang
	  * 8 = 2 heads = Young Yang
	  * 7 = 2 tails = Young Yin
	  * 6 = 3 tails = Old Yin
	  */
	  var kuaSum = _.sum(coinsValue);
	  var kua = kuaName(kuaSum);
	
	  // Yang is 0, Yin is 1
	  if (kua === 'old-yang' || kua === 'young-yang') {
	    kua = 0;
	  } else {
	    kua = 1;
	  }
	
	  return kua;
	}
	
	// Single Line KUA Reducer
	function kuaCreated() {
	  var state = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
	  var action = arguments[1];
	
	  switch (action.type) {
	    case _ActionTypes.HEXAGRAM_GENERATE_KUA:
	      return [].concat(_toConsumableArray(state), [generateKua()]);
	    case _ActionTypes.HEXAGRAM_CLEAR:
	      return [];
	    default:
	      return state;
	  }
	}
	
	// From 6 given kuas, fetch the interpretation
	function hexagramCreated() {
	  var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var action = arguments[1];
	
	  switch (action.type) {
	    case _ActionTypes.HEXAGRAM_GENERATED:
	      return IchingTable.getHexagram(window.store.getState().kuas);
	    case _ActionTypes.HEXAGRAM_CLEAR:
	      return {};
	    default:
	      return state;
	  }
	}

/***/ },
/* 491 */
/***/ function(module, exports, __webpack_require__) {

	var defaultClickRejectionStrategy = __webpack_require__(492);
	
	module.exports = function injectTapEventPlugin (strategyOverrides) {
	  strategyOverrides = strategyOverrides || {}
	  var shouldRejectClick = strategyOverrides.shouldRejectClick || defaultClickRejectionStrategy;
	
	  __webpack_require__(31).injection.injectEventPluginsByName({
	    "TapEventPlugin":       __webpack_require__(493)(shouldRejectClick)
	  });
	};


/***/ },
/* 492 */
/***/ function(module, exports) {

	module.exports = function(lastTouchEvent, clickTimestamp) {
	  if (lastTouchEvent && (clickTimestamp - lastTouchEvent) < 750) {
	    return true;
	  }
	};


/***/ },
/* 493 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule TapEventPlugin
	 * @typechecks static-only
	 */
	
	"use strict";
	
	var EventConstants = __webpack_require__(30);
	var EventPluginUtils = __webpack_require__(33);
	var EventPropagators = __webpack_require__(73);
	var SyntheticUIEvent = __webpack_require__(87);
	var TouchEventUtils = __webpack_require__(494);
	var ViewportMetrics = __webpack_require__(38);
	
	var keyOf = __webpack_require__(495);
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var isStartish = EventPluginUtils.isStartish;
	var isEndish = EventPluginUtils.isEndish;
	
	var isTouch = function(topLevelType) {
	  var touchTypes = [
	    topLevelTypes.topTouchCancel,
	    topLevelTypes.topTouchEnd,
	    topLevelTypes.topTouchStart,
	    topLevelTypes.topTouchMove
	  ];
	  return touchTypes.indexOf(topLevelType) >= 0;
	}
	
	/**
	 * Number of pixels that are tolerated in between a `touchStart` and `touchEnd`
	 * in order to still be considered a 'tap' event.
	 */
	var tapMoveThreshold = 10;
	var ignoreMouseThreshold = 750;
	var startCoords = {x: null, y: null};
	var lastTouchEvent = null;
	
	var Axis = {
	  x: {page: 'pageX', client: 'clientX', envScroll: 'currentPageScrollLeft'},
	  y: {page: 'pageY', client: 'clientY', envScroll: 'currentPageScrollTop'}
	};
	
	function getAxisCoordOfEvent(axis, nativeEvent) {
	  var singleTouch = TouchEventUtils.extractSingleTouch(nativeEvent);
	  if (singleTouch) {
	    return singleTouch[axis.page];
	  }
	  return axis.page in nativeEvent ?
	    nativeEvent[axis.page] :
	    nativeEvent[axis.client] + ViewportMetrics[axis.envScroll];
	}
	
	function getDistance(coords, nativeEvent) {
	  var pageX = getAxisCoordOfEvent(Axis.x, nativeEvent);
	  var pageY = getAxisCoordOfEvent(Axis.y, nativeEvent);
	  return Math.pow(
	    Math.pow(pageX - coords.x, 2) + Math.pow(pageY - coords.y, 2),
	    0.5
	  );
	}
	
	var touchEvents = [
	  topLevelTypes.topTouchStart,
	  topLevelTypes.topTouchCancel,
	  topLevelTypes.topTouchEnd,
	  topLevelTypes.topTouchMove,
	];
	
	var dependencies = [
	  topLevelTypes.topMouseDown,
	  topLevelTypes.topMouseMove,
	  topLevelTypes.topMouseUp,
	].concat(touchEvents);
	
	var eventTypes = {
	  touchTap: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchTap: null}),
	      captured: keyOf({onTouchTapCapture: null})
	    },
	    dependencies: dependencies
	  }
	};
	
	var now = (function() {
	  if (Date.now) {
	    return Date.now;
	  } else {
	    // IE8 support: http://stackoverflow.com/questions/9430357/please-explain-why-and-how-new-date-works-as-workaround-for-date-now-in
	    return function () {
	      return +new Date;
	    }
	  }
	})();
	
	function createTapEventPlugin(shouldRejectClick) {
	  return {
	
	    tapMoveThreshold: tapMoveThreshold,
	
	    ignoreMouseThreshold: ignoreMouseThreshold,
	
	    eventTypes: eventTypes,
	
	    /**
	     * @param {string} topLevelType Record from `EventConstants`.
	     * @param {DOMEventTarget} topLevelTarget The listening component root node.
	     * @param {string} topLevelTargetID ID of `topLevelTarget`.
	     * @param {object} nativeEvent Native browser event.
	     * @return {*} An accumulation of synthetic events.
	     * @see {EventPluginHub.extractEvents}
	     */
	    extractEvents: function(
	        topLevelType,
	        topLevelTarget,
	        topLevelTargetID,
	        nativeEvent,
	        nativeEventTarget) {
	
	      if (isTouch(topLevelType)) {
	        lastTouchEvent = now();
	      } else {
	        if (shouldRejectClick(lastTouchEvent, now())) {
	          return null;
	        }
	      }
	
	      if (!isStartish(topLevelType) && !isEndish(topLevelType)) {
	        return null;
	      }
	      var event = null;
	      var distance = getDistance(startCoords, nativeEvent);
	      if (isEndish(topLevelType) && distance < tapMoveThreshold) {
	        event = SyntheticUIEvent.getPooled(
	          eventTypes.touchTap,
	          topLevelTargetID,
	          nativeEvent,
	          nativeEventTarget
	        );
	      }
	      if (isStartish(topLevelType)) {
	        startCoords.x = getAxisCoordOfEvent(Axis.x, nativeEvent);
	        startCoords.y = getAxisCoordOfEvent(Axis.y, nativeEvent);
	      } else if (isEndish(topLevelType)) {
	        startCoords.x = 0;
	        startCoords.y = 0;
	      }
	      EventPropagators.accumulateTwoPhaseDispatches(event);
	      return event;
	    }
	
	  };
	}
	
	module.exports = createTapEventPlugin;


/***/ },
/* 494 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2014 Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule TouchEventUtils
	 */
	
	var TouchEventUtils = {
	  /**
	   * Utility function for common case of extracting out the primary touch from a
	   * touch event.
	   * - `touchEnd` events usually do not have the `touches` property.
	   *   http://stackoverflow.com/questions/3666929/
	   *   mobile-sarai-touchend-event-not-firing-when-last-touch-is-removed
	   *
	   * @param {Event} nativeEvent Native event that may or may not be a touch.
	   * @return {TouchesObject?} an object with pageX and pageY or null.
	   */
	  extractSingleTouch: function(nativeEvent) {
	    var touches = nativeEvent.touches;
	    var changedTouches = nativeEvent.changedTouches;
	    var hasTouches = touches && touches.length > 0;
	    var hasChangedTouches = changedTouches && changedTouches.length > 0;
	
	    return !hasTouches && hasChangedTouches ? changedTouches[0] :
	           hasTouches ? touches[0] :
	           nativeEvent;
	  }
	};
	
	module.exports = TouchEventUtils;


/***/ },
/* 495 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyOf
	 */
	
	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	"use strict";
	
	var keyOf = function (oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};
	
	module.exports = keyOf;

/***/ },
/* 496 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ }
]);
//# sourceMappingURL=main.js.map